"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[3268],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?i.createElement(h,a(a({ref:t},p),{},{components:n})):i.createElement(h,a({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},22437:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(87462),r=(n(67294),n(3905));const o={},a="Prometheus Endpoint",s={unversionedId:"learn/core-concepts/metrics/prometheus",id:"learn/core-concepts/metrics/prometheus",title:"Prometheus Endpoint",description:"The controller can expose a /metrics endpoint that serves network metrics in the Prometheus text exposition format.",source:"@site/docs/learn/core-concepts/metrics/40-prometheus.md",sourceDirName:"learn/core-concepts/metrics",slug:"/learn/core-concepts/metrics/prometheus",permalink:"/docs/learn/core-concepts/metrics/prometheus",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/40-prometheus.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{},sidebar:"docsSidebar",previous:{title:"On Demand",permalink:"/docs/learn/core-concepts/metrics/inspect"},next:{title:"Using Grafana",permalink:"/docs/learn/core-concepts/metrics/grafana"}},c={},l=[{value:"Ziti Configuration",id:"ziti-configuration",level:2},{value:"Binding",id:"binding",level:3},{value:"Listener Just for Metrics",id:"listener-just-for-metrics",level:4},{value:"Add Metrics API to an Existing Listener",id:"add-metrics-api-to-an-existing-listener",level:4},{value:"Authentication",id:"authentication",level:3},{value:"Timestamps",id:"timestamps",level:3},{value:"Prometheus Configuration",id:"prometheus-configuration",level:3},{value:"TLS Configuration",id:"tls-configuration",level:4},{value:"With Authentication",id:"with-authentication",level:4},{value:"Examples",id:"examples",level:2},{value:"Setup Metrics Authentication",id:"setup-metrics-authentication",level:3},{value:"Create a cert for metric scraping",id:"create-a-cert-for-metric-scraping",level:4},{value:"Add the Cert to Ziti",id:"add-the-cert-to-ziti",level:4},{value:"Test the Key",id:"test-the-key",level:4},{value:"Add the Key to Prometheus",id:"add-the-key-to-prometheus",level:4}],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"prometheus-endpoint"},"Prometheus Endpoint"),(0,r.kt)("p",null,"The controller can expose a ",(0,r.kt)("inlineCode",{parentName:"p"},"/metrics")," endpoint that serves network metrics in the Prometheus ",(0,r.kt)("a",{parentName:"p",href:"https://prometheus.io/docs/instrumenting/exposition_formats/#text-based-format"},"text exposition format"),". "),(0,r.kt)("p",null,"The endpoint is exposed over HTTPS, and has optional support for client authentication via a certificate."),(0,r.kt)("h2",{id:"ziti-configuration"},"Ziti Configuration"),(0,r.kt)("p",null,"The Prometheus metric binding is configured as part of the controller configuration file."),(0,r.kt)("h3",{id:"binding"},"Binding"),(0,r.kt)("p",null,"The Prometheus metrics api is not bound to any interface by default. The metrics api can be bound to the same network interface and port as the other Ziti APIs, or it can be set up on its own interface and/or port.   "),(0,r.kt)("h4",{id:"listener-just-for-metrics"},"Listener Just for Metrics"),(0,r.kt)("p",null,"The metric api can be configured to listen on its own combination of network interface and port by adding a new section under the ",(0,r.kt)("inlineCode",{parentName:"p"},"web")," configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"web\n  # Binding for other Ziti APIs\n  - name: apis\n    bindPoints:\n      - interface: 0.0.0.0:1280\n        address: 0.0.0.0:1280\n    options:\n      idleTimeout: 5000ms  #http timeouts, new\n      readTimeout: 5000ms\n      writeTimeout: 100000ms\n    apis:\n      # binding - required\n      # Specifies an API to bind to this webListener. Built-in APIs are\n      #   - health-checks\n      #   - edge-management\n      #   - edge-client\n      #   - fabric-management\n      #   - metrics\n      - binding: health-checks\n        options: { }\n      - binding: fabric\n      - binding: edge-management\n        # options - variable optional/required\n        # This section is used to define values that are specified by the API they are associated with.\n        # These settings are per API. The example below is for the `edge-api` and contains both optional values and\n        # required values.\n        options: { }\n      - binding: edge-client\n        options: { }\n\n  # New binding for metrics\n  - name: apis-metrics-localhost\n    bindPoints:\n      #interface - required\n      # A host:port string on which network interface to listen on. 0.0.0.0 will listen on all interfaces\n      - interface: 127.0.0.1:2112\n\n        # address - required\n        # The public address that external incoming requests will be able to resolve. Used in request processing and\n        # response content that requires full host:port/path addresses.\n        address: 127.0.0.1:2112\n    options:\n    apis:\n      - binding: metrics\n        options: { }\n")),(0,r.kt)("h4",{id:"add-metrics-api-to-an-existing-listener"},"Add Metrics API to an Existing Listener"),(0,r.kt)("p",null,"The metrics binding can be added to an existing listener in the controller. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"web\n  -name: apis\n   bindpoints:\n   apis: \n      - binding: health-checks\n        options: { }\n      - binding: fabric\n      - binding: edge-management\n        options: { }\n      - binding: edge-client\n        options: { }\n      - binding: metrics\n        options: { }\n")),(0,r.kt)("h3",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"Authentication is done by adding a client certificate to the metrics binding.  The metrics endpoint will return a 401 if this certificate is not presented by clients when they connect."),(0,r.kt)("p",null,"The certificate is completely stand-alone - it does not need to be signed by Ziti."),(0,r.kt)("p",null,"The configuration is added as an option in the metrics binding.  The file must be an x509 certificate. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'     - binding: metrics\n        options: {\n          scrapeCert: "/etc/prometheus/prom-client.crt"\n        }\n')),(0,r.kt)("h3",{id:"timestamps"},"Timestamps"),(0,r.kt)("p",null,"OpenZiti can export timestamps in the Prometheus metrics. These timestamps can be helpful to align metrics with application logs if there is any clock skew across the OpenZiti network."),(0,r.kt)("p",null,"Timestamps are disabled by default, and can be enabled by setting a the ",(0,r.kt)("inlineCode",{parentName:"p"},"includeTimestamps")," option to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," in the metrics binding:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"web\n  -name: apis\n   bindpoints:\n   apis:\n      - binding: health-checks\n        options: { }\n      - binding: fabric\n      - binding: edge-management\n        options: { }\n      - binding: edge-client\n        options: { }\n      - binding: metrics\n        options: {\n          includeTimestamps: true\n        }\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Prometheus will silently discard metrics that are older than five minutes.")),(0,r.kt)("h3",{id:"prometheus-configuration"},"Prometheus Configuration"),(0,r.kt)("h4",{id:"tls-configuration"},"TLS Configuration"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"/metrics")," api requires TLS configuration in Prometheus. The Prometheus scrape config must have the ziti web public key, or be configured to ignore private keys."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"  - job_name: ziti\n    scheme: https\n    metrics_path: /metrics\n    honor_labels: true\n    honor_timestamps: true\n    tls_config:\n      // Path to the cert file with the ziti public key\n      ca_file: /etc/prometheus/server.crt\n      // OR ignore the key \n      insecure_skip_verify: true\n    static_configs:\n      - targets:\n        - '127.0.0.1:2112'\n")),(0,r.kt)("h4",{id:"with-authentication"},"With Authentication"),(0,r.kt)("p",null,"It's a good idea to have metrics protected by a certificate to prevent nefarious actors from pulling metrics about your network.  The Prometheus scrape configuration can be configured with a keystore for this purpose:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"}," - job_name: ziti\n    scheme: https\n    metrics_path: /metrics\n    honor_labels: true\n    honor_timestamps: true\n    tls_config:\n      cert_file: /etc/prometheus/prom-client.crt\n      key_file: /etc/prometheus/prom-client.key\n      ca_file: /etc/prometheus/server.crt\n    static_configs:\n      - targets:\n        - '127.0.0.1:2112'\n\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"setup-metrics-authentication"},"Setup Metrics Authentication"),(0,r.kt)("p",null,"In this example you will:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a new cert and signing request"),(0,r.kt)("li",{parentName:"ol"},"Sign the key"),(0,r.kt)("li",{parentName:"ol"},"Add the key into your controller configuration"),(0,r.kt)("li",{parentName:"ol"},"Add the key to your prometheus scrape config")),(0,r.kt)("h4",{id:"create-a-cert-for-metric-scraping"},"Create a cert for metric scraping"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"# Create the certificate and signing request\nopenssl req  -new  -newkey rsa:2048  -nodes  -keyout prom-client.key  -out prom-client.csr\n\n# Process the cert signing signing request.  This cert will be good for 10 years.\nopenssl  x509  -req  -days 3650 -in /tmp/prom-client.csr  -signkey prom-client.key  -out prom-client.crt \n")),(0,r.kt)("h4",{id:"add-the-cert-to-ziti"},"Add the Cert to Ziti"),(0,r.kt)("p",null,"Open your ziti configuration file and set up the metrics api binding as shown in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Authentication")," section above. "),(0,r.kt)("p",null,"Some common things to watch out for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The controller will need to be restarted after editing the configuration file")),(0,r.kt)("p",null,"Best practices is to use a separate metrics listener that is only accessible from Prometheus.  This configuration will expose the ",(0,r.kt)("inlineCode",{parentName:"p"},"metrics/")," on the loopback address, port 2112."),(0,r.kt)("p",null,"Add this text to the ",(0,r.kt)("inlineCode",{parentName:"p"},"web")," section of your network controller configuration file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'  - name: metrics-localhost\n    bindPoints:\n      - interface: 127.0.0.1:2112\n        address: 127.0.0.1:2112\n    apis:\n      - binding: metrics\n        options: {\n          scrapeCert: "/path/to/prom-client.crt"\n        }\n\n')),(0,r.kt)("h4",{id:"test-the-key"},"Test the Key"),(0,r.kt)("p",null,"I use ",(0,r.kt)("inlineCode",{parentName:"p"},"curl")," to test my keys when I set up metrics.  If Ziti is configured to bind metrics to ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1:2112")," then curl command will be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"curl -i -k --cert /path/to/prom-client.crt --key /path/to/prom-client.key https://127.0.0.1:2112/metrics\n")),(0,r.kt)("p",null,"The options to the curl command mean:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"-i:")," Print the http status code and response headers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"-k:")," Ziti uses a self-signed cert, this option tells curl to ignore the server certificate"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"--cert:")," The path to the prom-client.crt created above"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"--key:")," The path to prom-client.key created above")),(0,r.kt)("p",null,"The result should spit out a bunch of metrics.   If you see a ",(0,r.kt)("inlineCode",{parentName:"p"},"401")," response then double-check that you've copied all of the bits from the certificate into the controller configuration file."),(0,r.kt)("h4",{id:"add-the-key-to-prometheus"},"Add the Key to Prometheus"),(0,r.kt)("p",null,"The key is added to Prometheus by referencing the crt and key files from the Ziti scrape configuration. "),(0,r.kt)("p",null,"Your scrape config will look something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"global:\n  scrape_interval: 10s\n  scrape_timeout: 10s\n\nrule_files:\n  - alert.yml\n\nscrape_configs:\n  - job_name: self\n    metrics_path: /metrics\n    static_configs:\n      - targets:\n        - 'prometheus:9090'\n\n  - job_name: ziti\n    scheme: https\n    metrics_path: /metrics\n    honor_labels: true # Ziti supplies system labels for the edge routers, so we need to obey them\n    honor_timestamps: true # Honor server timestamps instead of using the scrape timestamp for metrics\n    tls_config:\n      cert_file: /path/to/prom-client.crt\n      key_file: /path/to/prom-client.key\n      insecure_skip_verify: true\n    static_configs:\n      - targets:\n        - '127.0.0.1:2112'\n")))}m.isMDXComponent=!0}}]);