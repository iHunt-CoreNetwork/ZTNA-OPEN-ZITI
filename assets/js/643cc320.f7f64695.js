"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[5417],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||l;return n?i.createElement(h,o(o({ref:t},d),{},{components:n})):i.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[c]="string"==typeof e?e:a,o[1]=r;for(var p=2;p<l;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},44578:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var i=n(87462),a=(n(67294),n(3905));const l={sidebar_label:"Controller",sidebar_position:20},o="Controller Configuration Reference",r={unversionedId:"reference/configuration/controller",id:"reference/configuration/controller",title:"Controller Configuration Reference",description:"OpenZiti uses configuration files for controllers that are in the YAML format.",source:"@site/docs/reference/30-configuration/controller.md",sourceDirName:"reference/30-configuration",slug:"/reference/configuration/controller",permalink:"/docs/reference/configuration/controller",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/30-configuration/controller.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_label:"Controller",sidebar_position:20},sidebar:"docsSidebar",previous:{title:"Conventions",permalink:"/docs/reference/configuration/conventions"},next:{title:"Router",permalink:"/docs/reference/configuration/router"}},s={},p=[{value:"Sections",id:"sections",level:2},{value:"<code>ctrl</code>",id:"ctrl",level:3},{value:"<code>db</code>",id:"db",level:3},{value:"<code>edge</code>",id:"edge",level:3},{value:"<code>api</code>",id:"api",level:4},{value:"<code>enrollment</code>",id:"enrollment",level:4},{value:"<code>signingCert</code>",id:"signingcert",level:4},{value:"<code>edgeIdentity</code>",id:"edgeidentity",level:4},{value:"<code>edgeRouter</code>",id:"edgerouter",level:4},{value:"<code>events</code>",id:"events",level:3},{value:"<code>healthChecks</code>",id:"healthchecks",level:3},{value:"<code>identity</code>",id:"identity",level:3},{value:"<code>network</code>",id:"network",level:3},{value:"<code>profile</code>",id:"profile",level:3},{value:"<code>raft</code>",id:"raft",level:3},{value:"<code>trace</code>",id:"trace",level:3},{value:"<code>web</code>",id:"web",level:3},{value:"<code>v</code>",id:"v",level:3}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"controller-configuration-reference"},"Controller Configuration Reference"),(0,a.kt)("p",null,"OpenZiti uses configuration files for controllers that are in the ",(0,a.kt)("a",{parentName:"p",href:"https://yaml.org/"},"YAML")," format.\nAll configuration files are also subject to a set of ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/configuration/conventions"},"conventions")," such as\nenvironment variable substitution, identity sections, and addressing formats."),(0,a.kt)("h2",{id:"sections"},"Sections"),(0,a.kt)("p",null,"The controller configuration file has several top level configuration sections that group together\nrelated configuration settings."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#ctrl"},(0,a.kt)("inlineCode",{parentName:"a"},"ctrl"))," - define control channel listener"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#db"},(0,a.kt)("inlineCode",{parentName:"a"},"db"))," - specifies database file location"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#edge"},(0,a.kt)("inlineCode",{parentName:"a"},"edge"))," - configures edge specific functionality"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#events"},(0,a.kt)("inlineCode",{parentName:"a"},"events"))," - allows configuration of event output"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#healthchecks"},(0,a.kt)("inlineCode",{parentName:"a"},"healthChecks"))," - enables controller database health checks for transactions"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#identity"},(0,a.kt)("inlineCode",{parentName:"a"},"identity"))," - configures the certificates used for outbound client connections, server\nlistening, and CA bundles"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#network"},(0,a.kt)("inlineCode",{parentName:"a"},"network"))," - set network level cost values"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#profile"},(0,a.kt)("inlineCode",{parentName:"a"},"profile"))," - enables profiling of controller memory and CPU statistics"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#raft"},(0,a.kt)("inlineCode",{parentName:"a"},"raft"))," - allows configuring the controller in an HA cluster"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#trace"},(0,a.kt)("inlineCode",{parentName:"a"},"trace"))," - adds a peek handler to all controller messaging for debug purposes"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#web"},(0,a.kt)("inlineCode",{parentName:"a"},"web"))," - configures API presentation exposure"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#v"},(0,a.kt)("inlineCode",{parentName:"a"},"v"))," - A special section to note the version of the configuration file, only ",(0,a.kt)("inlineCode",{parentName:"li"},"v: 3")," is\ncurrently supported")),(0,a.kt)("p",null,"The standard OpenZiti experience minimally requires the following sections:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ctrl")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"db")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"raft")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"identity")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"edge")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"web")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"v"))),(0,a.kt)("p",null,"Of those values, to start the controller only the ",(0,a.kt)("inlineCode",{parentName:"p"},"ctrl"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"db")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"raft"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"v"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"identity"),"\nsections are required. However, not including the ",(0,a.kt)("inlineCode",{parentName:"p"},"edge"),' section will start the controller in "\nfabric only" mode and will not support any edge functionality or concepts (identities, JWT\nenrollment, 3rd Party CAs, policies, etc.). Not including the ',(0,a.kt)("inlineCode",{parentName:"p"},"web")," section will result in none of\nthe REST APIs (fabric management API, edge client API, edge management API, health check API) being\nstarted. Without the edge and fabric management APIs running administration of the network will be\nimpossible. Without the edge client API running it will be impossible for Edge clients to connect to\nservices."),(0,a.kt)("p",null,"Example Minimum Controller Configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"v: 3\n\ndb: ctrl.db\n\nidentity:\n  cert: ctrl-client.cert.pem\n  server_cert: ctrl-server.cert.pem\n  key: ctrl.key.pem\n  ca: ca-chain.cert.pem\n\nctrl:\n  listener: tls:127.0.0.1:6262\n\nedge:\n  enrollment:\n    signingCert:\n      cert: intermediate.cert.pem\n      key: intermediate.key.pem\n\n\nweb:\n  - name: all-apis-localhost\n    bindPoints:\n      - interface: 127.0.0.1:1280\n        address: 127.0.0.1:1280\n    apis:\n      - binding: fabric\n      - binding: edge-management\n      - binding: edge-client\n")),(0,a.kt)("h3",{id:"ctrl"},(0,a.kt)("inlineCode",{parentName:"h3"},"ctrl")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ctrl")," section configures how the controller will listen for incoming connections from routers.\nThis includes the protocol(s) used for router connections and how those connections are managed."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"listener")," - (required) is in the format of ",(0,a.kt)("inlineCode",{parentName:"li"},"<protocol>:<interface>:<port>")," format. The value set\nhere must be resolvable by routers and correspond the routers ",(0,a.kt)("inlineCode",{parentName:"li"},"ctrl.endpoint")," configuration value.\nSee ",(0,a.kt)("a",{parentName:"li",href:"/docs/reference/configuration/conventions#addressing"},"addressing"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"advertiseAddress")," - (required when raft is enabled) - configures the address at which this\ncontroller should be reachable by other controllers in the cluster"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"options")," - a set of option which includes the below options and those defined\nin ",(0,a.kt)("a",{parentName:"li",href:"/docs/reference/configuration/conventions#channel"},"channel options"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"newListener")," - (optional) an ",(0,a.kt)("inlineCode",{parentName:"li"},"<protocol>:<interface>:<port>")," address that is sent to routers\nto indicate a controller address migration. Should only be specified when the new listener\naddress is reachable as clients will begin to use the new value on restart"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"peerHeartbeats")," - (optional) set of options for configuring heartbeats to other controllers in\nthe cluster. See ",(0,a.kt)("a",{parentName:"li",href:"/docs/reference/configuration/conventions/#heartbeats"},"heartbeats"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"routerHeartbeats")," - (optional) set of options for configuring heartbeats to routers.\nSee ",(0,a.kt)("a",{parentName:"li",href:"/docs/reference/configuration/conventions/#heartbeats"},"heartbeats"),".")),(0,a.kt)("p",null,"Example w/o options:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"ctrl:\n  listener: tls:127.0.0.1:6262\n")),(0,a.kt)("p",null,"Example w/ options:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"ctrl:\n  listener: tls:127.0.0.1:6262\n  options:\n    maxQueuedConnects: 1000\n    maxOutstandingConnects: 16\n    connectTimeoutMs: 1000\n    writeTimeout: 15s\n")),(0,a.kt)("h3",{id:"db"},(0,a.kt)("inlineCode",{parentName:"h3"},"db")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"db")," section is a single scalar value that defines the path to the database file that the\ncontroller should use. OpenZiti uses a file backed in memory database. This path may be on the same\nor different drive. This section is required."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"db: /mnt/fast-drive/db/ctrl.db\n")),(0,a.kt)("h3",{id:"edge"},(0,a.kt)("inlineCode",{parentName:"h3"},"edge")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"edge")," section instructs the controller to start the edge components. If the section is not\ndefined, all edge functionality will be disabled. This includes all features associated with\nidentities (e.g. identity enrollment), 3rd Party CAs, policies, edge router connections, posture\nchecks, and more. It is highly unlikely that this section should be omitted."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"edge")," section also has the following subsections:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"api")," - (required) defines API specific configuration"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"enrollment")," - (required) defines enrollment specific configuration")),(0,a.kt)("p",null,"Example Minimum Edge:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"edge:\n  enrollment:\n    signingCert:\n      cert: intermediate.cert.pem\n      key: intermediate.key.pem\n")),(0,a.kt)("p",null,"Example Fully Defined:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"edge:\n  api:\n    activityUpdateInterval: 90s\n    activityUpdateBatchSize: 250\n    sessionTimeout: 30m\n    address: 127.0.0.1:1280\n  enrollment:\n    signingCert:\n      cert: intermediate.cert.pem\n      key: intermediate.key.pem\n    edgeIdentity:\n      duration: 5m\n    edgeRouter:\n      duration: 5m\n\n")),(0,a.kt)("h4",{id:"api"},(0,a.kt)("inlineCode",{parentName:"h4"},"api")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"api")," section within the ",(0,a.kt)("inlineCode",{parentName:"p"},"edge")," section defines API specific functionality."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"activityUpdateInterval")," - (optional) the interval used to buffer API Session usage notices"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sessionTimeout")," - (optional) The amount of time an edge API Session remains alive after the last\nREST API Request was processed or the last edge router connection for an API Session was closed"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"address")," - (required) the ",(0,a.kt)("inlineCode",{parentName:"li"},"<host>:<port>")," combination that should be used to externally resolve\nto the edge client API")),(0,a.kt)("p",null,"For ",(0,a.kt)("inlineCode",{parentName:"p"},"activityUpdateInterval"),", Edge Routers report connected API Sessions periodically and the\ncontroller tracks REST API requests. ",(0,a.kt)("inlineCode",{parentName:"p"},"activityUpdateInterval")," defines the interval those updates are\ncollated and buffered over. This is done to reduce the number of database writes required to persist\nAPI Session activity data. During the interval period the controller will buffer updates and flush\nat the end. Increasing this interval may increase the chance of unsaved updates on controller crash\nor kill. Decreasing it will increase the frequency of database writes. The default should be\nsufficient."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"address")," setting is unique as it must match the ",(0,a.kt)("inlineCode",{parentName:"p"},"address")," in a ",(0,a.kt)("inlineCode",{parentName:"p"},"bindPoint")," for\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"edge-client")," API. This is to ensure that responses and data persisted outside the system can\nreach the controller. An example of this is enrollment JWTs that contain the URL that is used to\ncomplete enrollment via the edge client API."),(0,a.kt)("h4",{id:"enrollment"},(0,a.kt)("inlineCode",{parentName:"h4"},"enrollment")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"enrollment")," section under ",(0,a.kt)("inlineCode",{parentName:"p"},"edge")," defines values that pertain specifically to identity and\nrouter enrollment. This includes the certificate and private key used to sign certificates as well\nas enrolment JWT lifetimes."),(0,a.kt)("p",null,"The enrolment section has these subsection:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"signingCert")," - (required)  defines the certificate and key used to sign identity and router\ncertificates"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"edgeIdentity")," - (optional) controls identity enrollment options"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"edgeRouter")," - (optional) controls router enrollment options")),(0,a.kt)("h4",{id:"signingcert"},(0,a.kt)("inlineCode",{parentName:"h4"},"signingCert")),(0,a.kt)("p",null,"An object defining the ",(0,a.kt)("inlineCode",{parentName:"p"},"cert")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," used to issue certificates to identities and routers."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cert")," - (required) the x509 PEM formatted certificate of the CA that the controller will use to\nissue edge identity certificates"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"key")," - (required) the x509 PEM formatted private key for the certificate defined in ",(0,a.kt)("inlineCode",{parentName:"li"},"cert"))),(0,a.kt)("p",null,"OpenZiti clients rely on the controller to provide a bundle of trusted certificates during\nenrollment. The bundle is specified by the ",(0,a.kt)("inlineCode",{parentName:"p"},"identity.ca")," field and points to a file on the server\ncontaining the bundle of trusted certificates. The signing certificate must be included in this\nfile."),(0,a.kt)("h4",{id:"edgeidentity"},(0,a.kt)("inlineCode",{parentName:"h4"},"edgeIdentity")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"edgeIdentity")," section controls the lifetime of identity enrollment JWTs. It has only one value:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"duration")," - (optional) the lifetime of identity enrollment JWTs")),(0,a.kt)("h4",{id:"edgerouter"},(0,a.kt)("inlineCode",{parentName:"h4"},"edgeRouter")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"edgeRouter")," section controls the lifetime of router enrollment JWTs. It has only one value:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"duration")," - (optional) the lifetime of router enrollment JWTs")),(0,a.kt)("h3",{id:"events"},(0,a.kt)("inlineCode",{parentName:"h3"},"events")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"events")," section allows for the definition of multiple event loggers with their own handler and\nevent subscriptions. Handlers define the type, format, and destination for events. Subscriptions\nhandle which events are routed to the handler. This allows different events to be output in\ndifferent manners or to different locations."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"events")," section is an array of named objects. The name (",(0,a.kt)("inlineCode",{parentName:"p"},"jsonLogger")," in the example below) is\nused for configuration error output only. Each logger has a ",(0,a.kt)("inlineCode",{parentName:"p"},"subscriptions")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"handler")," section.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"subscriptions")," section is an array of objects with fields associated with the event type.\nSpecifying an event type will cause it to be output via the defined handler. If an event type is\nomitted, it will not be output. The list of valid event types and their options is as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"edge.apiSessions")," - (optional) edge API Session events",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"include"),' - (optional) a string or array of strings that specify which API session events to\ninclude ("created"\nand/or "\ndeleted")'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"edge.entityCounts")," - (optional) edge entity counts (API Sessions, session entities, routers, etc.)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"interval"),' - (optional) the time interval to generate entity count events on (e.g. "5s", "\n5000ms", "1h")'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"edge.sessions"),"  - (optional) Session events",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"include"),' - (optional) a string or array of strings that specify which Session events to\ninclude ("created"\nand/or "deleted")'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fabric.circuits"),"  - (optional) Fabric circuit events",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"include"),' - (optional) a string or array of strings that specify which circuit events to\ninclude ("created", "\npathUpdated", "\ndeleted", "failed")'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fabric.links")," - - (optional) Fabric link events"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fabric.routers")," - (optional) Fabric router events"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fabric.usage")," - (optional) Fabric usage events",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"version"),' - (optional) a string representing the value of the usage event to use ("2\' or "3")'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"metrics")," - (optional) - System-wide metrics",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sourceFilter")," - (optional) a regular expression to match the source name value on"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"metricFilter")," - (optional) a regular expression to match the metric name value on"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"services")," - (optional) Service events")),(0,a.kt)("p",null,"The properties in the ",(0,a.kt)("inlineCode",{parentName:"p"},"handler")," section depend on handler ",(0,a.kt)("inlineCode",{parentName:"p"},"type")," (one of ",(0,a.kt)("inlineCode",{parentName:"p"},"file"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"stdout"),",\nor ",(0,a.kt)("inlineCode",{parentName:"p"},"amqp"),"):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"common properties for all handler types",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"format")," - (required) the format of events for the ",(0,a.kt)("inlineCode",{parentName:"li"},"type")," (",(0,a.kt)("inlineCode",{parentName:"li"},"json")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"plain"),")"))),(0,a.kt)("li",{parentName:"ul"},"type ",(0,a.kt)("inlineCode",{parentName:"li"},"file"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"path"),' - (conditional) used the "file" ',(0,a.kt)("inlineCode",{parentName:"li"},"type"),", the path of the output file"))),(0,a.kt)("li",{parentName:"ul"},"type ",(0,a.kt)("inlineCode",{parentName:"li"},"amqp"),": note that queue and consumer options must match",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"url")," (required) the URL of the AMQP broker to connect to"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"queue")," (required) the name of the queue to publish events to"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"durable")," (optional) whether the queue should be durable between broker runs (default: true)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"autoDelete")," (optional) whether the queue should be deleted when there are no consumers (\ndefault: false)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"exclusive")," (optional) whether the queue should be exclusive to a single consumer (default:\nfalse)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"noWait")," (optional) whether the controller should wait for the queue to confirm receipt of\nmessages (default: false)")))),(0,a.kt)("p",null,"Example JSON File Logger:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"events:\n  jsonLogger:\n    subscriptions:\n      - type: fabric.circuits\n      - type: fabric.links\n      - type: fabric.routers\n      - type: fabric.terminators\n      - type: metrics\n        sourceFilter: .*\n        metricFilter: .*\n      - type: edge.sessions\n      - type: edge.apiSessions\n      - type: fabric.usage\n      - type: services\n      - type: edge.entityCounts\n        interval: 5s\n    handler:\n      type: file\n      format: json\n      path: /tmp/ziti-events.log\n")),(0,a.kt)("p",null,"Example amqp Logger:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"events:\n  amqpLogger:\n    subscriptions:\n      - type: fabric.usage\n        interval: 5s\n    handler:\n      type: amqp\n      format: json\n      url: amqp://guest:guest@localhost:5672\n      queue: ziti-events\n      durable: true\n      autoDelete: false\n      exclusive: false\n      noWait: false\n")),(0,a.kt)("p",null,"Example standard output logger for change events on all entity types."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"events:\n  stdoutLogger:\n    subscriptions:\n      - type: entityChange\n        include:\n          - apiSessionCertificates\n          - apiSessions\n          - authenticators\n          - authPolicies\n          - cas\n          - configs\n          - configTypes\n          - controllers\n          - edgeRouterPolicies\n          - enrollments\n          - eventualEvents\n          - externalJwtSigners\n          - identities\n          - identityTypes\n          - mfas\n          - postureChecks\n          - postureCheckTypes\n          - revocations\n          - routers\n          - serviceEdgeRouterPolicies\n          - servicePolicies\n          - services\n          - sessions\n          - terminators\n    handler:\n      type: stdout\n      format: json\n")),(0,a.kt)("h3",{id:"healthchecks"},(0,a.kt)("inlineCode",{parentName:"h3"},"healthChecks")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"healthChecks")," section configures how often health checking is performed. As of now, health\nchecks are limited to ensuring the internal database has not deadlocked by attempting to acquire a\nlocking transaction on some interval. Health check status is reported externally on\nthe ",(0,a.kt)("a",{parentName:"p",href:"#web"},(0,a.kt)("inlineCode",{parentName:"a"},"health-checks")," API"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"boltCheck")," - (optional) bbolt specific configuration",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"interval")," - (optional, 30s) how often to try entering a bolt read transaction"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timeout")," - (optional, 15s) how long to wait for a transaction before timing out"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"initialDelay")," - (optional, 15s) how long to wait on startup before performing the first check")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"healthChecks:\n  boltCheck:\n    interval: 30s\n    timeout: 15s\n    initialDelay: 15s\n")),(0,a.kt)("h3",{id:"identity"},(0,a.kt)("inlineCode",{parentName:"h3"},"identity")),(0,a.kt)("p",null,"The identity section includes the default server certificate and private key used for services\nhosted by the controller, alternate server certificates and keys to support SNI on hosted services,\nclient certificate and private key when making connections, and the ",(0,a.kt)("inlineCode",{parentName:"p"},"ca")," bundle that the controller\nwill use when making connections and when bootstrapping identities and routers. See the conventions\nthat apply to all ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/configuration/conventions#identity"},"identity")," sections for field level detail."),(0,a.kt)("h3",{id:"network"},(0,a.kt)("inlineCode",{parentName:"h3"},"network")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"network")," section sets network wide options."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createCircuitRetries")," - (optional, 2) How many times the controller will attempt to create a\ngiven circuit before giving up. Since subsequent tries will generally try a different path if one\nexists, retries can succeed where previous attempts failed"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cycleSeconds")," - (optional, 60) How often to run smart routing calculations, clean up failed links\nand (if legacy link management is enabled) to look for new links to establish. Note that the\ncontroller will also look for new links whenever routers connect or disconnect"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"enableLegacyLinkMgmt")," - (optional, true) Determines whether the controller will attempt to manage\nlinks for older routers which don't manage their own links"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"initialLinkLatency")," - (optional, 65s) The latency to use for new links, before the initial link\nlatency is reported. It's recommended to use a higher value so that new traffic doesn't\nimmediately use the new link, before the quality is know. If the link is the only option, a high\nlatency won't prevent its use"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"intervalAgeThreshold")," - (optional, 80s) how old a batch of metrics must be before it's eligible\nto be emitted"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"metricsReportInterval")," - (optional, 1m) the frequency at which controller metrics events are\nemitted"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"minRouterCost")," - (optional, 10) the minimum router cost"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"routerConnectionChurnLimit")," -  (optional, 1m) how often a new connection from a router can take\nover for an existing connection"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"routerMessaging")," - (optional)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"maxWorkers"),"- (optional, 100) Max workers sending router state messages from the controller to\nrouters. If the queue is full, the message will be retried later"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"queueSize")," - (optional, 100) Max queue size for router state messages being sent from the\ncontroller to the router. If the queue is full, the message will be retried later"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"routeTimeoutSeconds")," - (optional, 10s) - how to long to wait before considering a circuit\ncreation as timed out"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"smart")," - (optional)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"minCostDelta")," - (optional, 15) minimum change in cost between old circuit path and new\ncircuit path before allowing the circuit to be rerouted. Helpful to prevent circuit flapping\nwhen there are paths with negligable differences in cost"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rerouteCap")," - (optional, 4) maximum number of circuits to reroute during any given cycle\n(see ",(0,a.kt)("inlineCode",{parentName:"li"},"cycleSeconds")," above)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rerouteFraction")," - (optional, 0.02) Maximum fraction of circuits to reroute during any given\ncycle (see ",(0,a.kt)("inlineCode",{parentName:"li"},"cycleSeconds")," above)")))),(0,a.kt)("h3",{id:"profile"},(0,a.kt)("inlineCode",{parentName:"h3"},"profile")),(0,a.kt)("p",null,"The profile section allows for ",(0,a.kt)("a",{parentName:"p",href:"https://go.dev/blog/pprof"},"CPU (pprof) and memory (memprof)")," dumps\nto be created. CPU profiling is buffered by the application's runtime and output to the designated\nfile. Memory profiling allows the interval memory profiling occurs at and is output. These settings\nare useful for debugging purposes only and should not be enabled in production environments without\ncareful consideration."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cpu")," - (optional)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"path")," - (required) the path to output the pprof data"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"memory")," - (optional)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"path")," - (required) the path to output the memprof data"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"intervalMs")," (optional, 15s) the frequency to output memprof data")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"profile:\n  cpu:\n    path: /home/user1/tmp/ctrl.cpu.pprof\n  memory:\n    path: ctrl.memprof\n    intervalMs: 150000\n")),(0,a.kt)("h3",{id:"raft"},(0,a.kt)("inlineCode",{parentName:"h3"},"raft")),(0,a.kt)("p",null,"The raft section enables running multiple controllers in a cluster."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bootstrapMembers")," - (optional) Only used when bootstrapping the cluster. List of initial clusters\nmembers. Should only be set on one of the controllers in the cluster."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"commandHandler")," - (optional)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"maxQueueSize")," - (optional, 1000) max size of the queue for processing incoming raft log\nentries"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"commitTimeout")," - (optional, 50ms) how long the leader should wait without receiving an Apply\nbefore sending an AppendEntry message to followers to ensure that log entries are committed in a\nreasonable time frame."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dataDir")," - (required) directory in which to store the bolt DB, the raft journal and snapshots"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"electionTimeout")," - (optional, 1s) how long candidates will wait without communications from the\nleader before starting a leader election"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"heartbeatTimeout")," - (optional, 1s) How long for followers will wait without communications from"),(0,a.kt)("li",{parentName:"ul"},"the leader before starting a leader election."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"leaderLeaseTimeout")," - (optional, 500ms) How long a leader will keep leadership before stepping\ndown, when it's unable to reach a quorum of nodes in the cluster"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"logLevel")," - (optional, DEBUG) The minimum level of raft log messages to emit"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"logFile")," - (optional) If not specified, raft log messages will be emitted along with all other\nziti log messages. If specified, raft log messages will be emitted to the given log file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"minClusterSize")," - (optional, 1) Only used when bootstrapping the cluster. The minimum number of\nnodes before attempting to form a raft cluster"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"maxAppendEntries")," - (optional, 64) - Maximum number of log append entries to send at any given\ntime"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"snapshotInterval")," - (optional, 2m) - How often to check to see if a new snapshot needs to be\nmade. Checks will happen between ",(0,a.kt)("inlineCode",{parentName:"li"},"snapshotInterval")," and 2 x ",(0,a.kt)("inlineCode",{parentName:"li"},"snapshotInterval"),". This is a cluster\nwide value and should be consistent across nodes in the cluster. Otherwise the value from the most\nrecently started controller will win."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"snapshotThreshold")," - (optional, 8192) - Minimum number of new long entries before a new snapshot\nwill be created. This is a cluster wide value and should be consistent across nodes in the\ncluster. Otherwise the value from the most recently started controller will win."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"trailingLogs")," - (optional, 10240) - How many logs to leave in place after a snapshot. These can\nbe used to bring other nodes up to date that are only slightly behind, without having to send the\nfull snapshot. This is a cluster wide value and should be consistent across nodes in the cluster.\nOtherwise the value from the most recently started controller will win.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"raft:\n  bootstrapMembers:\n    - tls:127.0.0.1:6262\n    - tls:127.0.0.1:6363\n    - tls:127.0.0.1:6464\n  commandHandler:\n    maxQueueSize: 1000\n  commitTimeout: 50ms\n  dataDir: ./data\n  electionTimeout: 1s\n  heartbeatTimeout: 1s\n  leaderLeaseTimeout: 500ms\n  logLevel: INFO\n  logFile: ./raft.log\n  minClusterSize: 3\n  maxAppendEntries: 64\n  snapshotInterval: 2m\n  snapshotThreshold: 8192\n  trailingLogs: 10240\n")),(0,a.kt)("h3",{id:"trace"},(0,a.kt)("inlineCode",{parentName:"h3"},"trace")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"trace")," section instructs the controller to output incoming and outgoing messaging it receives.\nThis setting is useful for debugging purposes only and should not be enabled in production\nenvironments without careful consideration."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"path")," - (required) the file to output decoded messages to")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"trace:\n  path: /var/opt/open.ziti.ctrl.trace\n")),(0,a.kt)("h3",{id:"web"},(0,a.kt)("inlineCode",{parentName:"h3"},"web")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"web")," section follows the ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/configuration/conventions#xweb"},"conventions of XWeb"),". The controller has the\nfollowing APIs defined:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"health-checks")," - provides a health check API that allows remote parties to verify the health of\nthe controller"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fabric")," - the fabric management API which allows remote administration of a network"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"edge-management")," - the edge management API which allows remote administration of a network's edge\ncomponents (\nidentities, policies, authentication, etc.)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"edge-client")," - the edge client API which allows clients to authenticate and request connections\nto services")),(0,a.kt)("p",null,"Each API may have their own options, but currently do not."),(0,a.kt)("h3",{id:"v"},(0,a.kt)("inlineCode",{parentName:"h3"},"v")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"v"),' section is used to detect if the version file is supported by the OpenZiti binary read it.\nThe current and only supported value is "3".'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"v: 3\n")))}u.isMDXComponent=!0}}]);