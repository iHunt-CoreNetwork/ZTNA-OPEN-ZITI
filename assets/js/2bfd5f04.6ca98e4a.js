"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[8585],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return n?r.createElement(k,o(o({ref:t},c),{},{components:n})):r.createElement(k,o({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},15520:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>p,metadata:()=>c,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const l={toc:[{value:"Deployments",id:"deployments",level:2},{value:"Run with NodeJS",id:"run-with-nodejs",level:2},{value:"Server TLS",id:"server-tls",level:2},{value:"Developing with Angular",id:"developing-with-angular",level:2},{value:"Docker",id:"docker",level:2},{value:"Build the Container Image",id:"build-the-container-image",level:3},{value:"Run with Angular in Docker",id:"run-with-angular-in-docker",level:3}]},o="wrapper";function i(e){let{components:t,...n}=e;return(0,a.kt)(o,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"openziti-console"},"OpenZiti Console"),(0,a.kt)("p",null,"The OpenZiti Console is an administrative web interface for an OpenZiti network."),(0,a.kt)("h2",{id:"deployments"},"Deployments"),(0,a.kt)("p",null,"Read the production deployment guides for the console as well as the controller, router, etc."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://openziti.io/docs/category/deployments/"},"Link to deployment guides")),(0,a.kt)("h2",{id:"run-with-nodejs"},"Run with NodeJS"),(0,a.kt)("p",null,"Before you start, ensure you can connect to an OpenZiti Controller. To learn more about OpenZiti constructs and APIs go to ",(0,a.kt)("a",{parentName:"p",href:"https://openziti.io/docs/reference/developer/api/"},"the API reference"),"."),(0,a.kt)("p",null,"To build and run the application from source, you'll also need to make sure you have the following developer tools installed and available on your command line:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"center"},"Tool"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Min. Version"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"Node.js"),(0,a.kt)("td",{parentName:"tr",align:"center"},"16.13.x")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"npm"),(0,a.kt)("td",{parentName:"tr",align:"center"},"8.1.x")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You will also need to make sure you have the angular CLI installed"),(0,a.kt)("li",{parentName:"ul"},"This project currently requires Angular CLI v16"),(0,a.kt)("li",{parentName:"ul"},"To install the Angular CLI run:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @angular/cli@16\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You'll also need to be running Node.js version >= 16.13.x")),(0,a.kt)("p",null,"From the project root:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"install project dependencies:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"build project with Angular"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ng build ziti-console-lib;\nng build ziti-console;\nng build ziti-console-node;\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"run the node server"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"node server.js\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Finally, access the app @ http://localhost:1408"))),(0,a.kt)("h2",{id:"server-tls"},"Server TLS"),(0,a.kt)("p",null,"The console server can be configured to present a TLS server certificate on a configurable TCP port. TLS is enabled when\nthe private key and certificate files exist with the expected filenames in the working directory."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"./server.key")," - private key"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"./server.chain.pem")," - server certificate chain")),(0,a.kt)("p",null,"Configure the TLS port in ",(0,a.kt)("inlineCode",{parentName:"p"},"settings.json")," by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"portTLS")," (default: 8443)."),(0,a.kt)("h2",{id:"developing-with-angular"},"Developing with Angular"),(0,a.kt)("p",null,"There are two elements to the Angular app."),(0,a.kt)("p",null,"From project Root:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install dependencies"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run & watch changes in the core library in ",(0,a.kt)("strong",{parentName:"p"},"ziti-console-lib")," by running the npm script ",(0,a.kt)("strong",{parentName:"p"},"watch:lib")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ng build ziti-console-lib --watch\n")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'Note: The NPM library is referenced/linked in package.json as "ziti-console-lib": "file:dist/ziti-console-lib".\nThis library includes the pure javascript code it shared with ziti-console, and the Angular code it shares with other apps.'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Then in a separate window run & watch changes in the main application ",(0,a.kt)("strong",{parentName:"p"},"app-ziti-console")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ng build ziti-console-node --watch\n")),(0,a.kt)("p",{parentName:"li"},"This ensures changes made to the NPM library get pulled into the Angular app as you are developing"))),(0,a.kt)("h2",{id:"docker"},"Docker"),(0,a.kt)("p",null,"The ZAC application can be run in a docker container by following the steps below."),(0,a.kt)("p",null,"If you don't have docker installed, you can download and install the docker engine here: ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/"},"https://docs.docker.com/engine/install/")),(0,a.kt)("h3",{id:"build-the-container-image"},"Build the Container Image"),(0,a.kt)("p",null,"From the project root directory, build the image:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker build . -t openziti/zac\n")),(0,a.kt)("h3",{id:"run-with-angular-in-docker"},"Run with Angular in Docker"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you plan to connect to an Edge Controller that is NOT configured with a trusted SSL/TLS certificate, it's recommended you use the Node API integration"),(0,a.kt)("li",{parentName:"ul"},"To do this via ",(0,a.kt)("strong",{parentName:"li"},"docker")," run the container with the ",(0,a.kt)("inlineCode",{parentName:"li"},"node-api")," argument:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker run -d --name zac -p 1408:1408 openziti/zac\n")))}i.isMDXComponent=!0;const p={title:"Console Deployment",sidebar_label:"Console"},s=void 0,c={unversionedId:"guides/deployments/linux/console",id:"guides/deployments/linux/console",title:"Console Deployment",description:"",source:"@site/docs/guides/deployments/10-linux/30-console.mdx",sourceDirName:"guides/deployments/10-linux",slug:"/guides/deployments/linux/console",permalink:"/docs/guides/deployments/linux/console",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/30-console.mdx",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Console Deployment",sidebar_label:"Console"},sidebar:"docsSidebar",previous:{title:"Migrate",permalink:"/docs/guides/deployments/linux/router/migrate"},next:{title:"Docker",permalink:"/docs/category/docker"}},u={},d=[],m={toc:d},k="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(k,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(i,{mdxType:"ConsoleReadme"}))}h.isMDXComponent=!0}}]);