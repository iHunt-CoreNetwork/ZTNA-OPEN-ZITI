"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[8929],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294),a=n(86010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l.tabItem,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>N});var r=n(87462),a=n(67294),l=n(86010),o=n(12466),i=n(16550),s=n(91980),u=n(67392),p=n(50012);function c(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,l=d(e),[o,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[s,u]=g({queryString:n,groupId:r}),[c,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,p.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:r}),f=(()=>{const e=s??c;return m({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),k(e)}),[u,k,l]),tabValues:l}}var f=n(72389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),r=u[n].value;r!==i&&(c(t),s(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},o,{className:(0,l.Z)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function y(e){const t=k(e);return a.createElement("div",{className:(0,l.Z)("tabs-container",h.tabList)},a.createElement(b,(0,r.Z)({},e,t)),a.createElement(v,(0,r.Z)({},e,t)))}function N(e){const t=(0,f.Z)();return a.createElement(y,(0,r.Z)({key:String(t)},e))}},12810:(e,t,n)=>{n.d(t,{ZP:()=>p});var r=n(87462),a=(n(67294),n(3905)),l=n(74866);const o=(i="TabItem",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var i;const s={toc:[]},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o,{value:"debian",label:"Debian",mdxType:"TabItem"},(0,a.kt)("p",null,"Configure the repository for the Debian family of distributions (Ubuntu, Mint, Pop!_OS)"),(0,a.kt)("p",null,"Install the OpenZiti repository key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"curl -sSLf https://get.openziti.io/tun/package-repos.gpg | sudo gpg --dearmor --output /usr/share/keyrings/openziti.gpg\n")),(0,a.kt)("p",null,"Ensure the key is readable by all users."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo chmod a+r /usr/share/keyrings/openziti.gpg\n")),(0,a.kt)("p",null,"Create the repository file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo tee /etc/apt/sources.list.d/openziti-release.list >/dev/null <<EOF\ndeb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-stable debian main\nEOF\n")),(0,a.kt)("p",null,"Update the package list."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo apt update\n"))),(0,a.kt)(o,{value:"redhat",label:"RedHat",mdxType:"TabItem"},(0,a.kt)("p",null,"Configure the repository for the RedHat family (Fedora, Rocky, Alma)"),(0,a.kt)("p",null,"Create the repository file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo tee /etc/yum.repos.d/openziti-release.repo >/dev/null <<\\EOF\n[OpenZitiRelease]\nname=OpenZiti Release\nbaseurl=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat/$basearch\nenabled=1\ngpgcheck=0\ngpgkey=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat/$basearch/repodata/repomd.xml.key\nrepo_gpgcheck=1\nEOF\n")),(0,a.kt)("p",null,"Update the package list."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo dnf update\n")))))}p.isMDXComponent=!0},99289:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>k,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var r=n(87462),a=(n(67294),n(3905)),l=n(74866),o=n(85162),i=n(12810);const s={title:"Controller Deployment",sidebar_label:"Controller",id:"deploy"},u=void 0,p={unversionedId:"guides/deployments/linux/controller/deploy",id:"guides/deployments/linux/controller/deploy",title:"Controller Deployment",description:"This article is about deploying a controller as a Linux system service. The controller introduction may be helpful to read first.",source:"@site/docs/guides/deployments/10-linux/10-controller/10-deploy.mdx",sourceDirName:"guides/deployments/10-linux/10-controller",slug:"/guides/deployments/linux/controller/deploy",permalink:"/docs/guides/deployments/linux/controller/deploy",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/10-controller/10-deploy.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Controller Deployment",sidebar_label:"Controller",id:"deploy"},sidebar:"docsSidebar",previous:{title:"Linux",permalink:"/docs/category/linux"},next:{title:"Migrate",permalink:"/docs/guides/deployments/linux/controller/migrate"}},c={},d=[{value:"Install the Controller Package",id:"install-the-controller-package",level:2},{value:"One-liner Install Script",id:"one-liner-install-script",level:3},{value:"Manual Package Repo Setup",id:"manual-package-repo-setup",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Generate a Configuration",id:"generate-a-configuration",level:3},{value:"Answer Interactively",id:"answer-interactively",level:4},{value:"Answer Non-interactively",id:"answer-non-interactively",level:4},{value:"Migrate an Existing Configuration",id:"migrate-an-existing-configuration",level:3},{value:"Craft a Configuration",id:"craft-a-configuration",level:3},{value:"Starting Up",id:"starting-up",level:2},{value:"Firewall",id:"firewall",level:2},{value:"Further Configuration",id:"further-configuration",level:2},{value:"Logging",id:"logging",level:2},{value:"Uninstall",id:"uninstall",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],m={toc:d},g="wrapper";function k(e){let{components:t,...n}=e;return(0,a.kt)(g,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This article is about deploying a controller as a Linux system service. ",(0,a.kt)("a",{parentName:"p",href:"/docs/learn/introduction/components#controller"},"The controller introduction")," may be helpful to read first."),(0,a.kt)("p",null,"We'll cover the following topics:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"#configuration"},"Configuration")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"#starting-up"},"Starting Up"))),(0,a.kt)("h2",{id:"install-the-controller-package"},"Install the Controller Package"),(0,a.kt)("p",null,"The controller package provides a systemd service unit and bootstrapping script."),(0,a.kt)("h3",{id:"one-liner-install-script"},"One-liner Install Script"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"curl -sS https://get.openziti.io/install.bash | sudo bash -s openziti-controller\n")),(0,a.kt)("h3",{id:"manual-package-repo-setup"},"Manual Package Repo Setup"),(0,a.kt)("p",null,"Configure the package repository and install ",(0,a.kt)("inlineCode",{parentName:"p"},"openziti-controller"),"."),(0,a.kt)(i.ZP,{mdxType:"LinuxPackageRepo"}),(0,a.kt)("p",null,"Finally, install the package: ",(0,a.kt)("strong",{parentName:"p"},"openziti-controller")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"The ",(0,a.kt)("inlineCode",{parentName:"em"},"openziti")," package provides the ",(0,a.kt)("inlineCode",{parentName:"em"},"ziti")," CLI and is installed as a dependency.")),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"You must generate, migrate, or craft a configuration. Configuration consists of a PKI, a config YAML file, and a database."),(0,a.kt)("h3",{id:"generate-a-configuration"},"Generate a Configuration"),(0,a.kt)("p",null,"This is the recommended approach if you are installing a new controller."),(0,a.kt)("h4",{id:"answer-interactively"},"Answer Interactively"),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"bootstrap.bash")," to be prompted for the required values."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo /opt/openziti/etc/controller/bootstrap.bash\n")),(0,a.kt)("h4",{id:"answer-non-interactively"},"Answer Non-interactively"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Set the required values in the answer file ",(0,a.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/bootstrap.env"),"."),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"ZITI_CTRL_ADVERTISED_ADDRESS")," - control plane permanent DNS name (required)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"ZITI_CTRL_ADVERTISED_PORT")," - listener TCP port (default: 1280)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"ZITI_USER")," - username (default: admin)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"ZITI_PWD")," - password to initialize the database (required)"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"bootstrap.bash")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo /opt/openziti/etc/controller/bootstrap.bash\n")))),(0,a.kt)("h3",{id:"migrate-an-existing-configuration"},"Migrate an Existing Configuration"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/guides/deployments/linux/controller/migrate"},"This example")," illustrates copying the PKI, configuration, and database from a previous installation to the controller service's working directory."),(0,a.kt)("h3",{id:"craft-a-configuration"},"Craft a Configuration"),(0,a.kt)("p",null,"Craft a new configuration by running ",(0,a.kt)("inlineCode",{parentName:"p"},"ziti create config controller"),"."),(0,a.kt)("p",null,"Review the environment variables, especially those named like ",(0,a.kt)("inlineCode",{parentName:"p"},"ZITI_CTRL_*"),", that influence the controller configuration with ",(0,a.kt)("inlineCode",{parentName:"p"},"ziti create config environment"),"."),(0,a.kt)("p",null,"Here's a link to ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/configuration/controller"},"the controller configuration reference"),"."),(0,a.kt)("h2",{id:"starting-up"},"Starting Up"),(0,a.kt)("p",null,"Run the service now and after every reboot"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo systemctl enable --now ziti-controller.service\n")),(0,a.kt)("h2",{id:"firewall"},"Firewall"),(0,a.kt)("p",null,"The controller listens on a single configurable TCP port: ",(0,a.kt)("inlineCode",{parentName:"p"},"1280/tcp"),". Verify that the controller process is listening on this port and create a firewall exception if necessary."),(0,a.kt)("p",null,'This will list all TCP listeners for "ziti" commands.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo ss -tlnp | grep ziti\n")),(0,a.kt)("p",null,'If you have only one process named like "ziti" running, you will see output similar to this.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},'LISTEN 0      4096                          *:1280             *:*    users:(("ziti",pid=2004302,fd=8))\n')),(0,a.kt)("h2",{id:"further-configuration"},"Further Configuration"),(0,a.kt)("p",null,"Customize ",(0,a.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller/config.yml")," as needed and restart the service."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo systemctl restart ziti-controller.service\n")),(0,a.kt)("p",null,"Here's a link to ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/configuration/controller"},"the configuration reference"),"."),(0,a.kt)("h2",{id:"logging"},"Logging"),(0,a.kt)("p",null,"View the service's output."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"journalctl -u ziti-controller.service\n")),(0,a.kt)("br",null),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"goformats",label:"Log Formats",mdxType:"TabItem"},(0,a.kt)("p",null,"Set a different format in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ZITI_ARGS")," environment variable and restart the service."),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:"title=/opt/openziti/etc/controller/service.env",title:"/opt/openziti/etc/controller/service.env"},"ZITI_ARGS='--log-formatter text'\n")),(0,a.kt)("br",null)),(0,a.kt)(o.Z,{value:"golevels",label:"Log Levels",mdxType:"TabItem"},(0,a.kt)("p",null,"Enable DEBUG log level with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--verbose")," flag in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ZITI_ARGS")," environment variable and restart the service."),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:"title=/opt/openziti/etc/controller/service.env",title:"/opt/openziti/etc/controller/service.env"},"ZITI_ARGS='--verbose'\n")))),(0,a.kt)("br",null),(0,a.kt)("p",null,"Learn more in ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/logging"},"the logging reference"),"."),(0,a.kt)("h2",{id:"uninstall"},"Uninstall"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Clean the service state."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo systemctl disable --now ziti-controller.service\nsudo systemctl reset-failed ziti-controller.service\nsudo systemctl clean --what=state ziti-controller.service\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Purge the package, including configuration files."),(0,a.kt)("p",{parentName:"li"},"APT - Debian, Ubuntu, etc."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo apt-get purge openziti-controller\n")),(0,a.kt)("p",{parentName:"li"},"RPM - RedHat, Fedora, etc."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo dnf remove openziti-controller\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Remove any firewall exceptions you created."))),(0,a.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("p",null,"Verify the control plane is reachable by routers. The control plane must terminate TLS for routers because they will authenticate with a client certificate for all post-erollment interactions."),(0,a.kt)("p",null,"The server certificate must be issued by the controller's edge signer CA (",(0,a.kt)("inlineCode",{parentName:"p"},"edge.enrollment.signerCert")," in ",(0,a.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller/config.yml"),")."),(0,a.kt)("p",null,"Substitute the value of ",(0,a.kt)("inlineCode",{parentName:"p"},"ctrl.options.advertiseAddress")," from ",(0,a.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller/config.yml"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"openssl s_client -connect {ctrl.options.advertiseAddress} -alpn ziti-ctrl -showcerts <>/dev/null \\\n|& openssl storeutl -certs -noout -text /dev/stdin \\\n| grep -E '(Subject|Issuer):'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"Issuer: C=US, L=Charlotte, O=NetFoundry, OU=ADV-DEV, CN=NetFoundry Inc. Intermediate CA 42KvRQxn.\nSubject: C=US, ST=NC, L=Charlotte, O=NetFoundry, OU=Ziti, CN=BhCjN2Rkx\nIssuer: C=US, L=Charlotte, O=NetFoundry, OU=ADV-DEV, CN=NetFoundry Inc. Certificate Authority IpcOEkAR6\nSubject: C=US, ST=NC, L=Charlotte, O=NetFoundry, OU=ADV-DEV, CN=NetFoundry Inc. Intermediate CA 42KvRQxn.\n")),(0,a.kt)("p",null,"Verify the controller's ",(0,a.kt)("inlineCode",{parentName:"p"},"edge-client")," web API is reachable by identities and routers. This API must terminate TLS for any identities that enroll because they will authenticate with a client certificate for post-enrollment interactions."),(0,a.kt)("p",null,"Enrollment tokens are signed with the key of the controller's server certificate that matches the ",(0,a.kt)("inlineCode",{parentName:"p"},"edge.api.address")," in ",(0,a.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller/config.yml"),". "),(0,a.kt)("p",null,"Substitute the value of ",(0,a.kt)("inlineCode",{parentName:"p"},"edge.api.address")," from ",(0,a.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller/config.yml"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"openssl s_client -connect {edge.api.address} -alpn h2,http/1.1 -showcerts <>/dev/null \\\n|& openssl storeutl -certs -noout -text /dev/stdin \\\n| grep -E '(Subject|Issuer):'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"Issuer: C=US, L=Charlotte, O=NetFoundry, OU=ADV-DEV, CN=NetFoundry Inc. Intermediate CA 42KvRQxn.\nSubject: C=US, ST=NC, L=Charlotte, O=NetFoundry, OU=Ziti, CN=BhCjN2Rkx\nIssuer: C=US, L=Charlotte, O=NetFoundry, OU=ADV-DEV, CN=NetFoundry Inc. Certificate Authority IpcOEkAR6\nSubject: C=US, ST=NC, L=Charlotte, O=NetFoundry, OU=ADV-DEV, CN=NetFoundry Inc. Intermediate CA 42KvRQxn.\n")))}k.isMDXComponent=!0}}]);