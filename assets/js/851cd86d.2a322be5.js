"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[1690],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=i,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2067:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const a={title:"Kubernetes Service"},o=void 0,l={unversionedId:"learn/quickstarts/services/kubernetes-service",id:"learn/quickstarts/services/kubernetes-service",title:"Kubernetes Service",description:"This is a tutorial for tunneling a Kubernetes workload with OpenZiti that creates:",source:"@site/docs/learn/quickstarts/services/kubernetes-service.md",sourceDirName:"learn/quickstarts/services",slug:"/learn/quickstarts/services/kubernetes-service",permalink:"/docs/learn/quickstarts/services/kubernetes-service",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/services/kubernetes-service.md",tags:[],version:"current",frontMatter:{title:"Kubernetes Service"},sidebar:"docsSidebar",previous:{title:"Starting With Services",permalink:"/docs/learn/quickstarts/services/"},next:{title:"Your First Service",permalink:"/docs/learn/quickstarts/services/ztha"}},s={},c=[{value:"Steps",id:"steps",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This is a tutorial for tunneling a Kubernetes workload with OpenZiti that creates:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a demo service ",(0,i.kt)("inlineCode",{parentName:"li"},"hello-toy")),(0,i.kt)("li",{parentName:"ul"},"an OpenZiti reverse proxy pod ",(0,i.kt)("inlineCode",{parentName:"li"},"ziti-host"))),(0,i.kt)("h2",{id:"steps"},"Steps"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"You must have a OpenZiti router in the cluster with a tunnel binding. You can use this command to find eligible routers."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},"ziti edge list edge-routers 'isTunnelerEnabled=true'\n")),(0,i.kt)("p",{parentName:"li"},"If none of the routers shown are in your cluster, then refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/guides/deployments/kubernetes/kubernetes-router"},"the router deployment guide")," for more information on how to deploy a router.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add a role to the router's tunneler identity. This labels the identity so we can give it permission to host the service as a reverse-proxy. Substitute the router name for ",(0,i.kt)("inlineCode",{parentName:"p"},"router1"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},'ziti edge update identity "router1" \\\n    --role-attributes hello-hosts\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enroll an identity for yourself. Add the identity to any tunneler so you can access ",(0,i.kt)("inlineCode",{parentName:"p"},"http://hello.ziti.internal")," when you finish the steps."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},'ziti edge create identity "hello-client" \\\n    --role-attributes hello-clients \\\n    --jwt-output-file hello-client.jwt\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Ensure you have router policies for your identities and services."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},"ziti edge list edge-router-policies\nziti edge list service-edge-router-policies\n")),(0,i.kt)("p",{parentName:"li"},"You can create a default router policy for both if needed."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},"ziti edge create edge-router-policy \"default\" \\\n--edge-router-roles '#all' --identity-roles '#all'\n\nziti edge create service-edge-router-policy \"default\" \\\n--edge-router-roles '#all' --service-roles '#all'\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create the service."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},'ziti edge create config "hello-intercept-config" intercept.v1 \\\n    \'{"protocols":["tcp"],"addresses":["hello.ziti.internal"], "portRanges":[{"low":80, "high":80}]}\'\n\nziti edge create config "hello-host-config" host.v1 \\\n    \'{"protocol":"tcp", "address":"hello.hello-toy.svc","port":80}\'\n\nziti edge create service "hello-service" \\\n    --configs hello-intercept-config,hello-host-config\n\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create the service policies for the client and host identities."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},"ziti edge create service-policy \"hello-dial-policy\" Dial \\\n    --service-roles '@hello-service' --identity-roles '#hello-clients'\n\nziti edge create service-policy \"hello-bind-policy\" Bind \\\n    --service-roles '@hello-service' --identity-roles '#hello-hosts'\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Deploy the Hello Toy chart."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},'helm install "hello-toy" openziti/hello-toy \\\n    --namespace hello-toy --create-namespace \\\n    --set serviceDomainName=hello\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Visit the Hello Demo page in your browser: ",(0,i.kt)("a",{parentName:"p",href:"http://hello.ziti.internal/"},"http://hello.ziti.internal/")))))}d.isMDXComponent=!0}}]);