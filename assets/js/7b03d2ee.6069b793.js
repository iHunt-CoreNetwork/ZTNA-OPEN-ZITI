"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[1135],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(g,l(l({ref:t},p),{},{components:n})):r.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65471:(e,t,n)=>{n.d(t,{Z:()=>f});var r=n(87462),a=n(67294),o=n(86010),l=n(72389),i=n(86043);const s={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};function u(e){return!!e&&("SUMMARY"===e.tagName||u(e.parentElement))}function p(e,t){return!!e&&(e===t||p(e.parentElement,t))}function c(e){let{summary:t,children:n,...c}=e;const d=(0,l.Z)(),m=(0,a.useRef)(null),{collapsed:g,setCollapsed:f}=(0,i.u)({initialState:!c.open}),[k,h]=(0,a.useState)(c.open),y=a.isValidElement(t)?t:a.createElement("summary",null,t??"Details");return a.createElement("details",(0,r.Z)({},c,{ref:m,open:k,"data-collapsed":g,className:(0,o.Z)(s.details,d&&s.isBrowser,c.className),onMouseDown:e=>{u(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const t=e.target;u(t)&&p(t,m.current)&&(e.preventDefault(),g?(f(!1),h(!0)):f(!0))}}),y,a.createElement(i.z,{lazy:!1,collapsed:g,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{f(e),h(!e)}},a.createElement("div",{className:s.collapsibleContent},n)))}const d={details:"details_b_Ee"},m="alert alert--info";function g(e){let{...t}=e;return a.createElement(c,(0,r.Z)({},t,{className:(0,o.Z)(m,d.details,t.className)}))}function f(e){const t=a.Children.toArray(e.children),n=t.find((e=>a.isValidElement(e)&&"summary"===e.props?.mdxType)),o=a.createElement(a.Fragment,null,t.filter((e=>e!==n)));return a.createElement(g,(0,r.Z)({},e,{summary:n}),o)}},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294),a=n(86010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>N});var r=n(87462),a=n(67294),o=n(86010),l=n(12466),i=n(16550),s=n(91980),u=n(67392),p=n(50012);function c(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=d(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[s,u]=g({queryString:n,groupId:r}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,p.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),k=(()=>{const e=s??c;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var k=n(72389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),r=u[n].value;r!==i&&(c(t),s(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},l,{className:(0,o.Z)("tabs__item",h.tabItem,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function v(e){const t=f(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",h.tabList)},a.createElement(y,(0,r.Z)({},e,t)),a.createElement(b,(0,r.Z)({},e,t)))}function N(e){const t=(0,k.Z)();return a.createElement(v,(0,r.Z)({key:String(t)},e))}},20476:(e,t,n)=>{n.d(t,{ZP:()=>i});var r=n(87462),a=(n(67294),n(3905));const o={toc:[]},l="wrapper";function i(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("br",null),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ziti")," CLI will help you get an API Session from the controller's management API. You will be prompted to trust any new server certificates. Your login token cache and trust store are managed by the CLI in your home directory."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"# implies https://localhost:1280\nziti edge login -u admin -p admin\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"# implies https://\nziti edge login ziti.example.com:8441 -u admin -p admin\n")))}i.isMDXComponent=!0},12810:(e,t,n)=>{n.d(t,{ZP:()=>s});var r=n(87462),a=(n(67294),n(3905)),o=n(65471);const l={toc:[]},i="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(i,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{mdxType:"Details"},(0,a.kt)("summary",null,"Configure the repository for the Debian family of distributions (Ubuntu, Mint, Pop!_OS)"),(0,a.kt)("p",null,"Install the OpenZiti repository key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"curl -sSLf https://get.openziti.io/tun/package-repos.gpg | sudo gpg --dearmor --output /usr/share/keyrings/openziti.gpg\n")),(0,a.kt)("p",null,"Ensure the key is readable by all users."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo chmod a+r /usr/share/keyrings/openziti.gpg\n")),(0,a.kt)("p",null,"Create the repository file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo tee /etc/apt/sources.list.d/openziti-release.list >/dev/null <<EOF\ndeb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-stable debian main\nEOF\n")),(0,a.kt)("p",null,"Update the package list."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo apt update\n"))),(0,a.kt)(o.Z,{mdxType:"Details"},(0,a.kt)("summary",null,"Configure the repository for the RedHat family (Fedora, Rocky, Alma)"),(0,a.kt)("p",null,"Create the repository file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo tee /etc/yum.repos.d/openziti-release.repo >/dev/null <<\\EOF\n[OpenZitiRelease]\nname=OpenZiti Release\nbaseurl=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat/$basearch\nenabled=1\ngpgcheck=0\ngpgkey=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat/$basearch/repodata/repomd.xml.key\nrepo_gpgcheck=1\nEOF\n")),(0,a.kt)("p",null,"Update the package list."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo dnf update\n"))))}s.isMDXComponent=!0},86004:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var r=n(87462),a=(n(67294),n(3905)),o=n(74866),l=n(85162),i=(n(20476),n(12810));const s={title:"Router Deployment"},u=void 0,p={unversionedId:"guides/deployments/linux/router/deploy",id:"guides/deployments/linux/router/deploy",title:"Router Deployment",description:"This article is about deploying a router as a Linux system service. The router introduction may be helpful to read first.",source:"@site/docs/guides/deployments/10-linux/20-router/10-deploy.mdx",sourceDirName:"guides/deployments/10-linux/20-router",slug:"/guides/deployments/linux/router/deploy",permalink:"/docs/guides/deployments/linux/router/deploy",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/20-router/10-deploy.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Router Deployment"},sidebar:"docsSidebar",previous:{title:"Backup",permalink:"/docs/guides/deployments/linux/controller/backup"},next:{title:"Configuration",permalink:"/docs/guides/deployments/linux/router/router-configuration"}},c={},d=[{value:"Installation",id:"installation",level:2},{value:"Bootstrapping",id:"bootstrapping",level:2},{value:"Bootstrapping the Configuration",id:"bootstrapping-the-configuration",level:3},{value:"Bootstrapping the Enrollment",id:"bootstrapping-the-enrollment",level:3},{value:"Firewall",id:"firewall",level:2},{value:"Logging",id:"logging",level:2},{value:"Uninstall",id:"uninstall",level:2}],m={toc:d},g="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(g,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This article is about deploying a router as a Linux system service. ",(0,a.kt)("a",{parentName:"p",href:"/docs/learn/introduction/components#router"},"The router introduction")," may be helpful to read first."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"The router package ",(0,a.kt)("inlineCode",{parentName:"p"},"openziti-router")," provides a systemd service unit and optional bootstrapping. The package depends on the ",(0,a.kt)("inlineCode",{parentName:"p"},"openziti")," package which provides the ",(0,a.kt)("inlineCode",{parentName:"p"},"ziti")," CLI. The easiest way to install both is the cross-platform install script for RPM and Debian distributions."),(0,a.kt)("p",null,"Download and run the install script."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"wget https://get.openziti.io/install.bash\n")),(0,a.kt)("p",null,"Install interactively so that you will have an opportunity to answer questions about generating a configuration."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo bash ./install.bash openziti-router\n")),(0,a.kt)(i.ZP,{mdxType:"LinuxPackageRepo"}),(0,a.kt)("h2",{id:"bootstrapping"},"Bootstrapping"),(0,a.kt)("p",null,"You can opt-in to generating a configuration file and enrolling the router automatically. You will be prompted for the most relevant configuration values when installing interactively unless the answer is already known."),(0,a.kt)("p",null,"Bootstrapping consists of these steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Generate a one-shot configuration file from env answers and defaults."),(0,a.kt)("li",{parentName:"ol"},"Enroll the router with the controller.")),(0,a.kt)("p",null,"At a minimum, you must set these to opt-in to bootstrapping."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"In ",(0,a.kt)("strong",{parentName:"li"},"/opt/openziti/etc/router/service.env")," (the answer file for the service)",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Set ",(0,a.kt)("inlineCode",{parentName:"li"},"ZITI_BOOTSTRAP=true")))),(0,a.kt)("li",{parentName:"ol"},"In ",(0,a.kt)("strong",{parentName:"li"},"/opt/openziti/etc/router/bootstrap.env")," (the answer file for bootstrapping the router)",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Set ",(0,a.kt)("inlineCode",{parentName:"li"},"ZITI_CTRL_ADVERTISED_ADDRESS")," to the FQDN of the controller"),(0,a.kt)("li",{parentName:"ol"},"Set ",(0,a.kt)("inlineCode",{parentName:"li"},"ZITI_ENROLL_TOKEN")," to the resulting token (JWT)")))),(0,a.kt)("p",null,"Additionally, you probably want to set these:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"In ",(0,a.kt)("strong",{parentName:"li"},"/opt/openziti/etc/router/bootstrap.env")," (the answer file for bootstrapping the router)",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Set ",(0,a.kt)("inlineCode",{parentName:"li"},"ZITI_ROUTER_ADVERTISED_ADDRESS")," to the permanent FQDN of the router (default: localhost). This value can not be changed after enrollment."),(0,a.kt)("li",{parentName:"ol"},"Set ",(0,a.kt)("inlineCode",{parentName:"li"},"ZITI_ROUTER_MODE")," (default: none) if this router's built-in tunneler will provide a proxy for services. Mode ",(0,a.kt)("inlineCode",{parentName:"li"},"tproxy")," requires additional kernel capabilities in ",(0,a.kt)("strong",{parentName:"li"},"/etc/systemd/system/ziti-router.service.d/override.conf")," and DNS resolver configuration for the host.")))),(0,a.kt)("h3",{id:"bootstrapping-the-configuration"},"Bootstrapping the Configuration"),(0,a.kt)("p",null,"The router's configuration is loaded from a YAML file (",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/configuration/router"},"reference"),"). The Linux system service will generate a valid configuration during the first startup, unless one already exists. You can modify the generated configuration in ",(0,a.kt)("strong",{parentName:"p"},"/var/lib/ziti-router/config.yml"),"."),(0,a.kt)("p",null,"The filename of the configuration file, relative to the router's working directory, is given as an argument, e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"entrypoint.bash run config.yml")," in ",(0,a.kt)("strong",{parentName:"p"},"/lib/systemd/system/ziti-router.service")," as an argument to the ",(0,a.kt)("inlineCode",{parentName:"p"},"ExecStart")," command. You may override this in ",(0,a.kt)("strong",{parentName:"p"},"/etc/systemd/system/ziti-router.service.d/override.conf"),"."),(0,a.kt)("p",null,"Explore configuration option variables by running ",(0,a.kt)("inlineCode",{parentName:"p"},"ziti create config environment --help"),". Any of these may be set in ",(0,a.kt)("strong",{parentName:"p"},"/opt/openziti/etc/router/bootstrap.env")," to influence the generated configuration."),(0,a.kt)("p",null,"Disable generating a configuration by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"ZITI_BOOTSTRAP_CONFIG=false")," in ",(0,a.kt)("strong",{parentName:"p"},"/opt/openziti/etc/router/service.env"),"."),(0,a.kt)("h3",{id:"bootstrapping-the-enrollment"},"Bootstrapping the Enrollment"),(0,a.kt)("p",null,"You must provide an enrollment token. Obtain the token by administratively creating the router."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Create a router"',title:'"Create',a:!0,'router"':!0},'ziti edge create edge-router "AcmeRouter1" \\\n    --tunneler-enabled \\\n    --jwt-output-file path/to/token.jwt\n')),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/guides/deployments/linux/router/cli-mgmt"},"Learn more about managing routers with the CLI"),"."),(0,a.kt)("p",null,"The systemd service looks for the token in ",(0,a.kt)("strong",{parentName:"p"},"/opt/openziti/etc/router/.token")," if env var ",(0,a.kt)("inlineCode",{parentName:"p"},"ZITI_ENROLL_TOKEN")," is empty. The file must be readable by root (not others)."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ZITI_ENROLL_TOKEN")," may be defined in ",(0,a.kt)("strong",{parentName:"p"},"/opt/openziti/etc/router/bootstrap.env"),"."),(0,a.kt)("p",null,"The router will enroll with the controller during the first startup. The one-time enrollment token is consumed during the enrollment process and a private key is generated in the router's working directory."),(0,a.kt)("p",null,"Disable bootstrapping enrollment by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"ZITI_BOOTSTRAP_ENROLLMENT=false")," in ",(0,a.kt)("strong",{parentName:"p"},"/opt/openziti/etc/router/service.env"),"."),(0,a.kt)("h2",{id:"firewall"},"Firewall"),(0,a.kt)("p",null,"The router's generated configuration uses a single TCP port (default: ",(0,a.kt)("inlineCode",{parentName:"p"},"3022"),") defined by ",(0,a.kt)("inlineCode",{parentName:"p"},"ZITI_ROUTER_PORT")," in ",(0,a.kt)("strong",{parentName:"p"},"/opt/openziti/etc/router/bootstrap.env"),"."),(0,a.kt)("p",null,"Confirm the router is running and listening on the expected port."),(0,a.kt)("p",null,'This will list all listening TCP ports for commands that contain "ziti" in their name.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo ss -tlnp | grep ziti\n")),(0,a.kt)("p",null,'If you have only one process named like "ziti" running, you will see output similar to this.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},'LISTEN 0      4096                          *:3022             *:*    users:(("ziti",pid=2166302,fd=8))         \n')),(0,a.kt)("p",null,"Verify the router is reachable and presents a server certificate from the controller's intermediate edge signer CA and the intermediate CA cert. Substitute the router's advertised address and port for ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:3022")," with the advertised address in ",(0,a.kt)("strong",{parentName:"p"},"/var/lib/ziti-router/config.yml"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"openssl s_client -connect localhost:3022 -alpn ziti-edge -showcerts <>/dev/null \\\n|& openssl storeutl -certs -noout -text /dev/stdin \\\n| grep -E '(Subject|Issuer):'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"Issuer: C=US, L=Charlotte, O=NetFoundry, OU=ADV-DEV, CN=NetFoundry Inc. Intermediate CA 42KvRQxn.\nSubject: C=US, ST=NC, L=Charlotte, O=NetFoundry, OU=Ziti, CN=BhCjN2Rkx\nIssuer: C=US, L=Charlotte, O=NetFoundry, OU=ADV-DEV, CN=NetFoundry Inc. Certificate Authority IpcOEkAR6\nSubject: C=US, ST=NC, L=Charlotte, O=NetFoundry, OU=ADV-DEV, CN=NetFoundry Inc. Intermediate CA 42KvRQxn.\n")),(0,a.kt)("h2",{id:"logging"},"Logging"),(0,a.kt)("p",null,"View the service's output."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"journalctl -u ziti-router.service\n")),(0,a.kt)("br",null),(0,a.kt)("p",null,"Learn more in ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/logging"},"the logging reference"),"."),(0,a.kt)("br",null),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"goformats",label:"Log Formats",mdxType:"TabItem"},(0,a.kt)("p",null,"Set a different format in the override file's ",(0,a.kt)("inlineCode",{parentName:"p"},"ExecStart")," directive."),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:"title=/etc/systemd/system/ziti-router.service.d/override.conf",title:"/etc/systemd/system/ziti-router.service.d/override.conf"},"[Service]\nExecStart=\nExecStart=/opt/openziti/etc/router/entrypoint.bash run config.yml --log-formatter text\n")),(0,a.kt)("br",null)),(0,a.kt)(l.Z,{value:"golevels",label:"Log Levels",mdxType:"TabItem"},(0,a.kt)("p",null,"Enable DEBUG log level with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--verbose")," flag in the override file's ",(0,a.kt)("inlineCode",{parentName:"p"},"ExecStart")," directive."),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:"title=/etc/systemd/system/ziti-router.service.d/override.conf",title:"/etc/systemd/system/ziti-router.service.d/override.conf"},"[Service]\nExecStart=\nExecStart=/opt/openziti/etc/router/entrypoint.bash run config.yml --verbose\n")))),(0,a.kt)("h2",{id:"uninstall"},"Uninstall"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Clean the service state."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo systemctl disable --now ziti-router.service\nsudo systemctl clean --what=state ziti-router.service\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Purge the package, including configuration files."),(0,a.kt)("p",{parentName:"li"},"APT - Debian, Ubuntu, etc."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo apt-get purge openziti-router\n")),(0,a.kt)("p",{parentName:"li"},"RPM - RedHat, Fedora, etc."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo dnf remove openziti-router\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Remove any firewall exceptions you created."))))}f.isMDXComponent=!0}}]);