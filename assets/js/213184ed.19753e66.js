"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[5130],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(r),d=i,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||l;return r?n.createElement(g,a(a({ref:t},p),{},{components:r})):n.createElement(g,a({ref:t},p))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=r.length,a=new Array(l);a[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:i,a[1]=o;for(var c=2;c<l;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},19455:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const l={},a="File Reporter",o={unversionedId:"learn/core-concepts/metrics/file",id:"learn/core-concepts/metrics/file",title:"File Reporter",description:"The controller event system can write metrics to a file for direct viewing or post-processing into a metrics system of your choice.",source:"@site/docs/learn/core-concepts/metrics/20-file.mdx",sourceDirName:"learn/core-concepts/metrics",slug:"/learn/core-concepts/metrics/file",permalink:"/docs/learn/core-concepts/metrics/file",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/20-file.mdx",tags:[],version:"current",sidebarPosition:20,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Available Metrics",permalink:"/docs/learn/core-concepts/metrics/available-metrics"},next:{title:"On Demand",permalink:"/docs/learn/core-concepts/metrics/inspect"}},s={},c=[{value:"Ziti Configuration",id:"ziti-configuration",level:2},{value:"Metrics Reporting",id:"metrics-reporting",level:3},{value:"Metrics Writing",id:"metrics-writing",level:3},{value:"Metrics Subscription",id:"metrics-subscription",level:4},{value:"Example:",id:"example",level:5},{value:"Metrics Handling",id:"metrics-handling",level:4},{value:"File Rolling",id:"file-rolling",level:5},{value:"Example",id:"example-1",level:4},{value:"Putting it all together",id:"putting-it-all-together",level:3},{value:"Metric Examples",id:"metric-examples",level:2},{value:"intValue",id:"intvalue",level:3},{value:"Histogram",id:"histogram",level:3},{value:"Timer",id:"timer",level:3}],p={toc:c},m="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"file-reporter"},"File Reporter"),(0,i.kt)("p",null,"The controller event system can write metrics to a file for direct viewing or post-processing into a metrics system of your choice."),(0,i.kt)("h2",{id:"ziti-configuration"},"Ziti Configuration"),(0,i.kt)("p",null,"There are two independent configurations that need to be set up for metric event reporting to work:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Report Interval:")," The controller and routers need to have a metric reporting interval set.  The interval determines how often metrics will be sent to the controller and possibly written out to file"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Event Subscription:")," The subscription is configured in the controller, and determines which of the reported metrics are written.")),(0,i.kt)("h3",{id:"metrics-reporting"},"Metrics Reporting"),(0,i.kt)("p",null,"The reporting interval is defined in the ",(0,i.kt)("inlineCode",{parentName:"p"},"metrics.reportInterval")," property. While the controller and each router can have a different reporting interval, we suggest that you set them all the same to make lining up metrics across the cluster easier."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"metrics:\n  reportInterval: 20s\n")),(0,i.kt)("p",null,"Routers support an additional configuration parameter ",(0,i.kt)("inlineCode",{parentName:"p"},"MessageQueueSize")," which is the number of unsent metrics messages that can sit in the router metrics queue before metrics gathering is paused."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"metrics:\n  reportInterval: 20s\n  messageQueueSize: 20  // Default 10\n")),(0,i.kt)("h3",{id:"metrics-writing"},"Metrics Writing"),(0,i.kt)("p",null,"Writing of metrics is broken into two pieces:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"subscription:")," Which metrics will be written"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"hander:")," how the metrics will be written")),(0,i.kt)("h4",{id:"metrics-subscription"},"Metrics Subscription"),(0,i.kt)("p",null,"The metrics subscription defines which metrics will be written and how they will be written. "),(0,i.kt)("p",null,"There are two parts to a metrics event reporter\nThe subscription has three components"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"sourceFilter:")," Which components to write metrics for. This is a regular expression. ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"ctrl_client:")," Special marker for the controller"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Router ID:")," Get metrics for one and only one router"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},".","*",":")," Get metrics from the controller and all routers"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"metricFilter:")," Which metrics to report.  This is a regular expression",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},".","*","pool.","*",":")," Report only pool metrics"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},".","*",":")," Report all metrics")))),(0,i.kt)("h5",{id:"example"},"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"events:\n  allControllerMetrics:\n    subscriptions:\n      - type: metrics\n        sourceFilter: ctrl_client\n        metricFilter: .*\n  justEdgeRouterPoolMetrics:\n    subscriptions:\n      - type: metrics\n        sourceFilter: .*\n        metricFilter: .*pool.*\n")),(0,i.kt)("h4",{id:"metrics-handling"},"Metrics Handling"),(0,i.kt)("p",null,"The metrics handler defined how metrics are to be written.  It is comprised of:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"type:")," The type of handler.  Supported types are:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"file:")," Metrics will be written to a file")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"maxsizemb:")," File rolling - log files will be rolled when they reach this size.  Default size is ",(0,i.kt)("inlineCode",{parentName:"li"},"10mb"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"maxbackups")," File rolling - the number of files to keep. Default is ",(0,i.kt)("inlineCode",{parentName:"li"},"0 (unlimited)"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"format:")," The format of the metric.  Supported formats are: ",(0,i.kt)("inlineCode",{parentName:"li"},"json")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"path:")," The name of the file to write metrics to")),(0,i.kt)("h5",{id:"file-rolling"},"File Rolling"),(0,i.kt)("p",null,"files are rolled when they reach a size of ",(0,i.kt)("inlineCode",{parentName:"p"},"maxsizemb"),". Files are renamed from ",(0,i.kt)("inlineCode",{parentName:"p"},"name.log")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"name-iso8601.log")),(0,i.kt)("p",null,"For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"name-2022-06-07T18-50-44.568.log")),(0,i.kt)("h4",{id:"example-1"},"Example"),(0,i.kt)("p",null,"Write 100mb files, saving 2 of them."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"    handler:\n      type: file\n      format: json\n      maxsizemb: 100\n      maxbackups: 2\n      path: /tmp/controller-metrics.log\n")),(0,i.kt)("h3",{id:"putting-it-all-together"},"Putting it all together"),(0,i.kt)("p",null,"Controller configuration file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"metrics:\n  reportInterval: 20s\n\nevents:\n  allControllerMetrics:\n    subscriptions:\n      - type: metrics\n        sourceFilter: ctrl_client\n        metricFilter: .*\n    handler:\n      type: file\n      format: json\n      maxsizemb: 50\n      maxbackups: 2\n      path: /tmp/controller-metrics.log\n\n  justPoolMetrics:\n    subscriptions:\n      - type: metrics\n        sourceFilter: .*\n        metricFilter: .*pool.*\n    handler:\n      type: file\n      format: json\n      maxsizemb: 100\n      maxbackups: 5\n      path: /tmp/router-pool-metrics.log\n")),(0,i.kt)("p",null,"Router configuration files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"metrics:\n  reportInterval: 20s\n")),(0,i.kt)("h2",{id:"metric-examples"},"Metric Examples"),(0,i.kt)("h3",{id:"intvalue"},"intValue"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "metric_type": "intValue",\n  "namespace": "metrics",\n  "source_id": "ctrl_client",\n  "version": 2,\n  "timestamp": {\n    "seconds": 1654625684,\n    "nanos": 479708609\n  },\n  "metric": "pool.listener.mgmt.worker_count",\n  "metrics": {\n    "value": 1\n  },\n  "source_event_id": "acb85925-0e17-4ca0-90cb-9a2498b33bc8"\n}\n')),(0,i.kt)("h3",{id:"histogram"},"Histogram"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "metric_type": "histogram",\n  "namespace": "metrics",\n  "source_id": "ctrl_client",\n  "source_entity_id": "xpw7BEDAk",\n  "version": 2,\n  "timestamp": {\n    "seconds": 1654625684,\n    "nanos": 479708609\n  },\n  "metric": "ctrl.queue_time",\n  "metrics": {\n    "count": 57,\n    "max": 21647,\n    "mean": 15266.508771929824,\n    "min": 5753,\n    "p50": 15670,\n    "p75": 16558.5,\n    "p95": 18362.699999999997,\n    "p99": 21647,\n    "p999": 21647,\n    "p9999": 21647,\n    "std_dev": 2604.8795245927113,\n    "variance": 6785397.337642349\n  },\n  "source_event_id": "acb85925-0e17-4ca0-90cb-9a2498b33bc8"\n}\n')),(0,i.kt)("h3",{id:"timer"},"Timer"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "metric_type": "timer",\n  "namespace": "metrics",\n  "source_id": "ctrl_client",\n  "version": 2,\n  "timestamp": {\n    "seconds": 1654625684,\n    "nanos": 479708609\n  },\n  "metric": "api.session.enforcer.run",\n  "metrics": {\n    "count": 11,\n    "m15_rate": 0.2,\n    "m1_rate": 0.2,\n    "m5_rate": 0.2,\n    "max": 6842849,\n    "mean": 1096126.3636363635,\n    "mean_rate": 0.20374652060865114,\n    "min": 254514,\n    "p50": 335348,\n    "p75": 1212318,\n    "p95": 6842849,\n    "p99": 6842849,\n    "p999": 6842849,\n    "p9999": 6842849,\n    "std_dev": 1858257.4031879376,\n    "variance": 3453120576502.777\n  },\n  "source_event_id": "acb85925-0e17-4ca0-90cb-9a2498b33bc8"\n}\n')))}u.isMDXComponent=!0}}]);