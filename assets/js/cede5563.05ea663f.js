"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[7664],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=l(t),p=o,d=g["".concat(c,".").concat(p)]||g[p]||m[p]||i;return t?n.createElement(d,a(a({ref:r},u),{},{components:t})):n.createElement(d,a({ref:r},u))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s[g]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2302:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=t(87462),o=(t(67294),t(3905));const i={},a="Sequence Diagram",s={unversionedId:"learn/core-concepts/metrics/sequence-diagram",id:"learn/core-concepts/metrics/sequence-diagram",title:"Sequence Diagram",description:"OpenZiti systems provide a wide range of metrics for the monitoring of the network services, endpoints, and processes.  Some of the various metrics are visualized below to understand where they fall and what they measure in a network instance.  The bulk of the remaining metrics are measuring processes within the control plane, rather than network operation.",source:"@site/docs/learn/core-concepts/metrics/80-sequence-diagram.md",sourceDirName:"learn/core-concepts/metrics",slug:"/learn/core-concepts/metrics/sequence-diagram",permalink:"/docs/learn/core-concepts/metrics/sequence-diagram",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/80-sequence-diagram.md",tags:[],version:"current",sidebarPosition:80,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Using Grafana",permalink:"/docs/learn/core-concepts/metrics/grafana"},next:{title:"Zero Trust Models",permalink:"/docs/learn/core-concepts/zero-trust-models/overview"}},c={},l=[],u={toc:l},g="wrapper";function m(e){let{components:r,...t}=e;return(0,o.kt)(g,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sequence-diagram"},"Sequence Diagram"),(0,o.kt)("p",null,"OpenZiti systems provide a wide range of metrics for the monitoring of the network services, endpoints, and processes.  Some of the various metrics are visualized below to understand where they fall and what they measure in a network instance.  The bulk of the remaining metrics are measuring processes within the control plane, rather than network operation."),(0,o.kt)("mermaid",{value:"sequenceDiagram\ntitle Metrics\n\nparticipant Initiating SDK\nparticipant Edge Router 1\nparticipant Network Controller\nparticipant Edge Router 2\nparticipant Terminating SDK\n\n\n\n\nInitiating SDK ->>Edge Router 1 : ingress rx\n\n\nEdge Router 2 ->>Terminating SDK :egress tx\n\nnote over Initiating SDK, Edge Router 1 : ingress.rx.bytesrate<br>ingress.rx.msgrate<br>ingress.rx.msgsize <br>\nnote over Terminating SDK, Edge Router 2 : ingress.tx.bytesrate<br>ingress.tx.msgrate<br>ingress.tx.msgsize <br>\n\nEdge Router 1 ->> Initiating SDK: ingress tx\nTerminating SDK ->>Edge Router 2 : egress rx\n\nnote over Terminating SDK, Edge Router 2 : egress.rx.bytesrate<br>egress.rx.msgrate<br>egress.rx.msgsize <br>\nnote over Initiating SDK, Edge Router 1 : egress.tx.bytesrate<br>egress.tx.msgrate<br>egress.tx.msgsize <br>\npar \n    Network Controller ->>Edge Router 1 : \nand \n    Edge Router 1 ->>Network Controller : Control Channel (ctrl)\nend\npar \n    Network Controller ->>Edge Router 2 : \nand \n    Edge Router 2 ->>Network Controller : Control Channel (ctrl)\nend\n\n\nnote over Edge Router 1, Network Controller : ctrl.latency<br>ctrl.queue_time<br>ctrl.rx.bytesrate<br>ctrl.rx.msgrate<br>ctrl.rx.msgsize<br>ctrl.tx.bytesrate<br>ctrl.tx.msgrate<br>ctrl.tx.msgsize\n\n\nEdge Router 2 ->>Edge Router 1 : \nEdge Router 1 ->>Edge Router 2 : link\n\nnote over Edge Router 1, Edge Router 2 :link.latency<br>link.queue_time<br>link.rx.bytesrate<br>link.rx.msgrate<br>link.rx.msgsize<br>link.tx.bytesrate<br>link.tx.msgrate<br>link.tx.msgsize"}))}m.isMDXComponent=!0}}]);