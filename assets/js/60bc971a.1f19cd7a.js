"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[8929],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65471:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(87462),r=n(67294),l=n(86010),o=n(72389),i=n(86043);const s={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};function p(e){return!!e&&("SUMMARY"===e.tagName||p(e.parentElement))}function u(e,t){return!!e&&(e===t||u(e.parentElement,t))}function c(e){let{summary:t,children:n,...c}=e;const d=(0,o.Z)(),m=(0,r.useRef)(null),{collapsed:g,setCollapsed:f}=(0,i.u)({initialState:!c.open}),[k,h]=(0,r.useState)(c.open),b=r.isValidElement(t)?t:r.createElement("summary",null,t??"Details");return r.createElement("details",(0,a.Z)({},c,{ref:m,open:k,"data-collapsed":g,className:(0,l.Z)(s.details,d&&s.isBrowser,c.className),onMouseDown:e=>{p(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const t=e.target;p(t)&&u(t,m.current)&&(e.preventDefault(),g?(f(!1),h(!0)):f(!0))}}),b,r.createElement(i.z,{lazy:!1,collapsed:g,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{f(e),h(!e)}},r.createElement("div",{className:s.collapsibleContent},n)))}const d={details:"details_b_Ee"},m="alert alert--info";function g(e){let{...t}=e;return r.createElement(c,(0,a.Z)({},t,{className:(0,l.Z)(m,d.details,t.className)}))}function f(e){const t=r.Children.toArray(e.children),n=t.find((e=>r.isValidElement(e)&&"summary"===e.props?.mdxType)),l=r.createElement(r.Fragment,null,t.filter((e=>e!==n)));return r.createElement(g,(0,a.Z)({},e,{summary:n}),l)}},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(87462),r=n(67294),l=n(86010),o=n(12466),i=n(16550),s=n(91980),p=n(67392),u=n(50012);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=d(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,p]=g({queryString:n,groupId:a}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),k=(()=>{const e=s??c;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),f(e)}),[p,f,l]),tabValues:l}}var k=n(72389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==i&&(c(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},o,{className:(0,l.Z)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",h.tabList)},r.createElement(b,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function N(e){const t=(0,k.Z)();return r.createElement(y,(0,a.Z)({key:String(t)},e))}},12810:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(87462),r=(n(67294),n(3905)),l=n(65471);const o={toc:[]},i="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(i,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(l.Z,{mdxType:"Details"},(0,r.kt)("summary",null,"Configure the repository for the Debian family of distributions (Ubuntu, Mint, Pop!_OS)"),(0,r.kt)("p",null,"Install the OpenZiti repository key."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"curl -sSLf https://get.openziti.io/tun/package-repos.gpg | sudo gpg --dearmor --output /usr/share/keyrings/openziti.gpg\n")),(0,r.kt)("p",null,"Ensure the key is readable by all users."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo chmod a+r /usr/share/keyrings/openziti.gpg\n")),(0,r.kt)("p",null,"Create the repository file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo tee /etc/apt/sources.list.d/openziti-release.list >/dev/null <<EOF\ndeb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-stable debian main\nEOF\n")),(0,r.kt)("p",null,"Update the package list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo apt update\n"))),(0,r.kt)(l.Z,{mdxType:"Details"},(0,r.kt)("summary",null,"Configure the repository for the RedHat family (Fedora, Rocky, Alma)"),(0,r.kt)("p",null,"Create the repository file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo tee /etc/yum.repos.d/openziti-release.repo >/dev/null <<\\EOF\n[OpenZitiRelease]\nname=OpenZiti Release\nbaseurl=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat/$basearch\nenabled=1\ngpgcheck=0\ngpgkey=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat/$basearch/repodata/repomd.xml.key\nrepo_gpgcheck=1\nEOF\n")),(0,r.kt)("p",null,"Update the package list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo dnf update\n"))))}s.isMDXComponent=!0},99289:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>f,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var a=n(87462),r=(n(67294),n(3905)),l=n(74866),o=n(85162),i=n(12810);const s={title:"Controller Deployment",sidebar_label:"Controller",id:"deploy"},p=void 0,u={unversionedId:"guides/deployments/linux/controller/deploy",id:"guides/deployments/linux/controller/deploy",title:"Controller Deployment",description:"This article is about deploying a controller as a Linux system service. The controller introduction may be helpful to read first.",source:"@site/docs/guides/deployments/10-linux/10-controller/10-deploy.mdx",sourceDirName:"guides/deployments/10-linux/10-controller",slug:"/guides/deployments/linux/controller/deploy",permalink:"/docs/guides/deployments/linux/controller/deploy",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/10-controller/10-deploy.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Controller Deployment",sidebar_label:"Controller",id:"deploy"},sidebar:"docsSidebar",previous:{title:"Linux",permalink:"/docs/category/linux"},next:{title:"Migrate",permalink:"/docs/guides/deployments/linux/controller/migrate"}},c={},d=[{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Generate a Configuration",id:"generate-a-configuration",level:3},{value:"Generating a Public Key Infrastructure",id:"generating-a-public-key-infrastructure",level:4},{value:"Generating a Configuration File",id:"generating-a-configuration-file",level:4},{value:"Bootstrapping the Database",id:"bootstrapping-the-database",level:4},{value:"Manual Configuration",id:"manual-configuration",level:3},{value:"Provide a Configuration File",id:"provide-a-configuration-file",level:4},{value:"Provide a PKI",id:"provide-a-pki",level:4},{value:"Provide a Database",id:"provide-a-database",level:4},{value:"Migration Example",id:"migration-example",level:4},{value:"Starting Up",id:"starting-up",level:2},{value:"Firewall",id:"firewall",level:2},{value:"Logging",id:"logging",level:2},{value:"Uninstall",id:"uninstall",level:2}],m={toc:d},g="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This article is about deploying a controller as a Linux system service. ",(0,r.kt)("a",{parentName:"p",href:"/docs/learn/introduction/components#controller"},"The controller introduction")," may be helpful to read first."),(0,r.kt)("p",null,"We'll cover the following topics:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#configuration"},"Configuration")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#starting-up"},"Starting Up"))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"The controller package provides a service unit and, if bootstrapping is enabled, will generate a configuration based on the bootstrapping answer file. The ",(0,r.kt)("inlineCode",{parentName:"p"},"openziti")," package provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"ziti")," CLI and is installed automatically as a dependency. Run the install script for RPM and Debian distributions or manually configure the package repo and install package ",(0,r.kt)("inlineCode",{parentName:"p"},"openziti-controller"),"."),(0,r.kt)("p",null,"Download and run the install script."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"wget https://get.openziti.io/install.bash\n")),(0,r.kt)("p",null,"Install interactively so that you will have an opportunity to answer questions about generating a configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo bash ./install.bash openziti-controller\n")),(0,r.kt)(i.ZP,{mdxType:"LinuxPackageRepo"}),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"You must provide or generate a configuration. Configuration consists of a PKI, a config YAML file, and a database."),(0,r.kt)("h3",{id:"generate-a-configuration"},"Generate a Configuration"),(0,r.kt)("p",null,"You can generate a configuration by enabling bootstrapping during an interactive install which prompts for the most relevant answers, or by setting these values in the answer file."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("strong",{parentName:"li"},"/opt/openziti/etc/controller/service.env")," (the answer file for the service)",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"ZITI_BOOTSTRAP=true")," to opt-in to bootstrapping."))),(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("strong",{parentName:"li"},"/opt/openziti/etc/controller/bootstrap.env")," (the answer file for bootstrapping the controller)",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"ZITI_CTRL_ADVERTISED_ADDRESS")," to the FQDN of the controller."),(0,r.kt)("li",{parentName:"ol"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"ZITI_PWD")," to the desired management password for user ",(0,r.kt)("inlineCode",{parentName:"li"},"admin"),". You may delete this after bootstrapping.")))),(0,r.kt)("h4",{id:"generating-a-public-key-infrastructure"},"Generating a Public Key Infrastructure"),(0,r.kt)("p",null,"The controller service will generate a root CA and issue an intermediate CA cert during the first startup."),(0,r.kt)("p",null,"The controller needs a CA to issue certificates for edge identities during enrollment. This CA is known as the edge signer. It's a good idea to secure the root in a different location and use an intermediate CA for this purpose. This allows you to recover in a scenario where the intermediate was lost without changing the root of trust and invalidating all edge enrollments. Refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/deployments/linux/controller/backup"},"the article about backing up the controller")," for more information."),(0,r.kt)("p",null,"Disable bootstrapping a PKI by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"ZITI_BOOTSTRAP_PKI=false")," in ",(0,r.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/service.env"),"."),(0,r.kt)("p",null,"Check out ",(0,r.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/pki"},"the PKI page")," for an overview of these concepts."),(0,r.kt)("h4",{id:"generating-a-configuration-file"},"Generating a Configuration File"),(0,r.kt)("p",null,"The controller's configuration is loaded from a file (",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/configuration/controller"},"reference"),"). The Linux system service will generate a valid configuration during the first startup unless one already exists."),(0,r.kt)("p",null,"The filename of the configuration file, relative to the Linux service's working directory (default: ",(0,r.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller/config.yml"),"). You may override this in ",(0,r.kt)("strong",{parentName:"p"},"/etc/systemd/system/ziti-controller.service.d/override.conf")," by re-initializing ",(0,r.kt)("inlineCode",{parentName:"p"},"ExecStart=")," with an empty value followed by a second ",(0,r.kt)("inlineCode",{parentName:"p"},"ExecStart")," directive specifying the override command."),(0,r.kt)("p",null,"Disable bootstrapping a configuration by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"ZITI_BOOTSTRAP_CONFIG=false")," in ",(0,r.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/service.env"),"."),(0,r.kt)("h4",{id:"bootstrapping-the-database"},"Bootstrapping the Database"),(0,r.kt)("p",null,"The controller requires a BoltDB database to store its state. The Linux system service will initialize a database with a default admin password during the first startup unless one already exists."),(0,r.kt)("p",null,"You must specify the management password for the default admin user before starting the service. This is done by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"ZITI_PWD")," in ",(0,r.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/bootstrap.env")," or in the root-only file specified by ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadCredential")," in ",(0,r.kt)("strong",{parentName:"p"},"/etc/systemd/system/ziti-controller.service.d/override.conf"),". You may delete the password after bootstrapping for security."),(0,r.kt)("p",null,"Disable bootstrapping the database by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"ZITI_BOOTSTRAP_DATABASE=false")," in ",(0,r.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/service.env"),"."),(0,r.kt)("h3",{id:"manual-configuration"},"Manual Configuration"),(0,r.kt)("p",null,"You can provide, rather than generate, any or all of the PKI, configuration file, and database. If you plan to provide all three then you can disable bootstrapping entirely by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"ZITI_BOOTSTRAP=false")," in ",(0,r.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/service.env"),"."),(0,r.kt)("h4",{id:"provide-a-configuration-file"},"Provide a Configuration File"),(0,r.kt)("p",null,"Create the file at ",(0,r.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller/config.yml")," and set ",(0,r.kt)("inlineCode",{parentName:"p"},"ZITI_BOOTSTRAP_CONFIG=false")," in ",(0,r.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/service.env"),"."),(0,r.kt)("h4",{id:"provide-a-pki"},"Provide a PKI"),(0,r.kt)("p",null,"Place the intermediate CA for the controller's edge enrollment signer in ",(0,r.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller")," and set ",(0,r.kt)("inlineCode",{parentName:"p"},"ZITI_BOOTSTRAP_PKI=false")," in ",(0,r.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/service.env"),". The file paths to the intermediate CA are specified in the configuration file."),(0,r.kt)("h4",{id:"provide-a-database"},"Provide a Database"),(0,r.kt)("p",null,"Place the BoltDB file in ",(0,r.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller")," and set ",(0,r.kt)("inlineCode",{parentName:"p"},"ZITI_BOOTSTRAP_DATABASE=false")," in ",(0,r.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/service.env"),". The file path to the database is specified in the configuration file."),(0,r.kt)("h4",{id:"migration-example"},"Migration Example"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/guides/deployments/linux/controller/migrate"},"This example")," illustrates copying the PKI, configuration, and database from a previous installation to the controller service's working directory."),(0,r.kt)("h2",{id:"starting-up"},"Starting Up"),(0,r.kt)("p",null,"Start the controller service now and enable startup after reboot."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo systemctl enable --now ziti-controller.service\n")),(0,r.kt)("h2",{id:"firewall"},"Firewall"),(0,r.kt)("p",null,"The controller listens on a single configurable TCP port: ",(0,r.kt)("inlineCode",{parentName:"p"},"1280/tcp"),". Verify that the controller process is listening on this port and create a firewall exception if necessary."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"systemctl show -p MainPID --value ziti-controller.service \\\n| xargs -rIPID sudo lsof -Pnp PID |& awk '$5~/IP/'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"ziti    2694474 ziti-controller    8u     IPv6          222078013       0t0       TCP *:1280 (LISTEN)\n")),(0,r.kt)("p",null,"You may set ",(0,r.kt)("inlineCode",{parentName:"p"},"ZITI_CTRL_ADVERTISED_PORT")," in ",(0,r.kt)("strong",{parentName:"p"},"/opt/openziti/etc/controller/bootstrap.env")," to bootstrap with a different port."),(0,r.kt)("h2",{id:"logging"},"Logging"),(0,r.kt)("p",null,"View the controller service's output with ",(0,r.kt)("inlineCode",{parentName:"p"},"journalctl -u ziti-controller.service"),"."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"goformats",label:"Log Formats",mdxType:"TabItem"},(0,r.kt)("p",null,"Choose the logging format (default: text)."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pfxlog")," - a human-readable format leveraging ANSI escape codes to colorize log levels"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"json")," - a machine-readable format targeting automated processes for log aggregation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"text")," - a human-readable format using plain text (no ANSI escape codes)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Run without colorized log levels"',title:'"Run',without:!0,colorized:!0,log:!0,'levels"':!0},"ziti controller run config.yml --log-formatter text\n"))),(0,r.kt)(o.Z,{value:"golevels",label:"Log Levels",mdxType:"TabItem"},(0,r.kt)("p",null,"The default log level is ",(0,r.kt)("inlineCode",{parentName:"p"},"INFO"),". This means that log messages ",(0,r.kt)("inlineCode",{parentName:"p"},"INFO"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"WARNING"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ERROR"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"FATAL")," will all be emitted. Enable verbose logging by adding ",(0,r.kt)("inlineCode",{parentName:"p"},"--verbose or -v")," to the command being executed. Verbose mode will additionally emit ",(0,r.kt)("inlineCode",{parentName:"p"},"DEBUG")," log level messages."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Run the controller with verbose (DEBUG, 4) log level"',title:'"Run',the:!0,controller:!0,with:!0,verbose:!0,"(DEBUG,":!0,"4)":!0,log:!0,'level"':!0},"ziti controller run config.yml --verbose\n")))),(0,r.kt)("h2",{id:"uninstall"},"Uninstall"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clean the Service State"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo systemctl disable --now ziti-controller.service\nsudo systemctl clean --what=state ziti-controller.service\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Purge the package, including configuration files."),(0,r.kt)("p",{parentName:"li"},"APT - Debian, Ubuntu, etc."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo apt-get purge openziti-controller\n")),(0,r.kt)("p",{parentName:"li"},"RPM - RedHat, Fedora, etc."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo dnf remove openziti-controller\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Remove any firewall exceptions you created."))))}f.isMDXComponent=!0}}]);