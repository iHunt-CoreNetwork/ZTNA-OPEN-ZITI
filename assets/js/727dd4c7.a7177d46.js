"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[4710],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?o.createElement(f,a(a({ref:t},p),{},{components:n})):o.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},53737:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const i={title:"Deploy the Console",sidebar_label:"Console"},a=void 0,l={unversionedId:"guides/deployments/docker/console",id:"guides/deployments/docker/console",title:"Deploy the Console",description:"This article is about deploying the console as a single-page application (SPA) embedded in the controller's API running in a container.",source:"@site/docs/guides/deployments/20-docker/30-console.mdx",sourceDirName:"guides/deployments/20-docker",slug:"/guides/deployments/docker/console",permalink:"/docs/guides/deployments/docker/console",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/20-docker/30-console.mdx",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Deploy the Console",sidebar_label:"Console"},sidebar:"docsSidebar",previous:{title:"Router",permalink:"/docs/guides/deployments/docker/router"},next:{title:"Kubernetes",permalink:"/docs/category/kubernetes"}},s={},c=[],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This article is about deploying the console as a single-page application (SPA) embedded in the controller's API running in a container."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Configure the controller"),(0,r.kt)("p",{parentName:"li"},"The console's ",(0,r.kt)("inlineCode",{parentName:"p"},"zac")," binding must be on the same web listener as the controller's management API, i.e., the ",(0,r.kt)("inlineCode",{parentName:"p"},"edge-management")," binding."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"      - binding: zac\n        options:\n          location: /ziti-console\n          indexFile: index.html\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"location")," is the filesystem path to the static files of the console. In the controller container, the usual path is ",(0,r.kt)("inlineCode",{parentName:"li"},"/ziti-console"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"indexFile")," property is the entry point to the console."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To apply the changes, the controller must be restarted.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Visit the console at ",(0,r.kt)("inlineCode",{parentName:"p"},"/zac/")," on the controller's address."),(0,r.kt)("p",{parentName:"li"},"The console is now available at ",(0,r.kt)("inlineCode",{parentName:"p"},"https://<fqdn>:<port>/zac/"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Log in to the console."),(0,r.kt)("p",{parentName:"li"},"The only available authentication method for the console SPA is username and password.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Console certificate option - The console is served from the controller's API and can be used with the default API certificate. The controller can be configured to present a different certificate for the console when the API is accessed by a distinct URL for the console. For more information about using alternative server certs with the controller, see: ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/configuration/conventions#identity"},"the configuration reference for the ",(0,r.kt)("inlineCode",{parentName:"a"},"identity")," property"),"."))))}u.isMDXComponent=!0}}]);