"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[8585],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},74794:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={title:"Console Deployment",sidebar_label:"Console"},i=void 0,l={unversionedId:"guides/deployments/linux/console",id:"guides/deployments/linux/console",title:"Console Deployment",description:"Installation",source:"@site/docs/guides/deployments/10-linux/30-console.mdx",sourceDirName:"guides/deployments/10-linux",slug:"/guides/deployments/linux/console",permalink:"/docs/guides/deployments/linux/console",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/30-console.mdx",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Console Deployment",sidebar_label:"Console"},sidebar:"docsSidebar",previous:{title:"Backup",permalink:"/docs/guides/deployments/linux/router/backup"},next:{title:"Docker",permalink:"/docs/category/docker"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Install the Package",id:"install-the-package",level:3},{value:"Install from GitHub",id:"install-from-github",level:3},{value:"Configuration",id:"configuration",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("h3",{id:"install-the-package"},"Install the Package"),(0,r.kt)("p",null,"The package installs the console files in ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt/openziti/share/console"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Install the console package"',title:'"Install',the:!0,console:!0,'package"':!0},"sudo apt install openziti-console\n")),(0,r.kt)("p",null,"Or, configure the package repository and install with this one-liner."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Configure the package repository and install openziti-console"',title:'"Configure',the:!0,package:!0,repository:!0,and:!0,install:!0,'openziti-console"':!0},"curl -sS https://get.openziti.io/install.bash | sudo bash -s openziti-console\n")),(0,r.kt)("h3",{id:"install-from-github"},"Install from GitHub"),(0,r.kt)("p",null,"Console versions >= 3.0.0 from GitHub may be used."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download a release."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"wget https://github.com/openziti/ziti-console/releases/latest/download/ziti-console.zip\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Unzip in a directory that is mounted the controller's filesystem namespace."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo mkdir -p /opt/openziti/share/console\nsudo unzip -d /opt/openziti/share/console ./ziti-console.zip\n")))),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("strong",{parentName:"p"},"/var/lib/ziti-controller/config.yml"),", ensure you have an API binding ",(0,r.kt)("inlineCode",{parentName:"p"},"zac")," on the same web listener where ",(0,r.kt)("inlineCode",{parentName:"p"},"edge-management")," is bound. Ensure the ",(0,r.kt)("inlineCode",{parentName:"p"},"location")," matches the path to the console files."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"- binding: zac\n  options:\n    location: /opt/openziti/share/console\n    indexFile: index.html\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Restart the controller service if you edited the configuration."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"sudo systemctl restart ziti-controller.service\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Visit the controller's web address in a browser to access the console."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"https://ctrl.ziti.example.com:1280/zac/\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Console certificate option - The console is served from the controller's API and can be used with the default API certificate. The controller can be configured to present a different certificate for the console when the API is accessed by a distinct URL for the console. For more information about using alternative server certs with the controller, see: ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/configuration/conventions#identity"},"the configuration reference for the ",(0,r.kt)("inlineCode",{parentName:"a"},"identity")," property"),"."))))}d.isMDXComponent=!0}}]);