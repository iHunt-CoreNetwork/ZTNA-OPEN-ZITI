"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[4314],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>v});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(r),h=i,v=u["".concat(s,".").concat(h)]||u[h]||d[h]||o;return r?n.createElement(v,l(l({ref:t},p),{},{components:r})):n.createElement(v,l({ref:t},p))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,l=new Array(o);l[0]=h;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[u]="string"==typeof e?e:i,l[1]=a;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},43979:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const o={title:"Renew Client/Server Certs",id:"renew-cert"},l=void 0,a={unversionedId:"guides/troubleshooting/pki-troubleshooting/renew-cert",id:"guides/troubleshooting/pki-troubleshooting/renew-cert",title:"Renew Client/Server Certs",description:"Creating New Certs",source:"@site/docs/guides/troubleshooting/pki-troubleshooting/renew-cert.md",sourceDirName:"guides/troubleshooting/pki-troubleshooting",slug:"/guides/troubleshooting/pki-troubleshooting/renew-cert",permalink:"/docs/guides/troubleshooting/pki-troubleshooting/renew-cert",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/troubleshooting/pki-troubleshooting/renew-cert.md",tags:[],version:"current",frontMatter:{title:"Renew Client/Server Certs",id:"renew-cert"},sidebar:"docsSidebar",previous:{title:"PKI Troubleshooting",permalink:"/docs/guides/troubleshooting/pki-troubleshooting/"},next:{title:"Expired Certs",permalink:"/docs/guides/troubleshooting/pki-troubleshooting/troubleshoot-expired-certs"}},s={},c=[{value:"Creating New Certs",id:"creating-new-certs",level:2},{value:"Setup Environment Variables",id:"setup-environment-variables",level:3},{value:"Control Plane Certs",id:"control-plane-certs",level:3},{value:"Server Cert",id:"server-cert",level:4},{value:"Client Cert",id:"client-cert",level:4},{value:"Edge / API Certs",id:"edge--api-certs",level:3},{value:"Update environment for edge certs",id:"update-environment-for-edge-certs",level:4},{value:"Server Cert",id:"server-cert-1",level:4},{value:"Client Cert",id:"client-cert-1",level:4},{value:"Update Controller Config",id:"update-controller-config",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"creating-new-certs"},"Creating New Certs"),(0,i.kt)("p",null,"If you set up your network following the ",(0,i.kt)("a",{parentName:"p",href:"/docs/learn/quickstarts"},"quickstart guides"),", your PKI will have client and\nserver certs for the controller's control plane and edge/API plane. "),(0,i.kt)("h3",{id:"setup-environment-variables"},"Setup Environment Variables"),(0,i.kt)("p",null,"The following environment variables are the minimum required to renew a cert with the ",(0,i.kt)("inlineCode",{parentName:"p"},"ziti-cli-functions.sh")," script.\nThese can be obtained through the ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file for your network. However, it is recommended that the ",(0,i.kt)("inlineCode",{parentName:"p"},"FILE_NAME_ROOT")," value is different than\nthe existing (expired) cert filenames so a new cert will be created rather than overwriting the existing cert."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# Path to the network PKI root folder\nexport ZITI_PKI="/home/ubuntu/.ziti/quickstart/homeassistant2/pki"\n\n# The DNS entries the PKI should be valid for\nexport DNS_ALLOW_LIST="localhost,homeassistant2"\n\n# The IP addresses the PKI should be valid for\nexport IP_ALLOW_LIST="127.0.0.1,150.136.141.199"\n')),(0,i.kt)("h3",{id:"control-plane-certs"},"Control Plane Certs"),(0,i.kt)("p",null,"The following values are unique to control plane certs as the edge/API plane will have its own CA and certs. Update\nthese values as they pertain to your network PKI setup."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'export ZITI_CA_NAME="homeassistant2-intermediate"\nexport FILE_NAME_ROOT="homeassistant2-new"\n')),(0,i.kt)("h4",{id:"server-cert"},"Server Cert"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'source /dev/stdin <<< "$(wget -qO- https://get.openziti.io/quick/ziti-cli-functions.sh)"; expressInstall\nziti pki create server --pki-root="${ZITI_PKI}" --ca-name "${ZITI_CA_NAME}" \\\n      --server-file "${FILE_NAME_ROOT}-server" \\\n      --dns "${DNS_ALLOW_LIST}" --ip "${IP_ALLOW_LIST}" \\\n      --server-name "${FILE_NAME_ROOT} server certificate"\n')),(0,i.kt)("h4",{id:"client-cert"},"Client Cert"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'ziti pki create client --pki-root="${ZITI_PKI}" --ca-name "${ZITI_CA_NAME}" \\\n          --client-file "${FILE_NAME_ROOT}-client" \\\n          --key-file "${FILE_NAME_ROOT}-server" \\\n          --client-name "${FILE_NAME_ROOT}"\n')),(0,i.kt)("h3",{id:"edge--api-certs"},"Edge / API Certs"),(0,i.kt)("h4",{id:"update-environment-for-edge-certs"},"Update environment for edge certs"),(0,i.kt)("p",null,"The following values are unique to edge/API plane certs as the control plane will have its own CA and certs. Update\nthese values as they pertain to your network PKI setup."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'export ZITI_CA_NAME="150.136.141.199-intermediate"\nexport FILE_NAME_ROOT="150.136.141.199-new"\n')),(0,i.kt)("h4",{id:"server-cert-1"},"Server Cert"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'ziti pki create server --pki-root="${ZITI_PKI}" --ca-name "${ZITI_CA_NAME}" \\\n      --server-file "${FILE_NAME_ROOT}-server" \\\n      --dns "${DNS_ALLOW_LIST}" --ip "${IP_ALLOW_LIST}" \\\n      --server-name "${FILE_NAME_ROOT} server certificate"\n')),(0,i.kt)("h4",{id:"client-cert-1"},"Client Cert"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'ziti pki create client --pki-root="${ZITI_PKI}" --ca-name "${ZITI_CA_NAME}" \\\n          --client-file "${FILE_NAME_ROOT}-client" \\\n          --key-file "${FILE_NAME_ROOT}-server" \\\n          --client-name "${FILE_NAME_ROOT}"\n')),(0,i.kt)("h2",{id:"update-controller-config"},"Update Controller Config"),(0,i.kt)("p",null,"If the original files were overwritten, no change is needed. However, if new files were generated alongside existing\nfiles, the controller config ",(0,i.kt)("inlineCode",{parentName:"p"},"identity")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"web--\x3eidentity")," sections need the ",(0,i.kt)("inlineCode",{parentName:"p"},"cert"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"server_cert"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"key")," fields\nupdated to point to the new client, server certs and key. Note that the key is auto-generated when creating the certs."),(0,i.kt)("p",null,"Now, restart the controller and double check to ensure the certificates are now valid."))}d.isMDXComponent=!0}}]);