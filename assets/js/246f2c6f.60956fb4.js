"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[9285],{26267:e=>{e.exports=JSON.parse('{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/docs","tagsPath":"/docs/tags","editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs","editUrlLocalized":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/i18n/en/docusaurus-plugin-content-docs/current","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/sidebars.js","contentPath":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/docs","contentPathLocalized":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/i18n/en/docusaurus-plugin-content-docs/current","docs":[{"unversionedId":"downloads","id":"downloads","title":"Downloads","description":"Download a Ziti Tunneller or the Ziti Command","source":"@site/docs/downloads.mdx","sourceDirName":".","slug":"/downloads","permalink":"/docs/downloads","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/downloads.mdx","tags":[],"version":"current","frontMatter":{"title":"Downloads","hide_table_of_contents":true,"description":"Download a Ziti Tunneller or the Ziti Command"}},{"unversionedId":"guides/data-flow-explainer","id":"guides/data-flow-explainer","title":"Data Flow Explainer","description":"This explainer walks through how data flow is established in an OpenZiti network.","source":"@site/docs/guides/data-flow-explainer.md","sourceDirName":"guides","slug":"/guides/data-flow-explainer","permalink":"/docs/guides/data-flow-explainer","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/data-flow-explainer.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"title":"Data Flow Explainer","sidebar_position":30},"sidebar":"docsSidebar","previous":{"title":"Services","permalink":"/docs/guides/Public_Cloud_Deployment/Services"},"next":{"title":"Kubernetes","permalink":"/docs/category/kubernetes"}},{"unversionedId":"guides/hsm/hsmIndex","id":"guides/hsm/hsmIndex","title":"Hardware Security Modules (HSM) - PKCS11","description":"A hardware security module (HSM) is a physical piece of equipment which is designed specifically to protect cryptographic keys","source":"@site/docs/guides/hsm/index.md","sourceDirName":"guides/hsm","slug":"/guides/hsm/","permalink":"/docs/guides/hsm/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/hsm/index.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"id":"hsmIndex"},"sidebar":"docsSidebar","previous":{"title":"Sidecar Proxy","permalink":"/docs/guides/kubernetes/workload-tunneling/kubernetes-sidecar"},"next":{"title":"SoftHSMv2","permalink":"/docs/guides/hsm/softhsm"}},{"unversionedId":"guides/hsm/softhsm","id":"guides/hsm/softhsm","title":"SoftHSMv2","description":"Overview","source":"@site/docs/guides/hsm/softhsm.mdx","sourceDirName":"guides/hsm","slug":"/guides/hsm/softhsm","permalink":"/docs/guides/hsm/softhsm","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/hsm/softhsm.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Hardware Security Modules (HSM) - PKCS11","permalink":"/docs/guides/hsm/"},"next":{"title":"YubiKey by Yubico","permalink":"/docs/guides/hsm/yubikey"}},{"unversionedId":"guides/hsm/yubikey","id":"guides/hsm/yubikey","title":"YubiKey by Yubico","description":"Yubico is a manufacturer of HSM devices. A popular line of HSM produced by Yubico is the","source":"@site/docs/guides/hsm/yubikey.mdx","sourceDirName":"guides/hsm","slug":"/guides/hsm/yubikey","permalink":"/docs/guides/hsm/yubikey","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/hsm/yubikey.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"SoftHSMv2","permalink":"/docs/guides/hsm/softhsm"},"next":{"title":"Securing APIs","permalink":"/docs/category/securing-apis"}},{"unversionedId":"guides/index","id":"guides/index","title":"Overview","description":"What is a Guide?","source":"@site/docs/guides/index.md","sourceDirName":"guides","slug":"/guides/","permalink":"/docs/guides/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/index.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Overview","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"Glossary","permalink":"/docs/reference/glossary"},"next":{"title":"Local Gateway","permalink":"/docs/category/local-gateway"}},{"unversionedId":"guides/kubernetes/hosting/kubernetes-console","id":"guides/kubernetes/hosting/kubernetes-console","title":"Install the OpenZiti Console in Kubernetes","description":"","source":"@site/docs/guides/kubernetes/hosting/kubernetes-console.mdx","sourceDirName":"guides/kubernetes/hosting","slug":"/guides/kubernetes/hosting/kubernetes-console","permalink":"/docs/guides/kubernetes/hosting/kubernetes-console","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/kubernetes/hosting/kubernetes-console.mdx","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_position":30,"sidebar_label":"Console","title":"Install the OpenZiti Console in Kubernetes"},"sidebar":"docsSidebar","previous":{"title":"Router","permalink":"/docs/guides/kubernetes/hosting/kubernetes-router"},"next":{"title":"Workload Tunneling","permalink":"/docs/guides/kubernetes/workload-tunneling/"}},{"unversionedId":"guides/kubernetes/hosting/kubernetes-controller","id":"guides/kubernetes/hosting/kubernetes-controller","title":"Install OpenZiti Controller in Kubernetes","description":"","source":"@site/docs/guides/kubernetes/hosting/kubernetes-controller.mdx","sourceDirName":"guides/kubernetes/hosting","slug":"/guides/kubernetes/hosting/kubernetes-controller","permalink":"/docs/guides/kubernetes/hosting/kubernetes-controller","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/kubernetes/hosting/kubernetes-controller.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"sidebar_label":"Controller","title":"Install OpenZiti Controller in Kubernetes"},"sidebar":"docsSidebar","previous":{"title":"Hosting OpenZiti","permalink":"/docs/category/hosting-openziti"},"next":{"title":"Router","permalink":"/docs/guides/kubernetes/hosting/kubernetes-router"}},{"unversionedId":"guides/kubernetes/hosting/kubernetes-router","id":"guides/kubernetes/hosting/kubernetes-router","title":"Install OpenZiti Router in Kubernetes","description":"","source":"@site/docs/guides/kubernetes/hosting/kubernetes-router.mdx","sourceDirName":"guides/kubernetes/hosting","slug":"/guides/kubernetes/hosting/kubernetes-router","permalink":"/docs/guides/kubernetes/hosting/kubernetes-router","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/kubernetes/hosting/kubernetes-router.mdx","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20,"sidebar_label":"Router","title":"Install OpenZiti Router in Kubernetes"},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/guides/kubernetes/hosting/kubernetes-controller"},"next":{"title":"Console","permalink":"/docs/guides/kubernetes/hosting/kubernetes-console"}},{"unversionedId":"guides/kubernetes/workload-tunneling/index","id":"guides/kubernetes/workload-tunneling/index","title":"Workload Tunneling","description":"This guide will help you discover the best strategy and tool for connecting a Kubernetes workload. This overview page links to child pages for each strategy and tool, and a summary of each is provided in the sections below. Click on the chart\'s outcomes to see the corresponding documentation.","source":"@site/docs/guides/kubernetes/workload-tunneling/index.md","sourceDirName":"guides/kubernetes/workload-tunneling","slug":"/guides/kubernetes/workload-tunneling/","permalink":"/docs/guides/kubernetes/workload-tunneling/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/kubernetes/workload-tunneling/index.md","tags":[],"version":"current","frontMatter":{"title":"Workload Tunneling"},"sidebar":"docsSidebar","previous":{"title":"Console","permalink":"/docs/guides/kubernetes/hosting/kubernetes-console"},"next":{"title":"Reverse Proxy Pod","permalink":"/docs/guides/kubernetes/workload-tunneling/kubernetes-host"}},{"unversionedId":"guides/kubernetes/workload-tunneling/kubernetes-daemonset","id":"guides/kubernetes/workload-tunneling/kubernetes-daemonset","title":"Kubernetes Node Daemonset","description":"This daemonset manifest installs a privileged Ziti tunneler on each selected node. The tunneler provides a nameserver to CoreDNS for resolving Ziti addresses, and IP routes to capture pod egress for Ziti services.","source":"@site/docs/guides/kubernetes/workload-tunneling/kubernetes-daemonset.md","sourceDirName":"guides/kubernetes/workload-tunneling","slug":"/guides/kubernetes/workload-tunneling/kubernetes-daemonset","permalink":"/docs/guides/kubernetes/workload-tunneling/kubernetes-daemonset","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/kubernetes/workload-tunneling/kubernetes-daemonset.md","tags":[],"version":"current","sidebarPosition":70,"frontMatter":{"title":"Kubernetes Node Daemonset","sidebar_label":"Node Proxy","sidebar_position":70},"sidebar":"docsSidebar","previous":{"title":"Reverse Proxy Pod","permalink":"/docs/guides/kubernetes/workload-tunneling/kubernetes-host"},"next":{"title":"Sidecar Proxy","permalink":"/docs/guides/kubernetes/workload-tunneling/kubernetes-sidecar"}},{"unversionedId":"guides/kubernetes/workload-tunneling/kubernetes-host","id":"guides/kubernetes/workload-tunneling/kubernetes-host","title":"How to Install a Ziti Hosting Tunneler in Kubernetes","description":"","source":"@site/docs/guides/kubernetes/workload-tunneling/kubernetes-host.mdx","sourceDirName":"guides/kubernetes/workload-tunneling","slug":"/guides/kubernetes/workload-tunneling/kubernetes-host","permalink":"/docs/guides/kubernetes/workload-tunneling/kubernetes-host","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/kubernetes/workload-tunneling/kubernetes-host.mdx","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"sidebar_position":60,"sidebar_label":"Reverse Proxy Pod","title":"How to Install a Ziti Hosting Tunneler in Kubernetes"},"sidebar":"docsSidebar","previous":{"title":"Workload Tunneling","permalink":"/docs/guides/kubernetes/workload-tunneling/"},"next":{"title":"Node Proxy","permalink":"/docs/guides/kubernetes/workload-tunneling/kubernetes-daemonset"}},{"unversionedId":"guides/kubernetes/workload-tunneling/kubernetes-sidecar","id":"guides/kubernetes/workload-tunneling/kubernetes-sidecar","title":"Kubernetes Sidecar Proxy","description":"Overview","source":"@site/docs/guides/kubernetes/workload-tunneling/kubernetes-sidecar.md","sourceDirName":"guides/kubernetes/workload-tunneling","slug":"/guides/kubernetes/workload-tunneling/kubernetes-sidecar","permalink":"/docs/guides/kubernetes/workload-tunneling/kubernetes-sidecar","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/kubernetes/workload-tunneling/kubernetes-sidecar.md","tags":[],"version":"current","sidebarPosition":70,"frontMatter":{"sidebar_position":70,"sidebar_label":"Sidecar Proxy"},"sidebar":"docsSidebar","previous":{"title":"Node Proxy","permalink":"/docs/guides/kubernetes/workload-tunneling/kubernetes-daemonset"},"next":{"title":"Hardware Security Modules (HSM) - PKCS11","permalink":"/docs/guides/hsm/"}},{"unversionedId":"guides/Local_Gateway/EdgeRouter","id":"guides/Local_Gateway/EdgeRouter","title":"Ziti-Edge-Router as Gateway","description":"1.0 Introduction","source":"@site/docs/guides/Local_Gateway/EdgeRouter.md","sourceDirName":"guides/Local_Gateway","slug":"/guides/Local_Gateway/EdgeRouter","permalink":"/docs/guides/Local_Gateway/EdgeRouter","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Local_Gateway/EdgeRouter.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"sidebar_label":"Using Ziti-Router","title":"Ziti-Edge-Router as Gateway"},"sidebar":"docsSidebar","previous":{"title":"Local Gateway","permalink":"/docs/category/local-gateway"},"next":{"title":"Using Ziti-Edge-Tunnel","permalink":"/docs/guides/Local_Gateway/EdgeTunnel"}},{"unversionedId":"guides/Local_Gateway/EdgeTunnel","id":"guides/Local_Gateway/EdgeTunnel","title":"Ziti-Edge-Tunnel as Gateway","description":"1.0 Introduction","source":"@site/docs/guides/Local_Gateway/EdgeTunnel.md","sourceDirName":"guides/Local_Gateway","slug":"/guides/Local_Gateway/EdgeTunnel","permalink":"/docs/guides/Local_Gateway/EdgeTunnel","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Local_Gateway/EdgeTunnel.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20,"sidebar_label":"Using Ziti-Edge-Tunnel","title":"Ziti-Edge-Tunnel as Gateway"},"sidebar":"docsSidebar","previous":{"title":"Using Ziti-Router","permalink":"/docs/guides/Local_Gateway/EdgeRouter"},"next":{"title":"Public Cloud Deployment","permalink":"/docs/category/public-cloud-deployment"}},{"unversionedId":"guides/Public_Cloud_Deployment/Controller","id":"guides/Public_Cloud_Deployment/Controller","title":"Controller Config","description":"1.1 Create a VM to be used as the Controller","source":"@site/docs/guides/Public_Cloud_Deployment/Controller.md","sourceDirName":"guides/Public_Cloud_Deployment","slug":"/guides/Public_Cloud_Deployment/Controller","permalink":"/docs/guides/Public_Cloud_Deployment/Controller","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Public_Cloud_Deployment/Controller.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20,"sidebar_label":"Controller","title":"Controller Config"},"sidebar":"docsSidebar","previous":{"title":"Intro","permalink":"/docs/guides/Public_Cloud_Deployment/"},"next":{"title":"Router","permalink":"/docs/guides/Public_Cloud_Deployment/Router"}},{"unversionedId":"guides/Public_Cloud_Deployment/README","id":"guides/Public_Cloud_Deployment/README","title":"Introduction","description":"This guide describes the steps for creating the OpenZiti components on the public clouds. The components include:","source":"@site/docs/guides/Public_Cloud_Deployment/README.md","sourceDirName":"guides/Public_Cloud_Deployment","slug":"/guides/Public_Cloud_Deployment/","permalink":"/docs/guides/Public_Cloud_Deployment/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Public_Cloud_Deployment/README.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"sidebar_label":"Intro","title":"Introduction"},"sidebar":"docsSidebar","previous":{"title":"Public Cloud Deployment","permalink":"/docs/category/public-cloud-deployment"},"next":{"title":"Controller","permalink":"/docs/guides/Public_Cloud_Deployment/Controller"}},{"unversionedId":"guides/Public_Cloud_Deployment/Router","id":"guides/Public_Cloud_Deployment/Router","title":"Create new router","description":"In this section, we are describing how to setup the Edge Router (pub-er) for our test network.","source":"@site/docs/guides/Public_Cloud_Deployment/Router.md","sourceDirName":"guides/Public_Cloud_Deployment","slug":"/guides/Public_Cloud_Deployment/Router","permalink":"/docs/guides/Public_Cloud_Deployment/Router","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Public_Cloud_Deployment/Router.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_position":30,"sidebar_label":"Router","title":"Create new router"},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/guides/Public_Cloud_Deployment/Controller"},"next":{"title":"Services","permalink":"/docs/guides/Public_Cloud_Deployment/Services"}},{"unversionedId":"guides/Public_Cloud_Deployment/Services","id":"guides/Public_Cloud_Deployment/Services","title":"Services","description":"3.1 Introduction","source":"@site/docs/guides/Public_Cloud_Deployment/Services.md","sourceDirName":"guides/Public_Cloud_Deployment","slug":"/guides/Public_Cloud_Deployment/Services","permalink":"/docs/guides/Public_Cloud_Deployment/Services","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Public_Cloud_Deployment/Services.md","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"sidebar_position":50,"sidebar_label":"Services","title":"Services"},"sidebar":"docsSidebar","previous":{"title":"Router","permalink":"/docs/guides/Public_Cloud_Deployment/Router"},"next":{"title":"Data Flow Explainer","permalink":"/docs/guides/data-flow-explainer"}},{"unversionedId":"guides/securing-apis/aks-api-with-nginx-ziti-module","id":"guides/securing-apis/aks-api-with-nginx-ziti-module","title":"OpenZiti Ingress to Azure K8s Service","description":"Prerequisites","source":"@site/docs/guides/securing-apis/aks-api-with-nginx-ziti-module.md","sourceDirName":"guides/securing-apis","slug":"/guides/securing-apis/aks-api-with-nginx-ziti-module","permalink":"/docs/guides/securing-apis/aks-api-with-nginx-ziti-module","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/securing-apis/aks-api-with-nginx-ziti-module.md","tags":[],"version":"current","frontMatter":{"title":"OpenZiti Ingress to Azure K8s Service"},"sidebar":"docsSidebar","previous":{"title":"Securing APIs","permalink":"/docs/category/securing-apis"},"next":{"title":"Troubleshooting","permalink":"/docs/category/troubleshooting"}},{"unversionedId":"guides/troubleshooting/circuit-create-error-codes","id":"guides/troubleshooting/circuit-create-error-codes","title":"Circuit Create Error Codes","description":"The most fundamental action of a working OpenZiti instance is the dialing of services to create connections and pass data.  This action crosses a few borders, but the central process is the creation of a fabric circuit to carry the traffic between the initiating Edge node (SDK embedded application, client, tunneler, etc.) and the terminating Edge node.  When this process fails, it is important to understand why it failed, to properly troubleshoot the issue.  Below is a table of the various cause codes emitted by the OpenZiti Controller, and a brief description of the context of the error.","source":"@site/docs/guides/05-troubleshooting/20-circuit-create-error-codes.md","sourceDirName":"guides/05-troubleshooting","slug":"/guides/troubleshooting/circuit-create-error-codes","permalink":"/docs/guides/troubleshooting/circuit-create-error-codes","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/05-troubleshooting/20-circuit-create-error-codes.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Troubleshooting","permalink":"/docs/category/troubleshooting"},"next":{"title":"PKI Troubleshooting","permalink":"/docs/guides/troubleshooting/pki-troubleshooting"}},{"unversionedId":"guides/troubleshooting/pki-troubleshooting","id":"guides/troubleshooting/pki-troubleshooting","title":"PKI Troubleshooting","description":"Configuring a Ziti Network\'s PKI can be confusing. Validating a single side of a mutual TLS connection is","source":"@site/docs/guides/05-troubleshooting/pki-troubleshooting.md","sourceDirName":"guides/05-troubleshooting","slug":"/guides/troubleshooting/pki-troubleshooting","permalink":"/docs/guides/troubleshooting/pki-troubleshooting","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/05-troubleshooting/pki-troubleshooting.md","tags":[],"version":"current","frontMatter":{"title":"PKI Troubleshooting"},"sidebar":"docsSidebar","previous":{"title":"Circuit Create Error Codes","permalink":"/docs/guides/troubleshooting/circuit-create-error-codes"}},{"unversionedId":"learn/core-concepts/clients/choose","id":"learn/core-concepts/clients/choose","title":"Choosing a Client","description":"Once you have a Ziti Network - you are going to require a Ziti-aware client in order to access the network. There are","source":"@site/docs/learn/core-concepts/clients/choose.mdx","sourceDirName":"learn/core-concepts/clients","slug":"/learn/core-concepts/clients/choose","permalink":"/docs/learn/core-concepts/clients/choose","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/choose.mdx","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"Choosing a Client","id":"choose","sidebar_position":0},"sidebar":"docsSidebar","previous":{"title":"Core Concepts","permalink":"/docs/learn/core-concepts/"},"next":{"title":"Process Sequences","permalink":"/docs/category/process-sequences"}},{"unversionedId":"learn/core-concepts/clients/process-sequences/EndpointInitialization","id":"learn/core-concepts/clients/process-sequences/EndpointInitialization","title":"Endpoint  Initialization","description":"Steps","source":"@site/docs/learn/core-concepts/clients/process-sequences/EndpointInitialization.md","sourceDirName":"learn/core-concepts/clients/process-sequences","slug":"/learn/core-concepts/clients/process-sequences/EndpointInitialization","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointInitialization","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/process-sequences/EndpointInitialization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Process Sequences","permalink":"/docs/category/process-sequences"},"next":{"title":"Endpoint Registration","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration"}},{"unversionedId":"learn/core-concepts/clients/process-sequences/EndpointRegistration","id":"learn/core-concepts/clients/process-sequences/EndpointRegistration","title":"Endpoint Registration","description":"Steps","source":"@site/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration.md","sourceDirName":"learn/core-concepts/clients/process-sequences","slug":"/learn/core-concepts/clients/process-sequences/EndpointRegistration","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Endpoint  Initialization","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointInitialization"},"next":{"title":"Service Dial","permalink":"/docs/learn/core-concepts/clients/process-sequences/ServiceDial"}},{"unversionedId":"learn/core-concepts/clients/process-sequences/ServiceDial","id":"learn/core-concepts/clients/process-sequences/ServiceDial","title":"Service Dial","description":"Steps","source":"@site/docs/learn/core-concepts/clients/process-sequences/ServiceDial.md","sourceDirName":"learn/core-concepts/clients/process-sequences","slug":"/learn/core-concepts/clients/process-sequences/ServiceDial","permalink":"/docs/learn/core-concepts/clients/process-sequences/ServiceDial","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/process-sequences/ServiceDial.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Endpoint Registration","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration"},"next":{"title":"Ziti Identities","permalink":"/docs/learn/core-concepts/identities/overview"}},{"unversionedId":"learn/core-concepts/config-store/config-type-host-v1","id":"learn/core-concepts/config-store/config-type-host-v1","title":"Tunneler Config Type host.v1","description":"A Config of Config Type host.v1 configures a hosting Ziti tunneler to forward connections to the destination server for a particular Ziti service.","source":"@site/docs/learn/core-concepts/config-store/config-type-host-v1.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/config-type-host-v1","permalink":"/docs/learn/core-concepts/config-store/config-type-host-v1","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/config-type-host-v1.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Service Configurations","permalink":"/docs/learn/core-concepts/config-store/overview"},"next":{"title":"Tunneler Config Type intercept.v1","permalink":"/docs/learn/core-concepts/config-store/config-type-intercept-v1"}},{"unversionedId":"learn/core-concepts/config-store/config-type-intercept-v1","id":"learn/core-concepts/config-store/config-type-intercept-v1","title":"Tunneler Config Type intercept.v1","description":"A Config of Config Type intercept.v1 configures an intercepting Ziti tunneler as a proxy for a particular Ziti service.","source":"@site/docs/learn/core-concepts/config-store/config-type-intercept-v1.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/config-type-intercept-v1","permalink":"/docs/learn/core-concepts/config-store/config-type-intercept-v1","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/config-type-intercept-v1.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Tunneler Config Type host.v1","permalink":"/docs/learn/core-concepts/config-store/config-type-host-v1"},"next":{"title":"Consuming","permalink":"/docs/learn/core-concepts/config-store/consuming"}},{"unversionedId":"learn/core-concepts/config-store/consuming","id":"learn/core-concepts/config-store/consuming","title":"Consuming","description":"Consuming Configuration Data","source":"@site/docs/learn/core-concepts/config-store/consuming.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/consuming","permalink":"/docs/learn/core-concepts/config-store/consuming","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/consuming.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Tunneler Config Type intercept.v1","permalink":"/docs/learn/core-concepts/config-store/config-type-intercept-v1"},"next":{"title":"Managing","permalink":"/docs/learn/core-concepts/config-store/managing"}},{"unversionedId":"learn/core-concepts/config-store/managing","id":"learn/core-concepts/config-store/managing","title":"Managing","description":"Managing Configurations","source":"@site/docs/learn/core-concepts/config-store/managing.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/managing","permalink":"/docs/learn/core-concepts/config-store/managing","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/managing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Consuming","permalink":"/docs/learn/core-concepts/config-store/consuming"},"next":{"title":"Overview","permalink":"/docs/learn/core-concepts/metrics/overview"}},{"unversionedId":"learn/core-concepts/config-store/overview","id":"learn/core-concepts/config-store/overview","title":"Service Configurations","description":"Ziti Service Configurations, henceforth \\"Configs\\", may be associated with a service to provide metadata for the application that is being delivered by that service.","source":"@site/docs/learn/core-concepts/config-store/overview.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/overview","permalink":"/docs/learn/core-concepts/config-store/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/overview.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Ziti Services","permalink":"/docs/learn/core-concepts/services/overview"},"next":{"title":"Tunneler Config Type host.v1","permalink":"/docs/learn/core-concepts/config-store/config-type-host-v1"}},{"unversionedId":"learn/core-concepts/identities/creating","id":"learn/core-concepts/identities/creating","title":"Creating","description":"Creating an Identity","source":"@site/docs/learn/core-concepts/identities/10-creating.mdx","sourceDirName":"learn/core-concepts/identities","slug":"/learn/core-concepts/identities/creating","permalink":"/docs/learn/core-concepts/identities/creating","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/identities/10-creating.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Creating"},"sidebar":"docsSidebar","previous":{"title":"Ziti Identities","permalink":"/docs/learn/core-concepts/identities/overview"},"next":{"title":"Enrolling","permalink":"/docs/learn/core-concepts/identities/enrolling"}},{"unversionedId":"learn/core-concepts/identities/enrolling","id":"learn/core-concepts/identities/enrolling","title":"Enrolling","description":"Enrolling an Identity","source":"@site/docs/learn/core-concepts/identities/20-enrolling.md","sourceDirName":"learn/core-concepts/identities","slug":"/learn/core-concepts/identities/enrolling","permalink":"/docs/learn/core-concepts/identities/enrolling","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/identities/20-enrolling.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"title":"Enrolling"},"sidebar":"docsSidebar","previous":{"title":"Creating","permalink":"/docs/learn/core-concepts/identities/creating"},"next":{"title":"Ziti Services","permalink":"/docs/learn/core-concepts/services/overview"}},{"unversionedId":"learn/core-concepts/identities/overview","id":"learn/core-concepts/identities/overview","title":"Ziti Identities","description":"Ziti is built on the foundation of zero trust. A solid pillar of that foundation requires that all connections in a","source":"@site/docs/learn/core-concepts/identities/overview.mdx","sourceDirName":"learn/core-concepts/identities","slug":"/learn/core-concepts/identities/overview","permalink":"/docs/learn/core-concepts/identities/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/identities/overview.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Service Dial","permalink":"/docs/learn/core-concepts/clients/process-sequences/ServiceDial"},"next":{"title":"Creating","permalink":"/docs/learn/core-concepts/identities/creating"}},{"unversionedId":"learn/core-concepts/index","id":"learn/core-concepts/index","title":"Core Concepts","description":"Here you will find the core concepts that are composed to create, use, and maintain an OpenZiti overlay network.","source":"@site/docs/learn/core-concepts/index.md","sourceDirName":"learn/core-concepts","slug":"/learn/core-concepts/","permalink":"/docs/learn/core-concepts/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Your First Service","permalink":"/docs/learn/quickstarts/services/ztha"},"next":{"title":"Choosing a Client","permalink":"/docs/learn/core-concepts/clients/choose"}},{"unversionedId":"learn/core-concepts/metrics/available-metrics","id":"learn/core-concepts/metrics/available-metrics","title":"Available Metrics","description":"Metrics are reported to the log files, locale in /var/log/ziti by default.  There are 2 primary log files for metrics, utilization-metrics.log and utilization-usage.log.  These logs may be shipped to various reporting systems for easier visibility and monitoring.","source":"@site/docs/learn/core-concepts/metrics/15-available-metrics.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/available-metrics","permalink":"/docs/learn/core-concepts/metrics/available-metrics","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/15-available-metrics.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Types","permalink":"/docs/learn/core-concepts/metrics/types"},"next":{"title":"File Reporter","permalink":"/docs/learn/core-concepts/metrics/file"}},{"unversionedId":"learn/core-concepts/metrics/file","id":"learn/core-concepts/metrics/file","title":"File Reporter","description":"The Ziti Controller event system can write metrics to a file for direct viewing or post-processing into a metrics system of your choice.","source":"@site/docs/learn/core-concepts/metrics/20-file.mdx","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/file","permalink":"/docs/learn/core-concepts/metrics/file","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/20-file.mdx","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Available Metrics","permalink":"/docs/learn/core-concepts/metrics/available-metrics"},"next":{"title":"On Demand","permalink":"/docs/learn/core-concepts/metrics/inspect"}},{"unversionedId":"learn/core-concepts/metrics/grafana","id":"learn/core-concepts/metrics/grafana","title":"Using Grafana","description":"Grafana has a marvelous datasource type called Infinity.  It is highly flexible in it\'s own right, and the numerous options it provides to configure additional funcitonality makes it a great choice for interacting with APIs for various purposes.  In this case, I am using it to access the OpenZiti management API to retrieve reference information for transforming the zitiIds (Identity, Edge Router, etc.) to their human readable names.","source":"@site/docs/learn/core-concepts/metrics/50-grafana.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/grafana","permalink":"/docs/learn/core-concepts/metrics/grafana","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/50-grafana.md","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Prometheus Endpoint","permalink":"/docs/learn/core-concepts/metrics/prometheus"},"next":{"title":"Sequence Diagram","permalink":"/docs/learn/core-concepts/metrics/sequence-diagram"}},{"unversionedId":"learn/core-concepts/metrics/inspect","id":"learn/core-concepts/metrics/inspect","title":"On Demand","description":"The Ziti Controller supports pulling metrics on demand via the inspections framework.","source":"@site/docs/learn/core-concepts/metrics/30-inspect.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/inspect","permalink":"/docs/learn/core-concepts/metrics/inspect","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/30-inspect.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"File Reporter","permalink":"/docs/learn/core-concepts/metrics/file"},"next":{"title":"Prometheus Endpoint","permalink":"/docs/learn/core-concepts/metrics/prometheus"}},{"unversionedId":"learn/core-concepts/metrics/overview","id":"learn/core-concepts/metrics/overview","title":"Overview","description":"Ziti can report system metrics in a few different ways","source":"@site/docs/learn/core-concepts/metrics/01-overview.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/overview","permalink":"/docs/learn/core-concepts/metrics/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/01-overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Managing","permalink":"/docs/learn/core-concepts/config-store/managing"},"next":{"title":"Types","permalink":"/docs/learn/core-concepts/metrics/types"}},{"unversionedId":"learn/core-concepts/metrics/prometheus","id":"learn/core-concepts/metrics/prometheus","title":"Prometheus Endpoint","description":"The Ziti Controller can expose a /metrics endpoint that serves network metrics in the Prometheus text exposition format.","source":"@site/docs/learn/core-concepts/metrics/40-prometheus.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/prometheus","permalink":"/docs/learn/core-concepts/metrics/prometheus","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/40-prometheus.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"On Demand","permalink":"/docs/learn/core-concepts/metrics/inspect"},"next":{"title":"Using Grafana","permalink":"/docs/learn/core-concepts/metrics/grafana"}},{"unversionedId":"learn/core-concepts/metrics/sequence-diagram","id":"learn/core-concepts/metrics/sequence-diagram","title":"Sequence Diagram","description":"OpenZiti systems provide a wide range of metrics for the monitoring of the network services, endpoints, and processes.  Some of the various metrics are visualized below to understand where they fall and what they measure in a network instance.  The bulk of the remaining metrics are measuring processes within the control plane, rather than network operation.","source":"@site/docs/learn/core-concepts/metrics/80-sequence-diagram.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/sequence-diagram","permalink":"/docs/learn/core-concepts/metrics/sequence-diagram","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/80-sequence-diagram.md","tags":[],"version":"current","sidebarPosition":80,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Using Grafana","permalink":"/docs/learn/core-concepts/metrics/grafana"},"next":{"title":"Zero Trust Models","permalink":"/docs/learn/core-concepts/zero-trust-models/overview"}},{"unversionedId":"learn/core-concepts/metrics/types","id":"learn/core-concepts/metrics/types","title":"Types","description":"OpenZiti is instrumenting more code and adding additional metrics all of the time. This section will describe the different types of metrics that OpenZiti reports, not individual metric names.","source":"@site/docs/learn/core-concepts/metrics/05-types.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/types","permalink":"/docs/learn/core-concepts/metrics/types","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/05-types.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Overview","permalink":"/docs/learn/core-concepts/metrics/overview"},"next":{"title":"Available Metrics","permalink":"/docs/learn/core-concepts/metrics/available-metrics"}},{"unversionedId":"learn/core-concepts/pki","id":"learn/core-concepts/pki","title":"Public Key Infrastructure (PKI)","description":"All Ziti Networks leverage Public Key Infrastructure (PKI) to","source":"@site/docs/learn/core-concepts/pki.md","sourceDirName":"learn/core-concepts","slug":"/learn/core-concepts/pki","permalink":"/docs/learn/core-concepts/pki","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/pki.md","tags":[],"version":"current","frontMatter":{"id":"pki","title":"Public Key Infrastructure (PKI)","sidebar_label":"PKI"},"sidebar":"docsSidebar","previous":{"title":"Session Types","permalink":"/docs/learn/core-concepts/security/sessions"},"next":{"title":"Builtin Config Types","permalink":"/docs/reference/config-types/"}},{"unversionedId":"learn/core-concepts/security/authentication/api-session-certificates","id":"learn/core-concepts/security/authentication/api-session-certificates","title":"API Session Certificates","description":"API Session Certificates are ephemeral short-lived x509 certificates that can be created through a CSR process after","source":"@site/docs/learn/core-concepts/security/authentication/20-api-session-certificates.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/api-session-certificates","permalink":"/docs/learn/core-concepts/security/authentication/api-session-certificates","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/20-api-session-certificates.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"3rd Party CAs","permalink":"/docs/learn/core-concepts/security/authentication/third-party-cas"},"next":{"title":"Authentication Policies","permalink":"/docs/learn/core-concepts/security/authentication/authentication-policies"}},{"unversionedId":"learn/core-concepts/security/authentication/auth","id":"learn/core-concepts/security/authentication/auth","title":"Authentication","description":"Authentication in Ziti Edge occurs when a client wishes to interact with the Ziti Edge Controller. Authentication","source":"@site/docs/learn/core-concepts/security/authentication/auth.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/auth","permalink":"/docs/learn/core-concepts/security/authentication/auth","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/auth.md","tags":[],"version":"current","frontMatter":{"title":"Authentication"},"sidebar":"docsSidebar","previous":{"title":"Ziti Security","permalink":"/docs/learn/core-concepts/security/overview"},"next":{"title":"Password Management","permalink":"/docs/learn/core-concepts/security/authentication/password-management"}},{"unversionedId":"learn/core-concepts/security/authentication/authentication-policies","id":"learn/core-concepts/security/authentication/authentication-policies","title":"Authentication Policies","description":"Authentication Policies restrict the primary authentication methods available to","source":"@site/docs/learn/core-concepts/security/authentication/30-authentication-policies.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/authentication-policies","permalink":"/docs/learn/core-concepts/security/authentication/authentication-policies","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/30-authentication-policies.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"API Session Certificates","permalink":"/docs/learn/core-concepts/security/authentication/api-session-certificates"},"next":{"title":"Certificate Management","permalink":"/docs/learn/core-concepts/security/authentication/certificate-management"}},{"unversionedId":"learn/core-concepts/security/authentication/certificate-management","id":"learn/core-concepts/security/authentication/certificate-management","title":"Certificate Management","description":"Clients, routers, and the controller use x509 client and server certificates. Client authentication","source":"@site/docs/learn/core-concepts/security/authentication/40-certificate-management.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/certificate-management","permalink":"/docs/learn/core-concepts/security/authentication/certificate-management","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/40-certificate-management.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Authentication Policies","permalink":"/docs/learn/core-concepts/security/authentication/authentication-policies"},"next":{"title":"External JWT Signers","permalink":"/docs/learn/core-concepts/security/authentication/external-jwt-signers"}},{"unversionedId":"learn/core-concepts/security/authentication/external-jwt-signers","id":"learn/core-concepts/security/authentication/external-jwt-signers","title":"External JWT Signers","description":"External JWT Signers allow external identity providers to facilitate authentication with a Ziti network. External","source":"@site/docs/learn/core-concepts/security/authentication/50-external-jwt-signers.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/external-jwt-signers","permalink":"/docs/learn/core-concepts/security/authentication/external-jwt-signers","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/50-external-jwt-signers.md","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Certificate Management","permalink":"/docs/learn/core-concepts/security/authentication/certificate-management"},"next":{"title":"Identities","permalink":"/docs/learn/core-concepts/security/authentication/identities"}},{"unversionedId":"learn/core-concepts/security/authentication/identities","id":"learn/core-concepts/security/authentication/identities","title":"Identities","description":"Ziti Edge defines a top level entity called an Identity. An Identity is a security principal that can bind (host) or","source":"@site/docs/learn/core-concepts/security/authentication/60-identities.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/identities","permalink":"/docs/learn/core-concepts/security/authentication/identities","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/60-identities.md","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"External JWT Signers","permalink":"/docs/learn/core-concepts/security/authentication/external-jwt-signers"},"next":{"title":"MFA TOTP","permalink":"/docs/learn/core-concepts/security/authentication/totp"}},{"unversionedId":"learn/core-concepts/security/authentication/password-management","id":"learn/core-concepts/security/authentication/password-management","title":"Password Management","description":"For identities using username password (UPDB) authenticators the following actions are supported:","source":"@site/docs/learn/core-concepts/security/authentication/5-password-management.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/password-management","permalink":"/docs/learn/core-concepts/security/authentication/password-management","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/5-password-management.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Authentication","permalink":"/docs/learn/core-concepts/security/authentication/auth"},"next":{"title":"3rd Party CAs","permalink":"/docs/learn/core-concepts/security/authentication/third-party-cas"}},{"unversionedId":"learn/core-concepts/security/authentication/third-party-cas","id":"learn/core-concepts/security/authentication/third-party-cas","title":"3rd Party CAs","description":"3rd Party CAs allow external private key infrastructures (PKIs) to be imported into Ziti and used for client enrollment","source":"@site/docs/learn/core-concepts/security/authentication/10-third-party-cas.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/third-party-cas","permalink":"/docs/learn/core-concepts/security/authentication/third-party-cas","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/10-third-party-cas.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Password Management","permalink":"/docs/learn/core-concepts/security/authentication/password-management"},"next":{"title":"API Session Certificates","permalink":"/docs/learn/core-concepts/security/authentication/api-session-certificates"}},{"unversionedId":"learn/core-concepts/security/authentication/totp","id":"learn/core-concepts/security/authentication/totp","title":"MFA TOTP","description":"Ziti authentication allows for n-factors of authentication - meaning that it is possible to support 1FA, 2FA, ...nFA","source":"@site/docs/learn/core-concepts/security/authentication/70-totp.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/totp","permalink":"/docs/learn/core-concepts/security/authentication/totp","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/70-totp.md","tags":[],"version":"current","sidebarPosition":70,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Identities","permalink":"/docs/learn/core-concepts/security/authentication/identities"},"next":{"title":"Authorization","permalink":"/docs/learn/core-concepts/security/authorization/auth"}},{"unversionedId":"learn/core-concepts/security/authorization/auth","id":"learn/core-concepts/security/authorization/auth","title":"Authorization","description":"After becoming fully authenticated, an identity may now","source":"@site/docs/learn/core-concepts/security/authorization/auth.md","sourceDirName":"learn/core-concepts/security/authorization","slug":"/learn/core-concepts/security/authorization/auth","permalink":"/docs/learn/core-concepts/security/authorization/auth","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/auth.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"MFA TOTP","permalink":"/docs/learn/core-concepts/security/authentication/totp"},"next":{"title":"Policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/overview"}},{"unversionedId":"learn/core-concepts/security/authorization/policies/creating-edge-router-policies","id":"learn/core-concepts/security/authorization/policies/creating-edge-router-policies","title":"creating-edge-router-policies","description":"","source":"@site/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies.mdx","sourceDirName":"learn/core-concepts/security/authorization/policies","slug":"/learn/core-concepts/security/authorization/policies/creating-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/overview"},"next":{"title":"creating-service-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies"}},{"unversionedId":"learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies","id":"learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies","title":"creating-service-edge-router-policies","description":"","source":"@site/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies.mdx","sourceDirName":"learn/core-concepts/security/authorization/policies","slug":"/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"creating-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies"},"next":{"title":"creating-service-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-policies"}},{"unversionedId":"learn/core-concepts/security/authorization/policies/creating-service-policies","id":"learn/core-concepts/security/authorization/policies/creating-service-policies","title":"creating-service-policies","description":"","source":"@site/docs/learn/core-concepts/security/authorization/policies/creating-service-policies.mdx","sourceDirName":"learn/core-concepts/security/authorization/policies","slug":"/learn/core-concepts/security/authorization/policies/creating-service-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-policies","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/policies/creating-service-policies.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"creating-service-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies"},"next":{"title":"Posture Checks","permalink":"/docs/learn/core-concepts/security/authorization/posture-checks"}},{"unversionedId":"learn/core-concepts/security/authorization/policies/overview","id":"learn/core-concepts/security/authorization/policies/overview","title":"Policies","description":"Ziti policies control which identities can access or host which services","source":"@site/docs/learn/core-concepts/security/authorization/policies/overview.mdx","sourceDirName":"learn/core-concepts/security/authorization/policies","slug":"/learn/core-concepts/security/authorization/policies/overview","permalink":"/docs/learn/core-concepts/security/authorization/policies/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/policies/overview.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Authorization","permalink":"/docs/learn/core-concepts/security/authorization/auth"},"next":{"title":"creating-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies"}},{"unversionedId":"learn/core-concepts/security/authorization/posture-checks","id":"learn/core-concepts/security/authorization/posture-checks","title":"Posture Checks","description":"Posture Checks represent environmental state (posture) that an endpoint must be in, in order for a Service Policy to","source":"@site/docs/learn/core-concepts/security/authorization/posture-checks.md","sourceDirName":"learn/core-concepts/security/authorization","slug":"/learn/core-concepts/security/authorization/posture-checks","permalink":"/docs/learn/core-concepts/security/authorization/posture-checks","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/posture-checks.md","tags":[],"version":"current","frontMatter":{"uid":"zitiSecurityPostureChecks"},"sidebar":"docsSidebar","previous":{"title":"creating-service-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-policies"},"next":{"title":"Session Diagram","permalink":"/docs/learn/core-concepts/security/SessionsAndConnections"}},{"unversionedId":"learn/core-concepts/security/connection-security","id":"learn/core-concepts/security/connection-security","title":"Connection Security","description":"Ziti networks use robust modern cryptography and security mechanisms. Each component within a Ziti network uses","source":"@site/docs/learn/core-concepts/security/connection-security.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/connection-security","permalink":"/docs/learn/core-concepts/security/connection-security","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/connection-security.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Session Diagram","permalink":"/docs/learn/core-concepts/security/SessionsAndConnections"},"next":{"title":"Enrollment","permalink":"/docs/learn/core-concepts/security/enrollment"}},{"unversionedId":"learn/core-concepts/security/enrollment","id":"learn/core-concepts/security/enrollment","title":"Enrollment","description":"Enrollment is the process of some Edge client or Edge Router associating itself with a Ziti network. Client enrollment","source":"@site/docs/learn/core-concepts/security/enrollment.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/enrollment","permalink":"/docs/learn/core-concepts/security/enrollment","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/enrollment.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Connection Security","permalink":"/docs/learn/core-concepts/security/connection-security"},"next":{"title":"Session Types","permalink":"/docs/learn/core-concepts/security/sessions"}},{"unversionedId":"learn/core-concepts/security/overview","id":"learn/core-concepts/security/overview","title":"Ziti Security","description":"A Ziti Network\'s security setup is defined by several entities defined in the Edge Management API. The following","source":"@site/docs/learn/core-concepts/security/overview.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/overview","permalink":"/docs/learn/core-concepts/security/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/overview.md","tags":[],"version":"current","frontMatter":{"title":"Ziti Security"},"sidebar":"docsSidebar","previous":{"title":"Network Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztna"},"next":{"title":"Authentication","permalink":"/docs/learn/core-concepts/security/authentication/auth"}},{"unversionedId":"learn/core-concepts/security/sessions","id":"learn/core-concepts/security/sessions","title":"Session Types","description":"Ziti has API Session and Session types.","source":"@site/docs/learn/core-concepts/security/sessions.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/sessions","permalink":"/docs/learn/core-concepts/security/sessions","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/sessions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Enrollment","permalink":"/docs/learn/core-concepts/security/enrollment"},"next":{"title":"PKI","permalink":"/docs/learn/core-concepts/pki"}},{"unversionedId":"learn/core-concepts/security/SessionsAndConnections","id":"learn/core-concepts/security/SessionsAndConnections","title":"Sessions and Connections Sequence Diagram","description":"OpenZiti has a number of different connection and session types.  It is important to understand the different scopes and uses of these connections in working with the project, developing, operating, and most importantly, troubleshooting.","source":"@site/docs/learn/core-concepts/security/SessionsAndConnections.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/SessionsAndConnections","permalink":"/docs/learn/core-concepts/security/SessionsAndConnections","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/SessionsAndConnections.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Session Diagram"},"sidebar":"docsSidebar","previous":{"title":"Posture Checks","permalink":"/docs/learn/core-concepts/security/authorization/posture-checks"},"next":{"title":"Connection Security","permalink":"/docs/learn/core-concepts/security/connection-security"}},{"unversionedId":"learn/core-concepts/services/overview","id":"learn/core-concepts/services/overview","title":"Ziti Services","description":"The primary strategy assumes that one function of Ziti is providing access to \\"services\\". A service encapsulates the definition of any","source":"@site/docs/learn/core-concepts/services/overview.mdx","sourceDirName":"learn/core-concepts/services","slug":"/learn/core-concepts/services/overview","permalink":"/docs/learn/core-concepts/services/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/services/overview.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Enrolling","permalink":"/docs/learn/core-concepts/identities/enrolling"},"next":{"title":"Service Configurations","permalink":"/docs/learn/core-concepts/config-store/overview"}},{"unversionedId":"learn/core-concepts/zero-trust-models/overview","id":"learn/core-concepts/zero-trust-models/overview","title":"Zero Trust Models","description":"All OpenZiti deployment architectures can be categorized by three types of Zero Trust Edge Access Security Models. Many of them will be overlapping at least 2 of these initially, especially the brownfield deployments.  That gives customers a great deal of flexibility in terms of deployment options depending on where they are in the journey to eventually reach the ZiTi Application Access Security Model, i.e most secured.","source":"@site/docs/learn/core-concepts/zero-trust-models/01-overview.md","sourceDirName":"learn/core-concepts/zero-trust-models","slug":"/learn/core-concepts/zero-trust-models/overview","permalink":"/docs/learn/core-concepts/zero-trust-models/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/zero-trust-models/01-overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"overview","title":"Zero Trust Models","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Sequence Diagram","permalink":"/docs/learn/core-concepts/metrics/sequence-diagram"},"next":{"title":"App Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztaa"}},{"unversionedId":"learn/core-concepts/zero-trust-models/ztaa","id":"learn/core-concepts/zero-trust-models/ztaa","title":"Application Access Model","description":"This article describes the various edge deployments of ZiTi App Access. In all cases, the Controller and at least 2 Public Edge Routers are to be deployed for redundancy. The Ziti Fabric connections are established between all Edge Routers but not Clients/SDKs. The Public Edge Routers would provide connection between Private Edge Routers and/or Clients/SDKs.","source":"@site/docs/learn/core-concepts/zero-trust-models/02-ztaa.md","sourceDirName":"learn/core-concepts/zero-trust-models","slug":"/learn/core-concepts/zero-trust-models/ztaa","permalink":"/docs/learn/core-concepts/zero-trust-models/ztaa","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/zero-trust-models/02-ztaa.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Application Access Model","sidebar_label":"App Access","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Zero Trust Models","permalink":"/docs/learn/core-concepts/zero-trust-models/overview"},"next":{"title":"Host Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztha"}},{"unversionedId":"learn/core-concepts/zero-trust-models/ztha","id":"learn/core-concepts/zero-trust-models/ztha","title":"Host Access Model","description":"This article describes the various edge deployments of ZiTi Host Access. In all cases, the Controller and at least 2 Public Edge Routers are to be deployed for redundancy. The Ziti Fabric connections are established between all Edge Routers but not Clients/SDKs. The Public Edge Routers would provide connection between Private Edge Routers and/or Clients/SDKs.","source":"@site/docs/learn/core-concepts/zero-trust-models/03-ztha.md","sourceDirName":"learn/core-concepts/zero-trust-models","slug":"/learn/core-concepts/zero-trust-models/ztha","permalink":"/docs/learn/core-concepts/zero-trust-models/ztha","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/zero-trust-models/03-ztha.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Host Access Model","sidebar_label":"Host Access","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"App Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztaa"},"next":{"title":"Network Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztna"}},{"unversionedId":"learn/core-concepts/zero-trust-models/ztna","id":"learn/core-concepts/zero-trust-models/ztna","title":"Network Access Model","description":"This article describes the various edge deployments of ZiTi Network Access. In all cases, the Controller and at least 2 Public Edge Routers are to be deployed for redundancy. The Ziti Fabric connections are established between all Edge Routers but not Clients/SDKs. The Public Edge Routers would provide connection between Private Edge Routers and/or Clients/SDKs.","source":"@site/docs/learn/core-concepts/zero-trust-models/04-ztna.md","sourceDirName":"learn/core-concepts/zero-trust-models","slug":"/learn/core-concepts/zero-trust-models/ztna","permalink":"/docs/learn/core-concepts/zero-trust-models/ztna","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/zero-trust-models/04-ztna.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Network Access Model","sidebar_label":"Network Access","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Host Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztha"},"next":{"title":"Ziti Security","permalink":"/docs/learn/core-concepts/security/overview"}},{"unversionedId":"learn/introduction/components","id":"learn/introduction/components","title":"Components","description":"","source":"@site/docs/learn/introduction/03-components.md","sourceDirName":"learn/introduction","slug":"/learn/introduction/components","permalink":"/docs/learn/introduction/components","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/03-components.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"components","title":"Components"},"sidebar":"docsSidebar","previous":{"title":"What is OpenZiti?","permalink":"/docs/learn/introduction/"},"next":{"title":"Key Concepts","permalink":"/docs/learn/introduction/key_concepts"}},{"unversionedId":"learn/introduction/features","id":"learn/introduction/features","title":"Features","description":"OpenZiti superpowers are distinguished between security, performance/reliability, and ease of management.","source":"@site/docs/learn/introduction/20-features.md","sourceDirName":"learn/introduction","slug":"/learn/introduction/features","permalink":"/docs/learn/introduction/features","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/20-features.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"id":"features","title":"Features"},"sidebar":"docsSidebar","previous":{"title":"Key Concepts","permalink":"/docs/learn/introduction/key_concepts"},"next":{"title":"It\'s All Software","permalink":"/docs/learn/introduction/openziti-is-software"}},{"unversionedId":"learn/introduction/index","id":"learn/introduction/index","title":"What is OpenZiti?","description":"An Example of an OpenZiti Overlay Network","source":"@site/docs/learn/introduction/index.mdx","sourceDirName":"learn/introduction","slug":"/learn/introduction/","permalink":"/docs/learn/introduction/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/index.mdx","tags":[],"version":"current","frontMatter":{"title":"What is OpenZiti?","hide_table_of_contents":true},"sidebar":"docsSidebar","next":{"title":"Components","permalink":"/docs/learn/introduction/components"}},{"unversionedId":"learn/introduction/key_concepts","id":"learn/introduction/key_concepts","title":"Key Concepts","description":"","source":"@site/docs/learn/introduction/05-concepts.md","sourceDirName":"learn/introduction","slug":"/learn/introduction/key_concepts","permalink":"/docs/learn/introduction/key_concepts","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/05-concepts.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"key_concepts","title":"Key Concepts"},"sidebar":"docsSidebar","previous":{"title":"Components","permalink":"/docs/learn/introduction/components"},"next":{"title":"Features","permalink":"/docs/learn/introduction/features"}},{"unversionedId":"learn/introduction/openziti-is-software","id":"learn/introduction/openziti-is-software","title":"It\'s All Software","description":"OpenZiti is software first and foremost. Moving at the speed of software is a vital characteristic of any","source":"@site/docs/learn/introduction/30-openziti-is-software.md","sourceDirName":"learn/introduction","slug":"/learn/introduction/openziti-is-software","permalink":"/docs/learn/introduction/openziti-is-software","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/30-openziti-is-software.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Features","permalink":"/docs/learn/introduction/features"},"next":{"title":"Start Cooking With Ziti","permalink":"/docs/learn/quickstarts/"}},{"unversionedId":"learn/quickstarts/browzer/example/index","id":"learn/quickstarts/browzer/example/index","title":"Example Enabling BrowZer","description":"This page will demonstrate adding BrowZer to an existing OpenZiti Network that was started using the","source":"@site/docs/learn/quickstarts/browzer/example/index.md","sourceDirName":"learn/quickstarts/browzer/example","slug":"/learn/quickstarts/browzer/example/","permalink":"/docs/learn/quickstarts/browzer/example/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/browzer/example/index.md","tags":[],"version":"current","frontMatter":{"title":"Example Enabling BrowZer"},"sidebar":"docsSidebar","previous":{"title":"BrowZer","permalink":"/docs/learn/quickstarts/browzer/"},"next":{"title":"Starting With Services","permalink":"/docs/learn/quickstarts/services/"}},{"unversionedId":"learn/quickstarts/browzer/index","id":"learn/quickstarts/browzer/index","title":"BrowZer","description":"BrowZer is a set of technologies which is capable of bootstrapping zero trust connectivity entirely in a browser,","source":"@site/docs/learn/quickstarts/browzer/index.md","sourceDirName":"learn/quickstarts/browzer","slug":"/learn/quickstarts/browzer/","permalink":"/docs/learn/quickstarts/browzer/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/browzer/index.md","tags":[],"version":"current","frontMatter":{"title":"BrowZer"},"sidebar":"docsSidebar","previous":{"title":"Ziti Admin Console","permalink":"/docs/learn/quickstarts/zac/"},"next":{"title":"Example Enabling BrowZer","permalink":"/docs/learn/quickstarts/browzer/example/"}},{"unversionedId":"learn/quickstarts/network/help/change-admin-password","id":"learn/quickstarts/network/help/change-admin-password","title":"Change Password","description":"Follow these instructions to change your quickstart admin\'s password. A random password was generated for you when you ran expressInstall and saved in your *.env file as ZITIPWD. After changing the password, also change the value of ZITIPWD in ~/.ziti/quickstart/$(hostname -s)/$(hostname -s).env to match. This variable is used by the zitiLogin function.","source":"@site/docs/learn/quickstarts/network/help/change-admin-password.md","sourceDirName":"learn/quickstarts/network/help","slug":"/learn/quickstarts/network/help/change-admin-password","permalink":"/docs/learn/quickstarts/network/help/change-admin-password","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/help/change-admin-password.md","tags":[],"version":"current","frontMatter":{"title":"Change Password"},"sidebar":"docsSidebar","previous":{"title":"Help","permalink":"/docs/category/help"},"next":{"title":"Reset the Quickstart","permalink":"/docs/learn/quickstarts/network/help/reset-quickstart"}},{"unversionedId":"learn/quickstarts/network/help/reset-quickstart","id":"learn/quickstarts/network/help/reset-quickstart","title":"Reset the Quickstart","description":"You may want to re-run expressInstall with different parameters or because a readiness check failed. You could run it again with a new ZITI_HOME without changing the current installation or delete the directory and begin again with these steps:","source":"@site/docs/learn/quickstarts/network/help/reset-quickstart.md","sourceDirName":"learn/quickstarts/network/help","slug":"/learn/quickstarts/network/help/reset-quickstart","permalink":"/docs/learn/quickstarts/network/help/reset-quickstart","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/help/reset-quickstart.md","tags":[],"version":"current","frontMatter":{"title":"Reset the Quickstart","id":"reset-quickstart"},"sidebar":"docsSidebar","previous":{"title":"Change Password","permalink":"/docs/learn/quickstarts/network/help/change-admin-password"},"next":{"title":"Ziti Admin Console","permalink":"/docs/learn/quickstarts/zac/"}},{"unversionedId":"learn/quickstarts/network/hosted","id":"learn/quickstarts/network/hosted","title":"Host OpenZiti Anywhere","description":"You can absolutely choose to host your OpenZiti Network anywhere you like.","source":"@site/docs/learn/quickstarts/network/hosted.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/hosted","permalink":"/docs/learn/quickstarts/network/hosted","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/hosted.md","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"sidebar_position":60},"sidebar":"docsSidebar","previous":{"title":"Local - Docker Compose","permalink":"/docs/learn/quickstarts/network/local-docker-compose"},"next":{"title":"Kubernetes","permalink":"/docs/learn/quickstarts/network/local-kubernetes"}},{"unversionedId":"learn/quickstarts/network/local-docker-compose","id":"learn/quickstarts/network/local-docker-compose","title":"Local - Docker Compose","description":"If you are not familiar with it, Docker Compose is a tool for defining and running","source":"@site/docs/learn/quickstarts/network/local-docker-compose.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/local-docker-compose","permalink":"/docs/learn/quickstarts/network/local-docker-compose","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/local-docker-compose.md","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"sidebar_position":50},"sidebar":"docsSidebar","previous":{"title":"Local - With Docker","permalink":"/docs/learn/quickstarts/network/local-with-docker"},"next":{"title":"Host OpenZiti Anywhere","permalink":"/docs/learn/quickstarts/network/hosted"}},{"unversionedId":"learn/quickstarts/network/local-kubernetes","id":"learn/quickstarts/network/local-kubernetes","title":"Kubernetes Quickstart","description":"minikube quickly sets up a local Kubernetes cluster on macOS, Linux, or Windows (WSL). This quickstart is a great way to explore running your own OpenZiti Controller, Router, and Console.","source":"@site/docs/learn/quickstarts/network/local-kubernetes.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/local-kubernetes","permalink":"/docs/learn/quickstarts/network/local-kubernetes","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/local-kubernetes.md","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"sidebar_position":60,"hide_table_of_contents":true,"sidebar_label":"Kubernetes","title":"Kubernetes Quickstart"},"sidebar":"docsSidebar","previous":{"title":"Host OpenZiti Anywhere","permalink":"/docs/learn/quickstarts/network/hosted"},"next":{"title":"Help","permalink":"/docs/category/help"}},{"unversionedId":"learn/quickstarts/network/local-no-docker","id":"learn/quickstarts/network/local-no-docker","title":"Local - No Docker","description":"This page will show you how to get your Ziti Network up and running","source":"@site/docs/learn/quickstarts/network/local-no-docker.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/local-no-docker","permalink":"/docs/learn/quickstarts/network/local-no-docker","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/local-no-docker.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_position":30},"sidebar":"docsSidebar","previous":{"title":"Network","permalink":"/docs/category/network"},"next":{"title":"Local - With Docker","permalink":"/docs/learn/quickstarts/network/local-with-docker"}},{"unversionedId":"learn/quickstarts/network/local-with-docker","id":"learn/quickstarts/network/local-with-docker","title":"Local - With Docker","description":"Docker is a popular container engine, and many developers enjoy using solutions delivered via","source":"@site/docs/learn/quickstarts/network/local-with-docker.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/local-with-docker","permalink":"/docs/learn/quickstarts/network/local-with-docker","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/local-with-docker.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40},"sidebar":"docsSidebar","previous":{"title":"Local - No Docker","permalink":"/docs/learn/quickstarts/network/local-no-docker"},"next":{"title":"Local - Docker Compose","permalink":"/docs/learn/quickstarts/network/local-docker-compose"}},{"unversionedId":"learn/quickstarts/quickstartOverview","id":"learn/quickstarts/quickstartOverview","title":"Start Cooking With Ziti","description":"Learn how to start integrating Zero Trust directly into your application! Explore our quickstarts and learn how to","source":"@site/docs/learn/quickstarts/quickstarts.md","sourceDirName":"learn/quickstarts","slug":"/learn/quickstarts/","permalink":"/docs/learn/quickstarts/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/quickstarts.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"id":"quickstartOverview"},"sidebar":"docsSidebar","previous":{"title":"It\'s All Software","permalink":"/docs/learn/introduction/openziti-is-software"},"next":{"title":"Network","permalink":"/docs/category/network"}},{"unversionedId":"learn/quickstarts/services/index","id":"learn/quickstarts/services/index","title":"Starting With Services","description":"Once you have your zero trust overlay network in place and you want to start using it, you\'ll be wondering where to begin. You can start","source":"@site/docs/learn/quickstarts/services/index.md","sourceDirName":"learn/quickstarts/services","slug":"/learn/quickstarts/services/","permalink":"/docs/learn/quickstarts/services/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/services/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Example Enabling BrowZer","permalink":"/docs/learn/quickstarts/browzer/example/"},"next":{"title":"Kubernetes Service","permalink":"/docs/learn/quickstarts/services/kubernetes-service"}},{"unversionedId":"learn/quickstarts/services/kubernetes-service","id":"learn/quickstarts/services/kubernetes-service","title":"Kubernetes Service","description":"This is a quick example for tunneling to a Kubernetes workload with OpenZiti that builds on the local Kubernetes quickstart. There are two deployments for you to deploy in the same namespace:","source":"@site/docs/learn/quickstarts/services/kubernetes-service.md","sourceDirName":"learn/quickstarts/services","slug":"/learn/quickstarts/services/kubernetes-service","permalink":"/docs/learn/quickstarts/services/kubernetes-service","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/services/kubernetes-service.md","tags":[],"version":"current","frontMatter":{"title":"Kubernetes Service"},"sidebar":"docsSidebar","previous":{"title":"Starting With Services","permalink":"/docs/learn/quickstarts/services/"},"next":{"title":"Your First Service","permalink":"/docs/learn/quickstarts/services/ztha"}},{"unversionedId":"learn/quickstarts/services/ztha","id":"learn/quickstarts/services/ztha","title":"Your First Service","description":"This document will demonstrate how to successfully deploy and secure an existing, \\"brown field\\" application using OpenZiti. You want to","source":"@site/docs/learn/quickstarts/services/ztha.md","sourceDirName":"learn/quickstarts/services","slug":"/learn/quickstarts/services/ztha","permalink":"/docs/learn/quickstarts/services/ztha","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/services/ztha.md","tags":[],"version":"current","frontMatter":{"title":"Your First Service"},"sidebar":"docsSidebar","previous":{"title":"Kubernetes Service","permalink":"/docs/learn/quickstarts/services/kubernetes-service"},"next":{"title":"Core Concepts","permalink":"/docs/learn/core-concepts/"}},{"unversionedId":"learn/quickstarts/zac/index","id":"learn/quickstarts/zac/index","title":"Ziti Admin Console","description":"The Ziti Administration Console (ZAC) is a web UI provided by the OpenZiti project which will allow you to configure and","source":"@site/docs/learn/quickstarts/zac/index.md","sourceDirName":"learn/quickstarts/zac","slug":"/learn/quickstarts/zac/","permalink":"/docs/learn/quickstarts/zac/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/zac/index.md","tags":[],"version":"current","frontMatter":{"title":"Ziti Admin Console"},"sidebar":"docsSidebar","previous":{"title":"Reset the Quickstart","permalink":"/docs/learn/quickstarts/network/help/reset-quickstart"},"next":{"title":"BrowZer","permalink":"/docs/learn/quickstarts/browzer/"}},{"unversionedId":"reference/config-types/host.v1","id":"reference/config-types/host.v1","title":"The host.v1 Config Type","description":"The host.v1 configuration type defines how edge routers or tunnelers can make outgoing connections","source":"@site/docs/reference/config-types/host.v1.md","sourceDirName":"reference/config-types","slug":"/reference/config-types/host.v1","permalink":"/docs/reference/config-types/host.v1","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/config-types/host.v1.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_label":"host.v1","sidebar_position":15},"sidebar":"docsSidebar","previous":{"title":"Builtin Config Types","permalink":"/docs/reference/config-types/"},"next":{"title":"host.v2","permalink":"/docs/reference/config-types/host.v2"}},{"unversionedId":"reference/config-types/host.v2","id":"reference/config-types/host.v2","title":"The host.v2 Config Type","description":"The host.v2 configuration type defines how edge routers or tunnelers can make outgoing connections","source":"@site/docs/reference/config-types/host.v2.md","sourceDirName":"reference/config-types","slug":"/reference/config-types/host.v2","permalink":"/docs/reference/config-types/host.v2","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/config-types/host.v2.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_label":"host.v2","sidebar_position":20},"sidebar":"docsSidebar","previous":{"title":"host.v1","permalink":"/docs/reference/config-types/host.v1"},"next":{"title":"Overview","permalink":"/docs/reference/"}},{"unversionedId":"reference/config-types/index","id":"reference/config-types/index","title":"Builtin Config Types","description":"Overview","source":"@site/docs/reference/config-types/index.md","sourceDirName":"reference/config-types","slug":"/reference/config-types/","permalink":"/docs/reference/config-types/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/config-types/index.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Builtin Config Types","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"PKI","permalink":"/docs/learn/core-concepts/pki"},"next":{"title":"host.v1","permalink":"/docs/reference/config-types/host.v1"}},{"unversionedId":"reference/configuration/controller","id":"reference/configuration/controller","title":"Controller Configuration Reference","description":"OpenZiti uses configuration files for controllers that are in the YAML format.","source":"@site/docs/reference/30-configuration/controller.md","sourceDirName":"reference/30-configuration","slug":"/reference/configuration/controller","permalink":"/docs/reference/configuration/controller","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/30-configuration/controller.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_label":"Controller","sidebar_position":20},"sidebar":"docsSidebar","previous":{"title":"Conventions","permalink":"/docs/reference/configuration/conventions"},"next":{"title":"Router","permalink":"/docs/reference/configuration/router"}},{"unversionedId":"reference/configuration/conventions","id":"reference/configuration/conventions","title":"Conventions","description":"The following conventions apply to multiple areas of the configuration files for routers and","source":"@site/docs/reference/30-configuration/conventions.md","sourceDirName":"reference/30-configuration","slug":"/reference/configuration/conventions","permalink":"/docs/reference/configuration/conventions","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/30-configuration/conventions.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_label":"Conventions","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"CLI Mgmt","permalink":"/docs/reference/deployments/router/cli-mgmt"},"next":{"title":"Controller","permalink":"/docs/reference/configuration/controller"}},{"unversionedId":"reference/configuration/router","id":"reference/configuration/router","title":"Router Configuration Reference","description":"OpenZiti uses configuration files for controllers that are in the YAML format.","source":"@site/docs/reference/30-configuration/router.md","sourceDirName":"reference/30-configuration","slug":"/reference/configuration/router","permalink":"/docs/reference/configuration/router","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/30-configuration/router.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_label":"Router","sidebar_position":30},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/reference/configuration/controller"},"next":{"title":"Ziti Developer Resources","permalink":"/docs/reference/developer/"}},{"unversionedId":"reference/deployments/controller","id":"reference/deployments/controller","title":"Controller Deployment","description":"This article provides some guidance for deploying a Ziti Controller. You can go back and read the controller component introduction if needed.","source":"@site/docs/reference/deployments/01-controller.md","sourceDirName":"reference/deployments","slug":"/reference/deployments/controller","permalink":"/docs/reference/deployments/controller","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/deployments/01-controller.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"controller","title":"Controller Deployment","sidebar_label":"Controller"},"sidebar":"docsSidebar","previous":{"title":"Deployments","permalink":"/docs/reference/deployments/"},"next":{"title":"Router Deployment","permalink":"/docs/reference/deployments/router/deployment"}},{"unversionedId":"reference/deployments/index","id":"reference/deployments/index","title":"Deployments","description":"A place for operational guidance for deploying and managing the Ziti controller, routers, and","source":"@site/docs/reference/deployments/index.md","sourceDirName":"reference/deployments","slug":"/reference/deployments/","permalink":"/docs/reference/deployments/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/deployments/index.md","tags":[],"version":"current","frontMatter":{"title":"Deployments"},"sidebar":"docsSidebar","previous":{"title":"Troubleshooting","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting"},"next":{"title":"Controller","permalink":"/docs/reference/deployments/controller"}},{"unversionedId":"reference/deployments/router/cli-mgmt","id":"reference/deployments/router/cli-mgmt","title":"CLI Mgmt","description":"Managing Routers with the CLI","source":"@site/docs/reference/deployments/02-router/04-cli-mgmt.md","sourceDirName":"reference/deployments/02-router","slug":"/reference/deployments/router/cli-mgmt","permalink":"/docs/reference/deployments/router/cli-mgmt","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/deployments/02-router/04-cli-mgmt.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"cli-mgmt","title":"CLI Mgmt"},"sidebar":"docsSidebar","previous":{"title":"Config Examples","permalink":"/docs/reference/deployments/router/router-configuration"},"next":{"title":"Conventions","permalink":"/docs/reference/configuration/conventions"}},{"unversionedId":"reference/deployments/router/deployment","id":"reference/deployments/router/deployment","title":"Router Deployment","description":"The Ziti Router is the entry point for Ziti-based clients. It is responsible for authenticating incoming connections by","source":"@site/docs/reference/deployments/02-router/01-deployment.md","sourceDirName":"reference/deployments/02-router","slug":"/reference/deployments/router/deployment","permalink":"/docs/reference/deployments/router/deployment","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/deployments/02-router/01-deployment.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"deployment","title":"Router Deployment"},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/reference/deployments/controller"},"next":{"title":"Config Examples","permalink":"/docs/reference/deployments/router/router-configuration"}},{"unversionedId":"reference/deployments/router/router-configuration","id":"reference/deployments/router/router-configuration","title":"Config Examples","description":"Commented out options with # tag are generated by the template but not used for the described deployment. The router ip address is used in the private router option, wheres the DNS name is used in the public router. This is only to illustrate how either type can be used as an option for any deployment type.","source":"@site/docs/reference/deployments/02-router/02-configuration.md","sourceDirName":"reference/deployments/02-router","slug":"/reference/deployments/router/router-configuration","permalink":"/docs/reference/deployments/router/router-configuration","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/deployments/02-router/02-configuration.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"router-configuration","title":"Config Examples","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Router Deployment","permalink":"/docs/reference/deployments/router/deployment"},"next":{"title":"CLI Mgmt","permalink":"/docs/reference/deployments/router/cli-mgmt"}},{"unversionedId":"reference/developer/api/edge-client-reference","id":"reference/developer/api/edge-client-reference","title":"Edge Client API Reference","description":"","source":"@site/docs/reference/developer/api/01-edge-client-reference.mdx","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/edge-client-reference","permalink":"/docs/reference/developer/api/edge-client-reference","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/01-edge-client-reference.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Edge Client API Reference","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Edge APIs","permalink":"/docs/reference/developer/api/"},"next":{"title":"Edge Management API Reference","permalink":"/docs/reference/developer/api/edge-management-reference"}},{"unversionedId":"reference/developer/api/edge-management-reference","id":"reference/developer/api/edge-management-reference","title":"Edge Management API Reference","description":"","source":"@site/docs/reference/developer/api/02-edge-management-reference.mdx","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/edge-management-reference","permalink":"/docs/reference/developer/api/edge-management-reference","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/02-edge-management-reference.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Edge Management API Reference","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Edge Client API Reference","permalink":"/docs/reference/developer/api/edge-client-reference"},"next":{"title":"Fabric API","permalink":"/docs/reference/developer/api/fabric-api"}},{"unversionedId":"reference/developer/api/fabric-api","id":"reference/developer/api/fabric-api","title":"Fabric API","description":"The fabric management API /fabric/v1 is provided by the controller and consumed by administrative clients like the ziti fabric CLI. The API is enabled in the controller configuration by adding a fabric binding to a web listener. Both fabric and edge-management APIs are commonly bound to the same web listener because they are used together for Ziti network administration.","source":"@site/docs/reference/developer/api/fabric-api.md","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/fabric-api","permalink":"/docs/reference/developer/api/fabric-api","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/fabric-api.md","tags":[],"version":"current","frontMatter":{"title":"Fabric API","position":90},"sidebar":"docsSidebar","previous":{"title":"Edge Management API Reference","permalink":"/docs/reference/developer/api/edge-management-reference"},"next":{"title":"Shared API Capabilities","permalink":"/docs/reference/developer/api/shared-api-capabilities"}},{"unversionedId":"reference/developer/api/index","id":"reference/developer/api/index","title":"Edge APIs","description":"Specifications & Documentation","source":"@site/docs/reference/developer/api/index.md","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/","permalink":"/docs/reference/developer/api/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/index.md","tags":[],"version":"current","frontMatter":{"title":"Edge APIs"},"sidebar":"docsSidebar","previous":{"title":"Ziti Developer Resources","permalink":"/docs/reference/developer/"},"next":{"title":"Edge Client API Reference","permalink":"/docs/reference/developer/api/edge-client-reference"}},{"unversionedId":"reference/developer/api/shared-api-capabilities","id":"reference/developer/api/shared-api-capabilities","title":"Shared API Capabilities","description":"API Response Envelopes","source":"@site/docs/reference/developer/api/shared-api-capabilities.md","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/shared-api-capabilities","permalink":"/docs/reference/developer/api/shared-api-capabilities","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/shared-api-capabilities.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Fabric API","permalink":"/docs/reference/developer/api/fabric-api"},"next":{"title":"Edge SDKs","permalink":"/docs/reference/developer/sdk/"}},{"unversionedId":"reference/developer/index","id":"reference/developer/index","title":"Ziti Developer Resources","description":"Edge SDKs","source":"@site/docs/reference/developer/index.md","sourceDirName":"reference/developer","slug":"/reference/developer/","permalink":"/docs/reference/developer/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/index.md","tags":[],"version":"current","frontMatter":{"title":"Ziti Developer Resources"},"sidebar":"docsSidebar","previous":{"title":"Router","permalink":"/docs/reference/configuration/router"},"next":{"title":"Edge APIs","permalink":"/docs/reference/developer/api/"}},{"unversionedId":"reference/developer/sdk/android","id":"reference/developer/sdk/android","title":"Android","description":"","source":"@site/docs/reference/developer/sdk/android.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/android","permalink":"/docs/reference/developer/sdk/android","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/android.mdx","tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"Android","hide_table_of_contents":false,"toc_min_heading_level":3},"sidebar":"docsSidebar","previous":{"title":"Edge SDKs","permalink":"/docs/reference/developer/sdk/"},"next":{"title":"Ziti C SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-c"}},{"unversionedId":"reference/developer/sdk/index","id":"reference/developer/sdk/index","title":"Edge SDKs","description":"Getting Started With an SDK","source":"@site/docs/reference/developer/sdk/index.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/","permalink":"/docs/reference/developer/sdk/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/index.mdx","tags":[],"version":"current","frontMatter":{"title":"Edge SDKs"},"sidebar":"docsSidebar","previous":{"title":"Shared API Capabilities","permalink":"/docs/reference/developer/api/shared-api-capabilities"},"next":{"title":"Android","permalink":"/docs/reference/developer/sdk/android"}},{"unversionedId":"reference/developer/sdk/ziti-sdk-c","id":"reference/developer/sdk/ziti-sdk-c","title":"Ziti C SDK","description":"---","source":"@site/docs/reference/developer/sdk/ziti-sdk-c.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/ziti-sdk-c","permalink":"/docs/reference/developer/sdk/ziti-sdk-c","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/ziti-sdk-c.mdx","tags":[],"version":"current","frontMatter":{"title":"Ziti C SDK","hide_title":true},"sidebar":"docsSidebar","previous":{"title":"Android","permalink":"/docs/reference/developer/sdk/android"},"next":{"title":"OpenZiti .NET SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-csharp"}},{"unversionedId":"reference/developer/sdk/ziti-sdk-csharp","id":"reference/developer/sdk/ziti-sdk-csharp","title":"OpenZiti .NET SDK","description":"","source":"@site/docs/reference/developer/sdk/ziti-sdk-csharp.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/ziti-sdk-csharp","permalink":"/docs/reference/developer/sdk/ziti-sdk-csharp","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/ziti-sdk-csharp.mdx","tags":[],"version":"current","frontMatter":{"title":"OpenZiti .NET SDK","hide_title":true},"sidebar":"docsSidebar","previous":{"title":"Ziti C SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-c"},"next":{"title":"Ziti Swift SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-swift"}},{"unversionedId":"reference/developer/sdk/ziti-sdk-swift","id":"reference/developer/sdk/ziti-sdk-swift","title":"Ziti Swift SDK","description":"---","source":"@site/docs/reference/developer/sdk/ziti-sdk-swift.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/ziti-sdk-swift","permalink":"/docs/reference/developer/sdk/ziti-sdk-swift","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/ziti-sdk-swift.mdx","tags":[],"version":"current","frontMatter":{"title":"Ziti Swift SDK","hide_title":true},"sidebar":"docsSidebar","previous":{"title":"OpenZiti .NET SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-csharp"},"next":{"title":"Glossary","permalink":"/docs/reference/glossary"}},{"unversionedId":"reference/glossary","id":"reference/glossary","title":"Glossary","description":"Here you will find a list of terms you may come across as you are using Ziti.","source":"@site/docs/reference/glossary.md","sourceDirName":"reference","slug":"/reference/glossary","permalink":"/docs/reference/glossary","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/glossary.md","tags":[],"version":"current","frontMatter":{"id":"glossary","title":"Glossary"},"sidebar":"docsSidebar","previous":{"title":"Ziti Swift SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-swift"},"next":{"title":"Overview","permalink":"/docs/guides/"}},{"unversionedId":"reference/index","id":"reference/index","title":"Overview","description":"What is a Reference?","source":"@site/docs/reference/index.md","sourceDirName":"reference","slug":"/reference/","permalink":"/docs/reference/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/index.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Overview","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"host.v2","permalink":"/docs/reference/config-types/host.v2"},"next":{"title":"Tunnellers","permalink":"/docs/reference/tunnelers/"}},{"unversionedId":"reference/tunnelers/android","id":"reference/tunnelers/android","title":"Android","description":"The Ziti Mobile Edge for Android is available from the the Play store here. The source code for the Android tunneler is in GitHub and it is based on the SDK for the JVM.","source":"@site/docs/reference/tunnelers/03-android.md","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/android","permalink":"/docs/reference/tunnelers/android","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/03-android.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Windows","permalink":"/docs/reference/tunnelers/windows"},"next":{"title":"MacOS","permalink":"/docs/reference/tunnelers/macos"}},{"unversionedId":"reference/tunnelers/index","id":"reference/tunnelers/index","title":"Tunnellers","description":"Each tunneller operates similarly. The goal is to have the tunneller seamlessly intercept traffic destined for Ziti","source":"@site/docs/reference/tunnelers/index.mdx","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/","permalink":"/docs/reference/tunnelers/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/index.mdx","tags":[],"version":"current","frontMatter":{"title":"Tunnellers"},"sidebar":"docsSidebar","previous":{"title":"Overview","permalink":"/docs/reference/"},"next":{"title":"Windows","permalink":"/docs/reference/tunnelers/windows"}},{"unversionedId":"reference/tunnelers/iOS","id":"reference/tunnelers/iOS","title":"iOS","description":"The Ziti Mobile Edge for iOS is available from the Apple store here. The source code for the iOS tunneler is in GitHub and it is based on the SDK for Swift.","source":"@site/docs/reference/tunnelers/05-_iOS.md","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/iOS","permalink":"/docs/reference/tunnelers/iOS","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/05-_iOS.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"MacOS","permalink":"/docs/reference/tunnelers/macos"},"next":{"title":"Linux Tunneller","permalink":"/docs/reference/tunnelers/linux/"}},{"unversionedId":"reference/tunnelers/linux/container/readme","id":"reference/tunnelers/linux/container/readme","title":"Containers","description":"","source":"@site/docs/reference/tunnelers/linux/container/readme.mdx","sourceDirName":"reference/tunnelers/linux/container","slug":"/reference/tunnelers/linux/container/","permalink":"/docs/reference/tunnelers/linux/container/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/linux/container/readme.mdx","tags":[],"version":"current","frontMatter":{"title":"Containers","hide_table_of_contents":false},"sidebar":"docsSidebar","previous":{"title":"Linux Tunneller","permalink":"/docs/reference/tunnelers/linux/"},"next":{"title":"Options and Modes","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-options"}},{"unversionedId":"reference/tunnelers/linux/index","id":"reference/tunnelers/linux/index","title":"Linux Tunneller","description":"The purpose of the tunneller is to configure host access. This means all users and all processes on the host will share","source":"@site/docs/reference/tunnelers/linux/index.md","sourceDirName":"reference/tunnelers/linux","slug":"/reference/tunnelers/linux/","permalink":"/docs/reference/tunnelers/linux/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/linux/index.md","tags":[],"version":"current","frontMatter":{"title":"Linux Tunneller"},"sidebar":"docsSidebar","previous":{"title":"iOS","permalink":"/docs/reference/tunnelers/iOS"},"next":{"title":"Containers","permalink":"/docs/reference/tunnelers/linux/container/"}},{"unversionedId":"reference/tunnelers/linux/linux-tunnel-options","id":"reference/tunnelers/linux/linux-tunnel-options","title":"Options and Modes","description":"ziti-edge-tunnel Environment Variables","source":"@site/docs/reference/tunnelers/linux/linux-tunnel-options.md","sourceDirName":"reference/tunnelers/linux","slug":"/reference/tunnelers/linux/linux-tunnel-options","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-options","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/linux/linux-tunnel-options.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Containers","permalink":"/docs/reference/tunnelers/linux/container/"},"next":{"title":"Troubleshooting","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting"}},{"unversionedId":"reference/tunnelers/linux/linux-tunnel-troubleshooting","id":"reference/tunnelers/linux/linux-tunnel-troubleshooting","title":"Troubleshooting","description":"Increase log level","source":"@site/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting.md","sourceDirName":"reference/tunnelers/linux","slug":"/reference/tunnelers/linux/linux-tunnel-troubleshooting","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Options and Modes","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-options"},"next":{"title":"Deployments","permalink":"/docs/reference/deployments/"}},{"unversionedId":"reference/tunnelers/macos","id":"reference/tunnelers/macos","title":"MacOS","description":"Installation","source":"@site/docs/reference/tunnelers/04-macos.md","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/macos","permalink":"/docs/reference/tunnelers/macos","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/04-macos.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Android","permalink":"/docs/reference/tunnelers/android"},"next":{"title":"iOS","permalink":"/docs/reference/tunnelers/iOS"}},{"unversionedId":"reference/tunnelers/windows","id":"reference/tunnelers/windows","title":"Windows","description":"Installation","source":"@site/docs/reference/tunnelers/02-windows.md","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/windows","permalink":"/docs/reference/tunnelers/windows","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/02-windows.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Tunnellers","permalink":"/docs/reference/tunnelers/"},"next":{"title":"Android","permalink":"/docs/reference/tunnelers/android"}}],"drafts":[],"sidebars":{"docsSidebar":[{"type":"html","value":"<a class=\\"menu__link\\" href=\\"/docs/learn/introduction/\\">LEARN</a>","className":"sidebar-title"},{"type":"category","label":"What is OpenZiti?","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/introduction/components"},{"type":"doc","id":"learn/introduction/key_concepts"},{"type":"doc","id":"learn/introduction/features"},{"type":"doc","id":"learn/introduction/openziti-is-software"}],"link":{"type":"doc","id":"learn/introduction/index"}},{"type":"category","label":"Quickstarts","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Network","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/quickstarts/network/local-no-docker"},{"type":"doc","id":"learn/quickstarts/network/local-with-docker"},{"type":"doc","id":"learn/quickstarts/network/local-docker-compose"},{"type":"doc","id":"learn/quickstarts/network/hosted"},{"type":"doc","id":"learn/quickstarts/network/local-kubernetes","label":"Kubernetes"},{"type":"category","label":"Help","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/quickstarts/network/help/change-admin-password"},{"type":"doc","id":"learn/quickstarts/network/help/reset-quickstart"}],"link":{"type":"generated-index","slug":"/category/help","permalink":"/docs/category/help"}}],"link":{"type":"generated-index","slug":"/category/network","permalink":"/docs/category/network"}},{"type":"doc","label":"Ziti Admin Console","id":"learn/quickstarts/zac/index"},{"type":"category","label":"BrowZer","collapsible":true,"collapsed":true,"items":[{"type":"doc","label":"Example Enabling BrowZer","id":"learn/quickstarts/browzer/example/index"}],"link":{"type":"doc","id":"learn/quickstarts/browzer/index"}},{"type":"category","label":"Services","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/quickstarts/services/kubernetes-service"},{"type":"doc","id":"learn/quickstarts/services/ztha"}],"link":{"type":"doc","id":"learn/quickstarts/services/index"}}],"link":{"type":"doc","id":"learn/quickstarts/quickstartOverview"}},{"type":"category","label":"Core Concepts","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Clients","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Process Sequences","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/clients/process-sequences/EndpointInitialization"},{"type":"doc","id":"learn/core-concepts/clients/process-sequences/EndpointRegistration"},{"type":"doc","id":"learn/core-concepts/clients/process-sequences/ServiceDial"}],"link":{"type":"generated-index","slug":"/category/process-sequences","permalink":"/docs/category/process-sequences"}}],"link":{"type":"doc","id":"learn/core-concepts/clients/choose"}},{"type":"category","label":"Identities","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/identities/creating"},{"type":"doc","id":"learn/core-concepts/identities/enrolling"}],"link":{"type":"doc","id":"learn/core-concepts/identities/overview"}},{"type":"doc","label":"Services","id":"learn/core-concepts/services/overview"},{"type":"category","label":"Configuration Store","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/config-store/config-type-host-v1"},{"type":"doc","id":"learn/core-concepts/config-store/config-type-intercept-v1"},{"type":"doc","id":"learn/core-concepts/config-store/consuming"},{"type":"doc","id":"learn/core-concepts/config-store/managing"}],"link":{"type":"doc","id":"learn/core-concepts/config-store/overview"}},{"type":"category","label":"Metrics","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/metrics/types"},{"type":"doc","id":"learn/core-concepts/metrics/available-metrics"},{"type":"doc","id":"learn/core-concepts/metrics/file"},{"type":"doc","id":"learn/core-concepts/metrics/inspect"},{"type":"doc","id":"learn/core-concepts/metrics/prometheus"},{"type":"doc","id":"learn/core-concepts/metrics/grafana"},{"type":"doc","id":"learn/core-concepts/metrics/sequence-diagram"}],"link":{"type":"doc","id":"learn/core-concepts/metrics/overview"}},{"type":"category","label":"Zero Trust Models","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/zero-trust-models/ztaa","label":"App Access"},{"type":"doc","id":"learn/core-concepts/zero-trust-models/ztha","label":"Host Access"},{"type":"doc","id":"learn/core-concepts/zero-trust-models/ztna","label":"Network Access"}],"link":{"type":"doc","id":"learn/core-concepts/zero-trust-models/overview"}},{"type":"category","label":"Security","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Authentication","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/security/authentication/password-management"},{"type":"doc","id":"learn/core-concepts/security/authentication/third-party-cas"},{"type":"doc","id":"learn/core-concepts/security/authentication/api-session-certificates"},{"type":"doc","id":"learn/core-concepts/security/authentication/authentication-policies"},{"type":"doc","id":"learn/core-concepts/security/authentication/certificate-management"},{"type":"doc","id":"learn/core-concepts/security/authentication/external-jwt-signers"},{"type":"doc","id":"learn/core-concepts/security/authentication/identities"},{"type":"doc","id":"learn/core-concepts/security/authentication/totp"}],"link":{"type":"doc","id":"learn/core-concepts/security/authentication/auth"}},{"type":"category","label":"Authorization","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Policies","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/security/authorization/policies/creating-edge-router-policies"},{"type":"doc","id":"learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies"},{"type":"doc","id":"learn/core-concepts/security/authorization/policies/creating-service-policies"}],"link":{"type":"doc","id":"learn/core-concepts/security/authorization/policies/overview"}},{"type":"doc","id":"learn/core-concepts/security/authorization/posture-checks"}],"link":{"type":"doc","id":"learn/core-concepts/security/authorization/auth"}},{"type":"doc","id":"learn/core-concepts/security/SessionsAndConnections","label":"Session Diagram"},{"type":"doc","id":"learn/core-concepts/security/connection-security"},{"type":"doc","id":"learn/core-concepts/security/enrollment"},{"type":"doc","id":"learn/core-concepts/security/sessions"}],"link":{"type":"doc","id":"learn/core-concepts/security/overview"}},{"type":"doc","id":"learn/core-concepts/pki","label":"PKI"}],"link":{"type":"doc","id":"learn/core-concepts/index"}},{"type":"html","value":"<a class=\\"menu__link\\" href=\\"/docs/reference/\\">REFERENCE</a>","className":"sidebar-title"},{"type":"category","label":"Builtin Config Types","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/config-types/host.v1","label":"host.v1"},{"type":"doc","id":"reference/config-types/host.v2","label":"host.v2"}],"link":{"type":"doc","id":"reference/config-types/index"}},{"type":"doc","id":"reference/index"},{"type":"category","label":"Tunnelers","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/tunnelers/windows"},{"type":"doc","id":"reference/tunnelers/android"},{"type":"doc","id":"reference/tunnelers/macos"},{"type":"doc","id":"reference/tunnelers/iOS"},{"type":"category","label":"Linux Tunneller","collapsible":true,"collapsed":true,"items":[{"type":"doc","label":"Containers","id":"reference/tunnelers/linux/container/readme"},{"type":"doc","id":"reference/tunnelers/linux/linux-tunnel-options"},{"type":"doc","id":"reference/tunnelers/linux/linux-tunnel-troubleshooting"}],"link":{"type":"doc","id":"reference/tunnelers/linux/index"}}],"link":{"type":"doc","id":"reference/tunnelers/index"}},{"type":"category","label":"Deployments","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/deployments/controller","label":"Controller"},{"type":"category","label":"Router","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/deployments/router/router-configuration"},{"type":"doc","id":"reference/deployments/router/cli-mgmt"}],"link":{"type":"doc","id":"reference/deployments/router/deployment"}}],"link":{"type":"doc","id":"reference/deployments/index"}},{"type":"category","label":"Configuration","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/configuration/controller","label":"Controller"},{"type":"doc","id":"reference/configuration/router","label":"Router"}],"link":{"type":"doc","id":"reference/configuration/conventions"}},{"type":"category","label":"Developer","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"APIs","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/developer/api/edge-client-reference"},{"type":"doc","id":"reference/developer/api/edge-management-reference"},{"type":"doc","id":"reference/developer/api/fabric-api"},{"type":"doc","id":"reference/developer/api/shared-api-capabilities"}],"link":{"type":"doc","id":"reference/developer/api/index"}},{"type":"category","label":"SDKs","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/developer/sdk/android"},{"type":"doc","id":"reference/developer/sdk/ziti-sdk-c"},{"type":"doc","id":"reference/developer/sdk/ziti-sdk-csharp"},{"type":"doc","id":"reference/developer/sdk/ziti-sdk-swift"}],"link":{"type":"doc","id":"reference/developer/sdk/index"}}],"link":{"type":"doc","id":"reference/developer/index"}},{"type":"doc","id":"reference/glossary"},{"type":"html","value":"<a class=\\"menu__link\\" href=\\"/docs/guides/\\">GUIDES</a>","className":"sidebar-title"},{"type":"doc","id":"guides/index"},{"type":"category","label":"Local Gateway","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/Local_Gateway/EdgeRouter","label":"Using Ziti-Router"},{"type":"doc","id":"guides/Local_Gateway/EdgeTunnel","label":"Using Ziti-Edge-Tunnel"}],"link":{"type":"generated-index","slug":"/category/local-gateway","permalink":"/docs/category/local-gateway"}},{"type":"category","label":"Public Cloud Deployment","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/Public_Cloud_Deployment/README","label":"Intro"},{"type":"doc","id":"guides/Public_Cloud_Deployment/Controller","label":"Controller"},{"type":"doc","id":"guides/Public_Cloud_Deployment/Router","label":"Router"},{"type":"doc","id":"guides/Public_Cloud_Deployment/Services","label":"Services"}],"link":{"type":"generated-index","slug":"/category/public-cloud-deployment","permalink":"/docs/category/public-cloud-deployment"}},{"type":"doc","id":"guides/data-flow-explainer"},{"type":"category","label":"Kubernetes","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Hosting OpenZiti","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/kubernetes/hosting/kubernetes-controller","label":"Controller"},{"type":"doc","id":"guides/kubernetes/hosting/kubernetes-router","label":"Router"},{"type":"doc","id":"guides/kubernetes/hosting/kubernetes-console","label":"Console"}],"link":{"type":"generated-index","slug":"/category/hosting-openziti","permalink":"/docs/category/hosting-openziti"}},{"type":"category","label":"Workload Tunneling","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/kubernetes/workload-tunneling/kubernetes-host","label":"Reverse Proxy Pod"},{"type":"doc","id":"guides/kubernetes/workload-tunneling/kubernetes-daemonset","label":"Node Proxy"},{"type":"doc","id":"guides/kubernetes/workload-tunneling/kubernetes-sidecar","label":"Sidecar Proxy"}],"link":{"type":"doc","id":"guides/kubernetes/workload-tunneling/index"}}],"link":{"type":"generated-index","slug":"/category/kubernetes","permalink":"/docs/category/kubernetes"}},{"type":"category","label":"Hardware Security Modules (HSM)","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/hsm/softhsm"},{"type":"doc","id":"guides/hsm/yubikey"}],"link":{"type":"doc","id":"guides/hsm/hsmIndex"}},{"type":"category","label":"Securing APIs","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/securing-apis/aks-api-with-nginx-ziti-module"}],"link":{"type":"generated-index","slug":"/category/securing-apis","permalink":"/docs/category/securing-apis"}},{"type":"category","label":"Troubleshooting","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/troubleshooting/circuit-create-error-codes"},{"type":"doc","id":"guides/troubleshooting/pki-troubleshooting"}],"link":{"type":"generated-index","slug":"/category/troubleshooting","permalink":"/docs/category/troubleshooting"}}]}}]},"docs-policies":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/policies","tagsPath":"/policies/tags","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/sidebar-policies.js","contentPath":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/docs-policies","contentPathLocalized":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/i18n/en/docusaurus-plugin-content-docs-docs-policies/current","docs":[{"unversionedId":"CODE_OF_CONDUCT","id":"CODE_OF_CONDUCT","title":"NetFoundry Contributor Covenant Code of Conduct","description":"Our Pledge","source":"@site/docs-policies/CODE_OF_CONDUCT.md","sourceDirName":".","slug":"/CODE_OF_CONDUCT","permalink":"/policies/CODE_OF_CONDUCT","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","next":{"title":"Contributing to NetFoundry Open-Source Projects","permalink":"/policies/CONTRIBUTING"}},{"unversionedId":"CONTRIBUTING","id":"CONTRIBUTING","title":"Contributing to NetFoundry Open-Source Projects","description":"NetFoundry welcomes all contributions large or small from the community. If you want to contribute to a NetFoundry repository this document will serve as a guide. Contributions can come in various forms such as bug reports, engaging with other users by offering help on the the discourse group and of course as code submissions. Please take a moment and read this document to see how you can help out.","source":"@site/docs-policies/CONTRIBUTING.md","sourceDirName":".","slug":"/CONTRIBUTING","permalink":"/policies/CONTRIBUTING","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","previous":{"title":"NetFoundry Contributor Covenant Code of Conduct","permalink":"/policies/CODE_OF_CONDUCT"},"next":{"title":"Code of Conduct","permalink":"/policies/new-project-template/CODE_OF_CONDUCT"}},{"unversionedId":"new-project-template/CODE_OF_CONDUCT","id":"new-project-template/CODE_OF_CONDUCT","title":"Code of Conduct","description":"All open source projects managed by NetFoundry share a common [code of","source":"@site/docs-policies/new-project-template/CODE_OF_CONDUCT.md","sourceDirName":"new-project-template","slug":"/new-project-template/CODE_OF_CONDUCT","permalink":"/policies/new-project-template/CODE_OF_CONDUCT","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","previous":{"title":"Contributing to NetFoundry Open-Source Projects","permalink":"/policies/CONTRIBUTING"},"next":{"title":"Contributing","permalink":"/policies/new-project-template/CONTRIBUTING"}},{"unversionedId":"new-project-template/CONTRIBUTING","id":"new-project-template/CONTRIBUTING","title":"Contributing","description":"NetFoundry welcomes all and any contributions. All open source projects managed by NetFoundry share a common","source":"@site/docs-policies/new-project-template/CONTRIBUTING.md","sourceDirName":"new-project-template","slug":"/new-project-template/CONTRIBUTING","permalink":"/policies/new-project-template/CONTRIBUTING","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","previous":{"title":"Code of Conduct","permalink":"/policies/new-project-template/CODE_OF_CONDUCT"},"next":{"title":"NetFoundry End User License Agreement","permalink":"/policies/new-project-template/NF_EULA"}},{"unversionedId":"new-project-template/NF_EULA","id":"new-project-template/NF_EULA","title":"NetFoundry End User License Agreement","description":"This End User License Agreement (&quot; Agreement&quot;) is between NetFoundry, Inc. (&quot; NetFoundry&quot;),","source":"@site/docs-policies/new-project-template/NF_EULA.md","sourceDirName":"new-project-template","slug":"/new-project-template/NF_EULA","permalink":"/policies/new-project-template/NF_EULA","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","previous":{"title":"Contributing","permalink":"/policies/new-project-template/CONTRIBUTING"}}],"drafts":[],"sidebars":{"policiesSidebar":[{"type":"doc","id":"CODE_OF_CONDUCT"},{"type":"doc","id":"CONTRIBUTING"},{"type":"category","label":"new-project-template","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"new-project-template/CODE_OF_CONDUCT"},{"type":"doc","id":"new-project-template/CONTRIBUTING"},{"type":"doc","id":"new-project-template/NF_EULA"}]}]}}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"Recent posts","blogPosts":[{"id":"/articles","metadata":{"permalink":"/blog/articles","source":"@site/blog/articles.md","title":"Articles","description":"Here you\'ll find articles that cover various topics related to developing","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":0.35,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"nextItem":{"title":"Building the Ziti C SDK and Sample Apps for arm (BeagleBone)","permalink":"/blog/c-sdk-on-beaglebone"}},"content":"Here you\'ll find articles that cover various topics related to developing\\napplications with Ziti.\\n\\n## Topics\\n\\n* [Ziti Up and Running on BeagleBone](./c-sdk-on-beaglebone.md)\\n* [Bootstrapping Trust](./bootstrapping-trust/part-01.encryption-everywhere.md)\\n\\n## [Zitifications](./zitification/index.md)\\n\\nA Zitification is any open-source project that has been modified to use the OpenZiti Edge SDK for client or server connectivity, or both. Zitified apps are bound to an identity instead of an address.\\n\\n* [Prometheus](./zitification/prometheus/part1.md)\\n* [Kubernetes](./zitification/kubernetes/index.md)\\n* [__SSH__](./zitification/zitifying-ssh/index.md)\\n* [__SCP__](./zitification/zitifying-scp/index.md)"},{"id":"/c-sdk-on-beaglebone","metadata":{"permalink":"/blog/c-sdk-on-beaglebone","source":"@site/blog/c-sdk-on-beaglebone.md","title":"Building the Ziti C SDK and Sample Apps for arm (BeagleBone)","description":"This article walks you through building the Ziti C SDK for Linux-arm and running","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":5.645,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Articles","permalink":"/blog/articles"},"nextItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-01.encryption-everywhere"}},"content":"This article walks you through building the Ziti C SDK for Linux-arm and running\\nthe wttr sample application on a [BeagleBone SanCloud](https://beagleboard.org/enhanced).\\n\\n## Configure the Host System\\n\\nThis article uses an Ubuntu 19.10 virtual machine as a development host because it\'s\\nrelatively easy to install a functional toolchain that targets arm-linux.\\n\\n    devbox$ sudo apt-get install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \\\\\\n        binutils-arm-linux-gnueabihf gdb-multiarch cmake git\\n\\n## Build the SDK and Sample Applications\\n\\n\\n    devbox$ git clone --recurse-submodules https://github.com/netfoundry/ziti-sdk-c.git\\n    Cloning into \'ziti-sdk-c\'...\\n    remote: Enumerating objects: 77, done.\\n    remote: Counting objects: 100% (77/77), done.\\n    remote: Compressing objects: 100% (50/50), done.\\n    remote: Total 1287 (delta 35), reused 51 (delta 24), pack-reused 1210\\n    Receiving objects: 100% (1287/1287), 475.44 KiB | 4.85 MiB/s, done.\\n    ...\\n\\n    devbox$ cd ziti-sdk-c\\n    devbox$ mkdir build-Linux-arm\\n    devbox$ cd build-Linux-arm\\n    devbox$ cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/Linux-arm.cmake ..\\n    project version: 0.9.2.1 (derived from git)\\n    -- The C compiler identification is GNU 9.2.1\\n    -- The CXX compiler identification is GNU 9.2.1\\n    -- Check for working C compiler: /usr/bin/arm-linux-gnueabihf-gcc\\n    ...\\n\\n    $ make\\n    [  1%] Building C object deps/uv-mbed/deps/libuv/CMakeFiles/uv_a.dir/src/fs-poll.c.o\\n    [  1%] Building C object deps/uv-mbed/deps/libuv/CMakeFiles/uv_a.dir/src/idna.c.o\\n    [  2%] Building C object deps/uv-mbed/deps/libuv/CMakeFiles/uv_a.dir/src/inet.c.o\\n    [  2%] Building C object deps/uv-mbed/deps/libuv/CMakeFiles/uv_a.dir/src/random.c.o\\n    ...\\n    [ 99%] Building C object programs/sample_wttr/CMakeFiles/sample_wttr.dir/sample_wttr.c.o\\n    [ 99%] Linking C executable sample_wttr\\n    [ 99%] Built target sample_wttr\\n    [100%] Built target sample-host\\n\\n\\nWhen `make` completes, you\'ll have statically linked binaries for the SDK\'s sample applications.\\n\\n## Set up a Ziti Network\\n\\nFor this article we\'ll use a Ziti Edge Developer Edition to run our network. Follow\\nthe [Ziti Network Quickstart](/docs/learn/quickstarts/network/).\\n\\n### Create the \\"demo-weather\\" Service\\n\\nThe sample_wttr application accesses a service named \\"demo-weather\\", so we\'ll create\\nthat service now. Log in to your Ziti Edge Developer Edition web UI and follow the\\nsteps:\\n\\n1. On the left side nav bar, click \\"Edge Services\\"\\n2. In the top right corner of the screen click the \\"plus\\" image to add a new service\\n3. Choose a name for the service. Enter \\"demo-weather\\"\\n4. Choose Router \\"ziti-gw01\\"\\n5. For Endpoint Service choose:\\n    * protocol = tcp\\n    * host = wttr.in\\n    * port = 80\\n6. Click save\\n\\n## Upload the Artifacts to Your BeagleBone\\n\\nAt this point we have created all of the artifacts that are needed for running the\\nsample application:\\n\\n- The \\"sample_wttr\\" executable\\n- The Ziti identity json file (e.g. \\"NewUser.json\\")\\n\\nNow we need to upload these artifacts to the BeagleBone. The scp command shown here\\nassumes that:\\n\\n - You are in the `build-Linux-arm` subdirectory where the `make` command was executed above.\\n - Your BeagleBone is running sshd and has an IP address of 192.168.2.2 which\\n   can be reached from your development host\\n - The Ziti identity json file that was created when you followed the Ziti Network Quickstart\\n   was downloaded to your ~/Downloads directory.\\n\\n\\n    devbox$ scp ./programs/sample_wttr/sample_wttr root@192.168.2.2:.\\n    $ scp ~/Downloads/NewUser.json ./programs/sample_wttr/sample_wttr debian@192.168.2.2:.\\n    NewUser.json                                  100% 6204     2.5MB/s   00:00\\n    sample_wttr                                   100% 2434KB   5.4MB/s   00:00\\n\\n\\n## Run the Application\\n\\nNow we\'re ready to log into the BeagleBone and run the sample application.\\nLet\'s go!\\n\\n    ubuntu@beaglebone:~$ ./sample_wttr ./NewUser.json\\n    [        0.000] INFO    library/ziti.c:173 NF_init(): ZitiSDK version 0.9.2.1-local @de37e6f(wttr-sample-shutdown-cleanup) starting at (2019-09-05T22:35:12.259)\\n    [        0.000] INFO    library/ziti.c:195 NF_init_with_tls(): ZitiSDK version 0.9.2.1-local @de37e6f(wttr-sample-shutdown-cleanup)\\n    /home/scarey/repos/github.com/netfoundry/ziti-sdk-c/deps/uv-mbed/src/http.c:315 ERR TLS handshake error \\n    /home/scarey/repos/github.com/netfoundry/ziti-sdk-c/deps/uv-mbed/src/http.c:153 WARN received -103 (software caused connection abort)\\n    [        0.210] ERROR   library/ziti.c:433 version_cb(): failed to get controller version from ec2-54-164-120-24.compute-1.amazonaws.com:1280 CONTROLLER_UNAVAILABLE(software caused connection abort)\\n    [        0.210] WARN    library/ziti_ctrl.c:49 code_to_error(): unmapped error code: CONTROLLER_UNAVAILABLE\\n    [        0.210] ERROR   library/ziti.c:419 session_cb(): failed to login: CONTROLLER_UNAVAILABLE[-11](software caused connection abort)\\n    ERROR: status => WTF: programming error\\n    ubuntu@beaglebone:~# \\n\\nOops. Actually The Ziti SDK verifies the certificate from the Ziti Edge Controller,\\nso we need to set the clock on the BeagleBone to a time/date that is within the\\nvalid range of the certificate. Might as well set the clock to the current time:\\n\\n    ubuntu@beaglebone:~# sudo rdate time.nist.gov\\n    Wed Mar 18 15:46:56 2020\\n\\nAnd _now_ we are ready to run the application:\\n\\n    ubuntu@beaglebone:~$ ./sample_wttr ./NewUser.json\\n    [        0.000] INFO    library/ziti.c:173 NF_init(): ZitiSDK version 0.9.2.1-local @de37e6f(wttr-sample-shutdown-cleanup) starting at (2020-03-18T15:46:57.536)\\n    [        0.000] INFO    library/ziti.c:195 NF_init_with_tls(): ZitiSDK version 0.9.2.1-local @de37e6f(wttr-sample-shutdown-cleanup)\\n    [        0.554] INFO    library/ziti.c:438 version_cb(): connected to controller ec2-54-164-120-24.compute-1.amazonaws.com:1280 version v0.9.0(ea556fc18740 2020-02-11 16:09:08)\\n    [        0.696] INFO    library/connect.c:180 connect_get_service_cb(): got service[demo-weather] id[cc90410f-1017-4d23-977a-3695cb58f4e8]\\n    [        0.810] INFO    library/connect.c:209 connect_get_net_session_cb(): got session[d89bfdd8-c7e5-42ff-a39f-63056eeb3a82] for service[demo-weather]\\n    [        0.810] INFO    library/channel.c:148 ziti_channel_connect(): opening new channel for ingress[tls://ec2-54-164-120-24.compute-1.amazonaws.com:3022] ch[0]\\n    sending HTTP request\\n    request success: 99 bytes sent\\n    HTTP/1.1 200 OK\\n    Server: nginx/1.10.3\\n    Date: Wed, 18 Mar 2020 15:47:00 GMT\\n    Content-Type: text/plain; charset=utf-8\\n    Content-Length: 8662\\n    Connection: close\\n    \\n    Weather report: Rochester\\n    \\n         \\\\   /     Sunny\\n          .-.      39 \xb0F          \\n       \u2015 (   ) \u2015   \u2196 0 mph        \\n          `-\u2019      9 mi           \\n         /   \\\\     0.0 in         \\n                                                           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                       \\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  Wed 18 Mar \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n    \u2502            Morning           \u2502             Noon      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518     Evening           \u2502             Night            \u2502\\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n    \u2502               Overcast       \u2502               Overcast       \u2502               Cloudy         \u2502               Overcast       \u2502\\n    \u2502      .--.     32..35 \xb0F      \u2502      .--.     35..41 \xb0F      \u2502      .--.     39..44 \xb0F      \u2502      .--.     37..42 \xb0F      \u2502\\n    \u2502   .-(    ).   \u2196 3-4 mph      \u2502   .-(    ).   \u2190 6-8 mph      \u2502   .-(    ).   \u2190 9-16 mph     \u2502   .-(    ).   \u2196 9-17 mph     \u2502\\n    \u2502  (___.__)__)  6 mi           \u2502  (___.__)__)  6 mi           \u2502  (___.__)__)  6 mi           \u2502  (___.__)__)  6 mi           \u2502\\n    \u2502               0.0 in | 0%    \u2502               0.0 in | 0%    \u2502               0.0 in | 0%    \u2502               0.0 in | 0%    \u2502\\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n                                                           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                       \\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  Thu 19 Mar \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n    \u2502            Morning           \u2502             Noon      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518     Evening           \u2502             Night            \u2502\\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n    \u2502    \\\\  /       Partly cloudy  \u2502               Cloudy         \u2502    \\\\  /       Partly cloudy  \u2502  _`/\\"\\".-.     Patchy light d\u2026\u2502\\n    \u2502  _ /\\"\\".-.     41..44 \xb0F      \u2502      .--.     50 \xb0F          \u2502  _ /\\"\\".-.     53..55 \xb0F      \u2502   ,\\\\_(   ).   50..53 \xb0F      \u2502\\n    \u2502    \\\\_(   ).   \u2190 4-7 mph      \u2502   .-(    ).   \u2190 4-6 mph      \u2502    \\\\_(   ).   \u2196 6-11 mph     \u2502    /(___(__)  \u2196 10-19 mph    \u2502\\n    \u2502    /(___(__)  3 mi           \u2502  (___.__)__)  6 mi           \u2502    /(___(__)  6 mi           \u2502      \u2018 \u2018 \u2018 \u2018  4 mi           \u2502\\n    \u2502               0.0 in | 0%    \u2502               0.0 in | 0%    \u2502               0.0 in | 0%    \u2502     \u2018 \u2018 \u2018 \u2018   0.0 in | 20%   \u2502\\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n                                                           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                       \\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  Fri 20 Mar \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n    \u2502            Morning           \u2502             Noon      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518     Evening           \u2502             Night            \u2502\\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n    \u2502  _`/\\"\\".-.     Light rain sho\u2026\u2502    \\\\  /       Partly cloudy  \u2502    \\\\  /       Partly cloudy  \u2502               Cloudy         \u2502\\n    \u2502   ,\\\\_(   ).   62 \xb0F          \u2502  _ /\\"\\".-.     66 \xb0F          \u2502  _ /\\"\\".-.     48..51 \xb0F      \u2502      .--.     46 \xb0F          \u2502\\n    \u2502    /(___(__)  \u2191 14-27 mph    \u2502    \\\\_(   ).   \u2197 26-41 mph    \u2502    \\\\_(   ).   \u2192 24-36 mph    \u2502   .-(    ).   \u2192 22-30 mph    \u2502\\n    \u2502      \u2018 \u2018 \u2018 \u2018  6 mi           \u2502    /(___(__)  6 mi           \u2502    /(___(__)  6 mi           \u2502  (___.__)__)  6 mi           \u2502\\n    \u2502     \u2018 \u2018 \u2018 \u2018   0.0 in | 29%   \u2502               0.0 in | 59%   \u2502               0.0 in | 41%   \u2502               0.0 in | 0%    \u2502\\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n    Location: Rochester, Monroe County, New York, United States of America [43.157285,-77.6152139]\\n    \\n    Follow @igor_chubin for wttr.in updates\\n    request completed: Connection closed\\n    [        3.714] INFO    library/ziti.c:238 NF_shutdown(): Ziti is shutting down\\n    ========================"},{"id":"/bootstrapping-trust/part-01.encryption-everywhere","metadata":{"permalink":"/blog/bootstrapping-trust/part-01.encryption-everywhere","source":"@site/blog/bootstrapping-trust/part-01.encryption-everywhere.md","title":"Bootstrapping Trust","description":"Part 1: Encryption Everywhere","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":14.4,"hasTruncateMarker":false,"authors":[{"name":"Andrew Martinez","title":"OpenZiti Maintainer","url":"https://github.com/andrewpmartinez","imageURL":"https://avatars.githubusercontent.com/u/199856?v=4","key":"andrewpmartinez"}],"frontMatter":{"authors":"andrewpmartinez"},"prevItem":{"title":"Building the Ziti C SDK and Sample Apps for arm (BeagleBone)","permalink":"/blog/c-sdk-on-beaglebone"},"nextItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-02.a-primer-on-public-key-cryptography"}},"content":"## Part 1: Encryption Everywhere\\n\\nWhether you are an encryption expert or a newcomer, welcome! This series\\nis for you! It assumes you know nothing and takes you from soup to nuts\\non how to bootstrap trust with the intent to power a Zero Trust security\\nmodel. The process and thinking described in this series are the direct\\noutput of developing the same system for the Ziti open source project.\\nZiti can be found on the GitHub project page for\\n[OpenZiti](https://github.com/openziti). The series starts with the\\nbasics and dovetails into Ziti\'s Enrollment system.\\n\\nThe parts are as follows.\\n\\n- [Part 1: Encryption Everywhere](./part-01.encryption-everywhere.md)\\n- [Part 2: A Primer On Public-Key Cryptography](./part-02.a-primer-on-public-key-cryptography.md)\\n- [Part 3: Certificates](./part-03.certificates.md)\\n- [Part 4: Certificate Authorities & Chains Of Trust](./part-04.certificate-authorities-and-chains-of-trust.md)\\n- [Part 5: Bootstrapping Trust](./part-05.bootstrapping-trust.md)\\n\\n\\n### Zero Trust\\n\\nThis entire series assumes some familiarity with Zero Trust. If you do\\nnot have a strong background in it, that is fine. This section should\\ngive the reader enough context to make use of the entire series. If a\\nmore in-depth understanding is desired, please consider reading *Zero\\nTrust Networks: Building Secure Systems in Untrusted Networks* by Evan\\nGilman.\\n\\nZero Trust is a security model that requires strict identity\\nauthentication and access verification on every connection at all times.\\nIt sets the tone for a system\'s security to say, \\"this system shall\\nnever assume the identity or access of any connection.\\" Before the Zero\\nTrust security models, IT infrastructures were set up as a series of\\nsecurity perimeters. Think of as a castle with walls and moats. The\\ncastle would have a set number of entry points with guards. Once past\\nthe guards and inside the castle, any visitors were trusted and had\\naccess to the castle. In the real world, passing the guards is analogous\\nto authenticating with a machine or, at worst, connect the office\\nnetwork via WiFi or ethernet cable.\\n\\nZero Trust does away with the concept of having a central castle that\\nassumes anyone inside is trusted. It assumes that the castle has already\\nbeen breached. That is to say, we expect attackers to already be inside\\nthe network and for it to be a hostile environment. Any resources inside\\nthe network should be treated as being publicly available on the\\ninternet and must be defended. To accomplish this defense, a series of\\nZero Trust pillars are defined:\\n\\n- Never Trust, Verify - the virtue of a connection should not grant\\n  access\\n- Authenticate Before Connect - authentication should happen before\\n  resources are connected to\\n- Least Privileged Access - access should only grant connectivity to the\\n  minimum number of resources\\n\\nImplementing those pillars is not a simple tweak to existing\\ninfrastructure. The first point alone will have much of this series\\ndedicated to it.\\n\\n### Ziti & Zero Trust\\n\\nIn a Zero Trust model, there needs to exist mechanisms to verify\\nidentities such that trust can be granted. Zero Trust does not mean\\nthere is no trust. Zero Trust means that trust is given only after\\nverification. Even then, that trust is limited to accessing the minimum\\nnetwork resources necessary. To accomplish this, we need a network that\\ncan force all connections through the following process.\\n\\n1. Authenticate\\n2. Request Access To A Resource\\n3. Connect To The Requested Resource\\n\\nThis process is not the typical connection order on a network. Most\\nconnections on a network are done in the reverse order. At first, this\\nmay seem counter-intuitive. To help make Zero Trust and bootstrapping\\ntrust a bit clearer, it helps to have a concrete system to use an\\nexample. It just so happens that the Ziti software system makes a great\\nexample!\\n\\n![Ziti System](./images/ziti-system.png)\\n\\nIn Ziti, all of the above steps require interacting with a Ziti\\nController. The Ziti Controller manages the Ziti overlay network by\\nmaintaining a list of known network services, SDK clients, routers,\\nenrollments, policies, and much more! All of these pieces working\\ntogether to create a Ziti Network. A Ziti Network is an overlay network\\n\\\\- meaning it creates a virtual network on top of a concrete network.\\nThe concrete network may be the internet, a university network, or your\\nown home network. Whatever it is, it is referred to as the underlay\\nnetwork.\\n\\nIn the Ziti Network, all network resources are modeled as services in\\nthe Ziti Controller. All services on a Ziti Network should only be\\naccessible via the Ziti Network for maximum effect. Network services can\\nbe made available via a Ziti Network in a variety of manners. The\\npreferred method is embedding the Ziti SDK inside of applications and\\nservers as it provides the highest degree of Zero Trust security.\\nHowever, it is also possible to configure various overlay-to-underlay\\nconnections to existing network services via \\"router termination\\" or a\\nparticular type of application with the Ziti SDK embedded in it that\\nspecifically deals with underlay-to-overlay translations (i.e. Ziti\\nDesktop Edge/Mobile Edge).\\n\\nThe Ziti Controller also knows about one or more Ziti Routers that form\\na mesh network that can create dynamic circuits amongst themselves.\\nRouters use circuits to move data across the Ziti Network. Routers can\\nbe configured to allow data to enter and exit the mesh. The most common\\nentry/exit points are Ziti SDKs acting as clients or servers.\\n\\nNetwork clients wishing to attach to the network use the Ziti SDK to\\nfirst authenticate with the Ziti Controller. During authentication, the\\nZiti SDK client and Ziti Controller will verify each other. Upon\\nsuccessful authentication, the Ziti Controller can provide a list of\\navailable services to dial (connect) or to bind (host) for the\\nauthenticated SDK Client. The client can then request to dial or bind a\\nservice. If fulfilled, a session is associated with the client and\\nservice. This new session is propagated to the necessary Ziti Routers,\\nand the required circuits are created. The client is returned a list of\\nZiti Routers which can be connected to in order to complete the last\\nmile of communication between the Ziti overlay network and the SDK\\nclient.\\n\\nThis set of steps covers the pillars of the Zero Trust model! The Ziti\\nController and SDK Clients verify each other. The client cannot connect\\nto network resources or services until it authenticates. After\\nauthentication, a client is given the least privilege access allowed by\\nonly being told about and only being able to dial/bind the authenticated\\nidentity\'s assigned services. It is a Zero Trust overlay network!\\n\\nHow did this system come into existence? How do the Ziti SDK client and\\nZiti Controller verify each other? How do the routers and controller\\nknow to validate each other? How is this managed at scale with hundreds\\nof Ziti Routers and thousands of Ziti SDK clients? It seems that this is\\na recursive problem. To terminate the recursion, we have to start our\\nsystem with a well-defined and carefully controlled seed of trust.\\n\\n# Trust\\n\\nIn software systems that require network connectivity, there are at\\nleast two parties in the system. Generally, there are more, and in the\\ncase of a Ziti network, there could be thousands. Between two parties,\\neach time a connection is made, a trust decision is made. Should this\\nconnection be allowed? Mechanisms must be put into place to verify the\\nidentity of the connecting party if that question is to be answered.\\n\\nOne mechanism that might jump out at the reader is a password or secret.\\nIn Ziti, it would be possible to configure the Controller, Routers, and\\nSDK Clients with a secret. Software is easy to deploy with a secret.\\nThrow it into a configuration file, point the software at, and off you\\ngo!\\n\\nIt is also fundamentally weak as there is only one secret in the system\\nnecessary to compromise the entire system. In Ziti, this would mean\\ngiving the secret to network clients that may or may not be owned by the\\nnetwork operator. Also, shared secrets do not individually identify each\\ncomponent, nor do they define how secrets will power other security\\nconcerns, like encryption.\\n\\nThe solution can be improved. Secrets could be generated per software\\ncomponent. The controller, each router, and each SDK client could have a\\nunique secret. This secret would then individually identity each\\ncomponent! It is a significant improvement, but how does each component\\nverify connections? Do they challenge for the incoming connections\\nsecret and compare it to a list? That means that a pair of systems that\\nneed to connect must have each other\'s secrets. Secret sharing will not\\ndo! We can not be copying secrets between every machine. One machine\\nthat is compromised would mean that many secrets are revealed!\\n\\nThis solution can be evolved and improved, but we do not have to do that\\nhard work! If we did, we would end up recreating an existing technology.\\nThat technology is (public-key\\ncryptography)[https://en.wikipedia.org/wiki/Public-key_cryptography],\\nand it provides everything we need.\\n\\nPublic-key cryptography allows each device to have a unique, secret,\\nprivate key that proves its unique identity. That private key is\\nmathematically tied to a public key. The public key can be used to\\nencrypt messages that only the private key holder can decrypt. Also, the\\npublic key cannot be used to derive the original private key. This\\nfunctionality fits perfectly with what our distributed system needs!\\nAlas, public-key cryptography introduces complex behaviors, setup, and\\nmanagement. In the next article, we will dive a little deeper into this\\ntopic. For now, let us take it on faith that it will serve our needs\\nwell.\\n\\n#### Setting It Up\\n\\nSo we have decided that public-key cryptography is the answer. What does\\nthat mean? What do I have to do? Let us explore what would need to be\\ndone by a human or a piece of software automating this process. Don\'t\\nworry if you don\'t get all of this; the gist is all you need for now.\\nLater articles will expand upon this terminology. In fact, after reading\\nthe later articles, consider revisiting this part.\\n\\nConsider the following diagram of a \\"mesh\\" distributed system. This mesh\\ncould be any type of system such as a mesh of Ziti Routers, or maybe it\\nis a system of sensors on an airplane. What they do does not matter.\\nWhat matters is that this system has multiple pieces of software\\nconnecting amongst themselves. Consider what it means to accomplish this\\nusing public-key cryptography.\\n\\n![Mesh](./images/mesh.png)\\n\\nIn the diagram above, each system needs:\\n\\n- a key pair for client and server connections\\n- to have the public keys of each system it is connecting to\\n\\nSo what do we need to do? Drop into a CLI and start generating keys on\\neach machine. Do that by using these commands:\\n\\n```\\nopenssl ecparam -name secp256k1-genkey -param_enc explicit -out private-key.pem\\n```\\n\\n```\\nopenssl req -new -x509 -key private-key.pem -out server.pem -days 360\\n```\\n\\nVoila - you now have a self-signed certificate! What is a self-signed\\ncertificate? For now, let us understand it means that no other system\\nhas expressed trust in your public certificate. In\\n[Part 4: Certificate Authorities & Chains Of Trust](./part-04.certificate-authorities-and-chains-of-trust.md)\\nwe will cover them in more detail.\\n\\nYou can repeat the above process for every piece of software in your\\nmesh network. Preferably, you log into each machine and generate the\\nprivate key there. Moving private keys on and off devices is a security\\nrisk and frowned upon. For maximum security, hardware, such as\\n[Hardware Security Modules (HSMs)](https://en.wikipedia.org/wiki/Hardware_security_module)\\nand [Trusted Platform Modules\\n(TPMs)](https://en.wikipedia.org/wiki/Trusted_Platform_Module), can be\\nused to store the private keys in a manner that does not make them\\ndirectly accessible.\\n\\nThen you will need to copy each public certificate to every other\\nmachine and configure your software so that it trusts that certificate.\\nThe system will need to repeat this process any time the system adds a\\npiece of software. If a machine is compromised, the analogous public\\ncertificate will need to be untrusted on every node in the mesh. Adding\\nor removing trust in a public certificate involves configuring software\\nor operating systems. There are many ways it can be implemented,\\nincluding configuration files, files stored in specific directories, and\\neven via configuration tools such as Windows Certificate Manager\\nsnap-in.\\n\\nThis is a log of careful work to get a simple system running. Consider\\nwhat this means when adding or removing many nodes? Visiting each\\nmachine and reconfiguring them each time is quite a bit of overhead.\\nThere is a solution to these woes. While it is elegant on its own, it\\ndoes add complexity. Let us see how Certificate Authorities (CAs) can\\nhelp! In the next section, we will hit the highlights of CAs. For more\\ndetail, look forward to\\n[Part 4: Certificate Authorities & Chains Of Trust](./part-04.certificate-authorities-and-chains-of-trust.md).\\n\\n\\n#### CAs & Adding Complexity\\n\\nA CA enables trust deferral from multiple individual certificates to a\\nsingle certificate which means that instead of trusting each\\ncertificate, each piece of software will trust the CA. The CA will be\\nused to sign every public certificate our software pieces need to use.\\nHow does \\"signing\\" work? We will cover that in\\n[part three](./part-03.certificates.md) and why it matters part in\\n[four](./part-04.certificate-authorities-and-chains-of-trust.md). For\\nnow, the basics will be provided.\\n\\nHere are the high-level steps of using a CA:\\n\\n1. create a CA configuration via OpenSSL CNF files\\n2. create the CA\\n3. use the CA\'s public key to sign all of the public certificates\\n4. distribute the CA\'s certificate to every machine\\n5. configure the machines certificate store or configure the software\\n\\nFor items one and two, the process can be a bit mystical. There is a\\nmultitude of options involved in managing a CA. To perform number three,\\nyou will need to go through the processing of creating certificate\\nsigning requests (CSRs, see [parts three](./part-03.certificates.md) for\\nmore detail) on behalf of the piece of software, and someone or\\nsomething will have to play the role of the CA and resolve the CSRs. The\\nlast two steps will depend on the operating system and software being\\nused.\\n\\nAll of these actions can be done via a CLI or programmatically. You will\\nhave to spend time and energy, making sure the options are correctly set\\nand learning about all the different capabilities and extensions.\\nMistakes will inevitably occur. It is time-consuming to debug why a\\nspecific public certificate is not working as intended. The tools and\\nsystems that use the certificates are purposely vague in error messages\\nas not to reveal too much information to attackers.\\n\\nThe payoff for using CAs is having the ability to create chains of\\ntrust. Chains of trust allow distributed systems to scale without having\\nto reconfigure each node every time the system grows or shrinks. With a\\nlittle more upfront cost and bookkeeping to run a CA, the system will\\ngreatly decrease the amount of configuration required on each device.\\n\\n#### Further Concerns\\n\\nOnce configured, there are still other concerns that need to be taken\\ninto account. Consider the following list of events that may happen to a\\nCA, and it\'s certificates:\\n\\n- What happens when a certificate expires?\\n- How does a system know not to trust a certificate anymore?\\n- What happens when private keys need to regenerate?\\n\\nCAs do not automatically handle the propagation of these types of\\nevents. CAs are files on a storage device or HSM. Issuing or revoking\\ncertificates does not generate any kind of event without additional\\nsoftware. There is also the issue of certificates expiring. That \\"-days\\n360\\", used in the example above, puts a lifetime on each certificate.\\nThe lifetime can be extended far into the future, but this is a bad\\npractice. Limiting the life span of a certificate reduces attack windows\\nand can be used as a trigger to adopt strong encryption.\\n\\nEven if we ignore all of those concerns, who did we trust to get this\\nsystem setup? What was the seed of trust used to bootstrap trust? So\\nfar, you could have imagined that a human was doing all of this work. In\\nthat case, a human operator is trusted to properly configure all of the\\nsystems - trusting them with access to all of the private keys. The seed\\nof trust is in that human. If this is a software system performing these\\nactions, that means that the system has to be trusted and most likely\\nhave access to every other system coming online. That is workable, but\\nwhat happens when your system can have external systems request to be\\nadded to the network? How can that be handled? How do you trust that\\nsystem in the first place? Using a secret password creates a single,\\nexploitable, weak point. Public-key cryptography could be put in place,\\nbut then we are in a chicken-and-egg scenario. We are putting public-key\\ncryptography in place to automate public-key cryptography.\\n\\nThere are many caveats to bootstrapping trust. In a dynamic distributed\\nsystem where pieces of software can come and go at the whim of network\\noperators, the issues become a mountain of concerns. Thankfully in Ziti,\\na mechanism is provided that abstracts all of these issues. To\\nunderstand how Ziti accomplishes this, we have a few more topics to\\ndiscuss. In\\n[part two](./part-02.a-primer-on-public-key-cryptography.md), we will\\nchip away at those topics by covering public-key cryptography in more\\ndetail to understand its powers and applications.\\n\\n---\\n\\nWritten By: Andrew Martinez  \\nJune 2020"},{"id":"/bootstrapping-trust/part-02.a-primer-on-public-key-cryptography","metadata":{"permalink":"/blog/bootstrapping-trust/part-02.a-primer-on-public-key-cryptography","source":"@site/blog/bootstrapping-trust/part-02.a-primer-on-public-key-cryptography.md","title":"Bootstrapping Trust","description":"Part 2: A Primer On Public-Key Cryptography","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":7.63,"hasTruncateMarker":false,"authors":[{"name":"Andrew Martinez","title":"OpenZiti Maintainer","url":"https://github.com/andrewpmartinez","imageURL":"https://avatars.githubusercontent.com/u/199856?v=4","key":"andrewpmartinez"}],"frontMatter":{"authors":"andrewpmartinez"},"prevItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-01.encryption-everywhere"},"nextItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-03.certificates"}},"content":"## Part 2: A Primer On Public-Key Cryptography\\n\\nIf you have read through the entire series up to here, welcome! If you\\nhave not, please consider reading the whole series:\\n\\n- [Part 1: Encryption Everywhere](./part-01.encryption-everywhere.md)\\n- [Part 2: A Primer On Public-Key Cryptography](./part-02.a-primer-on-public-key-cryptography.md)\\n- [Part 3: Certificates](./part-03.certificates.md)\\n- [Part 4: Certificate Authorities & Chains Of Trust](./part-04.certificate-authorities-and-chains-of-trust.md)\\n- [Part 5: Bootstrapping Trust](./part-05.bootstrapping-trust.md)\\n\\nIt isn\'t easy to talk about bootstrapping trust without covering the\\nbasics of public-key cryptography. The reader may skip this article if\\nthe concepts of encryption, signing, and public/private keys are\\nfamiliar. However, if not, I implore that you bear the brunt of this\\narticle as later parts will heavily rely on it.\\n\\nIf you wish, you can dive into the mathematics behind it to prove it to\\nyourself, but I promise, no math here. When necessary, I will wave my\\nhands at it, point into the distance, and let the reader journey out.\\n\\n### Keys\\n\\nKeys are blobs of data containing rather large numbers. They can be\\nstored anywhere data can be stored, but are commonly stored as files. A\\nset of public and private keys is referred to as a \\"key set\\" or \\"key\\npair.\\"\\n\\nWithin a key pair, there is only one private key and one public key. The\\ntwo keys are mathematically entangled, given a particular function and\\nits parameters. Today, those functions and parameters are generally\\nelliptical curves and are the basis of a \\"trapdoor function.\\" Trapdoor\\nfunctions are attractive to the cryptographically inclined for two main\\nreasons:\\n\\n1. they make it easy to encrypt with one key of a key pair and decrypt\\n   with the other.\\n2. one key cannot be derived from the other\\n\\nOf the two keys, the private key is the most important. It must be kept\\ntucked away from prying eyes and attackers. Some secure environments\\nstore the private key in hardware such as\\n[Hardware Security Modules (HSMs)](https://en.wikipedia.org/wiki/Hardware_security_module)\\nor\\n[Trusted Platform Modules (TPMs)](https://en.wikipedia.org/wiki/Trusted_Platform_Module).\\nMobile devices, such as laptops and smartphones, use hardware technology\\nsimilar to TPMs. Apple has its Secure Enclave, and Android has its\\nKeymaster Hardware Abstraction Layer. The goal of all of these pieces of\\nhardware is to keep sensitive secrets (e.g., private keys) safe. The\\nfact that an entire industry of embedded hardware has been developed to\\nkeep private keys safe should tip the reader off to how important they\\nare.\\n\\n\\nAs stated above, these two keys have some impressive capabilities. It is\\nnot possible to derive one from the other. This allows the public key to\\nbe handed out freely without compromising the private key. Also, both\\nkeys can generate encrypted data that only the other key can decrypt.\\nMore clearly:\\n\\n1. Anyone with the public key can encrypt data only the private key\\n   holder can decrypt\\n2. Anyone with the public key can decrypt data from the private key\\n   holder\\n\\nNumber one can succinctly be called \\"Public Key Encryption\\" and number\\ntwo \\"Private Key Encryption.\\" This article explores the merits of both.\\n\\n#### Public Key Encryption\\n\\nFrom the list above, number one is what most people think of as\\n\\"encryption.\\" It is \\"secure\\" as it allows anyone with the widely\\navailable public key to send messages only the private key holder can\\nread. This property ensures that communication from the public key\\nholder to the private key holder is being read exclusively by the\\nintended target.\\n\\nThere is quite a bit of pressure to keep the private key extremely safe.\\nWhoever holds the private key, has a guaranteed identity that is tied to\\nand verifiable by the public key. It is verifiable because if one can\\nuse the public key to encrypt data, only the private key holder can\\ndecrypt it. This fact means that data can be encrypted and sent that\\ncoordinates on an additional secret. Since only the private key holder\\ncan decrypt the data to see this second level secret, future\\ncommunication can use the new secret to encrypted and verify traffic in\\nboth directions. This additional exchange is roughly how part of the TLS\\nnegotiation works for HTTPs. TLS, and by proxy HTTPS, use other\\ntechnologies and strategies to provide an incredible security\\nproposition.\\n\\n#### Private Key Encryption\\n\\nFor private key encryption, the same principles apply as with public key\\nencryption with the roles reversed. The private key encrypts data only\\nthe public key can decrypt. On the surface, this seems absurd. When the\\nserver encrypts data with its private key, the public key can decrypt\\nit. The public key is not protected and expected to be widely available.\\nIt seems as if private key encryption is nearly useless as everyone can\\nread it!\\n\\nExcept it isn\'t. Private key encryption verifies the identity of the\\nprivate key holder. The public key cannot interact with anyone else.\\nAdditionally, this property allows us to generate encrypted data that\\ncould only have come from the private key holder. If that data happens\\nto be small and describe another document, we call that a \\"digital\\nsignature\\" or \\"signature\\" for short.\\n\\n### Digital Signatures\\n\\nDigital signatures are similar to handwritten ones used to sign legal\\ndocuments and checkbooks, but with a significant advantage. They\\nvalidate that a document has not been altered since it was signed. With\\ntoday\'s computer\'s graphical abilities, the nefarious can forge images\\nand handwritten signatures. That puts handwritten signatures at a\\nsignificant disadvantage. So how does this work?\\n\\nThe data that will be signed can be anything. What it represents is not\\nimportant. It can be text, JSON, an image, a PDF, or anything at all!\\nThat data is processed by a one-way\\n[cryptographic hashing algorithm](https://en.wikipedia.org/wiki/Cryptographic_hash_function),\\nsuch as SHA-256. This process is idempotent, meaning running it\\nrepeatedly on the same data, parameters, and hashing algorithm gives the\\nsame result. The output of this process is a hash, a string of\\ncharacters that uniquely identifies the input data. With sufficiently\\nlarge input data, the hash is much shorter than the input data as the\\nhash size is usually fixed length.\\n\\nFor example, here is the Ziti logo:\\n\\n![Ziti](./images/ziti.png)\\n\\nThis logo\'s file can be hashed using SHA-256 via the `sha256sum` command\\ncommonly found on Linux.\\n\\n```\\n$> sha256sum ziti.png\\nc3a6681cc81f9c0fa44b3e2921495882c55f0a86c54cd60ee0fdc7d200ad26db  ziti.png\\n```\\n\\nThat long string \\"c3a....6db\\" is the hash of that file! The string is 64\\ncharacters long and is comprised of hex characters (a base 16 numbering\\nsystem of 0-9 and a-f). Each character takes four bits to represent (4^2\\n= 16). Since there are 64 characters at 4 bits each we have: 64 x 4 =\\n256\\\\. This is where SHA-256 gets its name. SHA-256 is a fixed-length\\ncryptographic hashing algorithm who\'s output is 256 bits in length.\\n\\nThe hash itself is not encryption. It is \\"hashing.\\" Hashing of this\\nnature is not reversible while encryption is. For cryptographic hashing,\\nit is impracticable to have two similar sets of data that have the same\\nfunction that produces the same hash. In essence, the hash uniquely\\nrepresents the data: all of it! Changing even a single character would\\ngenerate a different hash.\\n\\nAfter hashing a data or document, the private key holder can encrypt the\\nhash to generate a signature. This process provides the following truths\\nwhen working with the signature:\\n\\n- the private key is the only key capable of producing its signature of\\n  the data\'s hash\\n- the public key can validate the signature given the data and hashing\\n  algorithm used\\n\\nVerifying a signature a straightforward process:\\n\\n- Use the public key to decrypt the signature to reveal the original\\n  hash\\n- Use the hashing algorithm that was used initially on the data,\\n  recreate the hash independently\\n- Compare the two hashes, and if they are the same the signature is\\n  valid\\n\\nSigning data is incredibly powerful. It allows a private key holder to\\nstate that data was approved by them and not altered. It is also\\npublicly verifiable to anyone with the document, signature, and public\\nkey. This allows many decentralized approaches to sharing data that can\\nhave its source and content verified.\\n\\nBearer tokens are an example of the power of signatures. Bearer tokens\\nare a document that is signed by a trusted authentication system and\\ncontain data that provides information about the client presenting the\\ntoken. Signing the token ensures that the content of the token has not\\nbeen changed and has been endorsed by a trusted system. An example of a\\nbearer token is a\\n[JSON Web Token (JWT)](https://en.wikipedia.org/wiki/JSON_Web_Token)\\n\\nA JWT specifies the format of the bearer token as a header, payload, and\\nsignature using JSON. A client can then present a JWT to any system\\nwhich can then verify that the contents are valid and from a trusted\\nidentity. As long as the signature is valid, the JWT can grant access to\\nthe client presenting it based on whatever information is inside the\\nJWT.\\n\\n# Closing\\n\\nThis article should have shed light on public-key cryptography by\\nexplaining the roles of the public and private keys. It should have also\\nprovided a glimpse at the power of encryption and digital signatures. In\\n[part three](././part-03.certificates.md) we will see how key pairs can\\nbe combined with certificates!\\n\\n---\\n\\nWritten By: Andrew Martinez  \\nJune 2020"},{"id":"/bootstrapping-trust/part-03.certificates","metadata":{"permalink":"/blog/bootstrapping-trust/part-03.certificates","source":"@site/blog/bootstrapping-trust/part-03.certificates.md","title":"Bootstrapping Trust","description":"Part 3: Certificates","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":6.04,"hasTruncateMarker":false,"authors":[{"name":"Andrew Martinez","title":"OpenZiti Maintainer","url":"https://github.com/andrewpmartinez","imageURL":"https://avatars.githubusercontent.com/u/199856?v=4","key":"andrewpmartinez"}],"frontMatter":{"authors":"andrewpmartinez"},"prevItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-02.a-primer-on-public-key-cryptography"},"nextItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-04.certificate-authorities-and-chains-of-trust"}},"content":"## Part 3: Certificates\\n\\nIf you have read through the entire series up to here, welcome! If you\\nhave not, please consider reading the whole series:\\n\\n- [Part 1: Encryption Everywhere](./part-01.encryption-everywhere.md)\\n- [Part 2: A Primer On Public-Key Cryptography](./part-02.a-primer-on-public-key-cryptography.md)\\n- [Part 3: Certificates](./part-03.certificates.md)\\n- [Part 4: Certificate Authorities & Chains Of Trust](./part-04.certificate-authorities-and-chains-of-trust.md)\\n- [Part 5: Bootstrapping Trust](./part-05.bootstrapping-trust.md)\\n\\nIn the series, we have covered public-key cryptography, where we learned\\nabout public keys, private keys, and their uses for encryption and\\nsigning. Using keys to sign data will play an essential role in this\\narticle. It is vital that the reader understand that signatures verify\\nboth the content of the data and its source. For a refresher, see\\n[part two](./part-02.a-primer-on-public-key-cryptography.md) of this\\nseries.\\n\\nThis article covers how certificates and certificate authorities (CAs)\\nwork as \\"trust anchors.\\" When a CA is a trust anchor, it means that a\\nsystem can trust the CA to sign certificates that it can, in turn,\\ntrust. Throughout this entire article, \\"trusting certificates\\" is\\nmentioned. Trusting a certificate (CA or otherwise) is a software or\\noperating system configuration process. This configuration tells the\\nsystem that the specified certificates are trustworthy in the eyes of\\nthe operator.\\n\\n### Certificates\\n\\nPart two of this series covered keys, both public and private, but did \\nnot mention certificates. It is common to hear \\"certificate\\" used \\ninterchangeably with \\"public key\\" and, sometimes, \\"private key.\\" A \\ncertificate must have the public key inside of it. Some storage formats\\nallow certificates to be stored along with the matching private key. \\nOne example of this is PFX files. PFX files, which are PKCS#12 archives,\\nare also sometimes generically referred to as a \\"certificates\\". In this \\narticle \\"certificate\\" will always mean an x509 certificate that contains\\nonly the public key.\\n\\nCertificates are a simple concept, but years of expansions and\\nextensions have added to them and can be daunting uninitiated when you\\nget into the nitty-gritty details. This article will strive to sit above\\nthat detail. If you venture into the realm of generating certificates,\\nusing OpenSSL and its configuration files, it can be a cumbersome\\nexperience to wade through. There are many great articles and tutorials\\navailable to get you started.\\n\\nFor this article, the word \\"certificate\\" will mean an \\"x509\\nCertificate\\". x509 is a public standard and is the de-facto standard for\\nsoftware systems dealing with public-key cryptography. There are other\\nformats, but they are usually environment-specific, such as Card\\nVerifiable Certificates. x509 good enough for general purpose use on\\nmost systems.\\n\\n\\nSo, what is a certificate? It is yet another blob of data that is\\nspecially formatted. It can be stored anywhere data can be stored but is\\nusually a file. For this conversation, we will focus on the following\\nsubset of information that a certificate contains:\\n\\n- Subject information\\n  - A public key\\n  - Distinguished Name\\n- Issuer Information\\n- Validity Period\\n- Usage/Extensions\\n- Signatures\\n\\n#### Subject Information\\n\\nCertificates contain more than keys. The Distinguished Name (DN) are\\ntext fields. They are useful mainly to humans to know what/who owns a\\ncertificate. It is sometimes used by software as display information or\\nfor comparison checks. Since humans provide the DN values or configure\\nsoftware with values, it is not always distinguishing. DN values have an\\nalternate name: relatively distinguished names.\\n\\nRelated to the Subject DN is the Issuer Information. The Issuer\\nInformation is the subject of the certificate that issued the\\ncertificate. Because of this, both the issuer information has similar\\nvalues to the subject DN. Both can include the following information:\\n\\n- CN - common name - a name\\n- SN - surname\\n- SERIALNUMBER - a number that is usually unique per certificate issuer,\\n  but not always\\n- C - country\\n- L - locality name\\n- ST or S - state or province\\n- STREET - street address\\n- O - organization name\\n- OU - organizational unit\\n- T - title\\n- G or GN - given name\\n- E - email address\\n- UID - user id\\n- DC - domain component\\n\\nDo not worry about memorizing that list. Simply knowing they exist and\\nthat they may or may not matter is good enough for now. If the reader is\\nwondering when they might matter, well, that is generally when the\\nsystem you are using complains about them.\\n\\n#### Validity Period\\n\\nThe Validity Period specifies two points in time from when the\\ncertificate is valid. Before and after this window of time, the\\ncertificate is invalid and should not be trusted. Validity periods\\nshould be as small as possible to fit their use case. Shorter periods\\nreduce the window of time that compromised private key can remain useful\\nfor an attack. The cost of this is overhead reissuing certificates as\\nthey reach the end of their validity period.\\n\\n#### Usage/Extensions\\n\\nUsage/Extension Data is interesting because it can limit what roles a\\ncertificate fulfills. Depending on the system, this may be adhered to or\\nnot. Some examples of usage that are common to see:\\n\\n- key usage: client authentication, server authentication, signatures,\\n  etc.\\n- Subject Alternate Names (SANs)\\n  - Limits what IP address, email address, domain name, etc. the\\n    certificate can be associated with\\n- Certificate Authority (CA) flag\\n- and more\\n\\nThis series will not dive into the details of these usages. However, it\\nis essential to be aware of them and that they can affect the roles a\\ncertificate can fulfill.\\n\\n#### Signatures\\n\\nThe signature section of a certificate is a list of signatures from\\nother entities that trust this certificate. A certificate that signs\\nitself is a \\"self-signed certificate.\\" Self-signed certificates must be\\nindividually trusted as no other certificate has expressed trust in it\\nby signing it. Self-signed certificates are sometimes used for testing\\npurposes as they are easy to create. They are also used as Root\\nCertificate Authorities (root CAs).\\n\\nEach signature on a certificate is the result of taking the contents of\\nthe certificate (without signatures), one-way hashing it, and then\\nencrypting the hash with the signator\'s private key. The result is\\nappended to the end of the signature list. During this process, the\\npublic certificate moves between systems to be signed.\\n\\nThe movement of the public certificate between systems is facilitated by\\nCertificate Signing Requests (CSRs). CSRs can be transmitted\\nelectronically as files or as a data stream to the signer. CSRs contain\\nonly the public information of a certificate and a signature from the\\ncertificate\'s private key. Since CSRs only contain public information,\\nthey are not considered sensitive. The signature in a CSR allows the\\nsigner to verify that the CSR is from the subject specified in the CSR.\\nIf the signature is valid, the signator processes the CSR, and the\\nresult is a newly minted certificate with an additional signature.\\n\\n### Conclusion\\n\\nCertificates are keys, usually public ones, with additional metadata\\nthat adds conventions and restrictions around certificate usages. They\\nprovide a place for signatures to resides and, through CSRs, provide a\\nvehicle to request additional signatures. Certificates are useful\\nbecause they package all of these concerns into a neat single file. In\\n[part four](./part-04.certificate-authorities-and-chains-of-trust.md), we\\nwill explore how to create a formidable chain of trust by linking\\nmultiple certificates together.\\n\\n---\\n\\nWritten By: Andrew Martinez  \\nJune 2020"},{"id":"/bootstrapping-trust/part-04.certificate-authorities-and-chains-of-trust","metadata":{"permalink":"/blog/bootstrapping-trust/part-04.certificate-authorities-and-chains-of-trust","source":"@site/blog/bootstrapping-trust/part-04.certificate-authorities-and-chains-of-trust.md","title":"Bootstrapping Trust","description":"Part 4: Certificate Authorities & Chains of Trust","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":7.81,"hasTruncateMarker":false,"authors":[{"name":"Andrew Martinez","title":"OpenZiti Maintainer","url":"https://github.com/andrewpmartinez","imageURL":"https://avatars.githubusercontent.com/u/199856?v=4","key":"andrewpmartinez"}],"frontMatter":{"authors":"andrewpmartinez"},"prevItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-03.certificates"},"nextItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-05.bootstrapping-trust"}},"content":"## Part 4: Certificate Authorities & Chains of Trust\\n\\nIf you have read through the entire series up to here, welcome! If you\\nhave not, please consider reading the whole series:\\n\\n- [Part 1: Encryption Everywhere](./part-01.encryption-everywhere.md)\\n- [Part 2: A Primer On Public-Key Cryptography](./part-02.a-primer-on-public-key-cryptography.md)\\n- [Part 3: Certificates](./part-03.certificates.md)\\n- [Part 4: Certificate Authorities & Chains Of Trust](./part-04.certificate-authorities-and-chains-of-trust.md)\\n- [Part 5: Bootstrapping Trust](./part-05.bootstrapping-trust.md)\\n\\nThis article makes implicit heavy use of\\n[part 2](./part-02.a-primer-on-public-key-cryptography.md) and\\n[part 3](./part-03.certificates.md) of this series.\\n\\n### Root & Intermediate Certificate Authorities (CAs)\\n\\nNot all certificates are the same! Certificates have different\\ncapabilities depending on their usage attributes and extensions. The\\nprevious article in this series mentioned a few of those attributes and\\nextensions. Two of those were `clientAuth`, for client certificates, and\\n`serverAuth`, for server certificates, which play an essential role in\\nhow a certificate is used during network authentication negotiations.\\nThese roles are crucial, as they are a contract for what attributes and\\nextensions should be included in the certificate to make it useful. For\\nexample, a server certificate usually finds it useful to include Subject\\nAlternate Names (SANs). A SAN can be used to tie a certificate to a\\nspecific domain name (like ziti.dev). However, a client certificate will\\nnot have use for those same fields.\\n\\nThe roles of certificates and the attributes/extensions they have are\\nnot always strictly followed. Some systems, such as web browsers,\\nrequire SANs on a server certificate. That wasn\'t always the case.\\nBefore that, the Common Name field in the subject information contained\\nthe domain name. Some systems still rely on that convention.\\n\\nAnother type of certificate is a Certificate Authority (CA) certificate.\\nA CA is a key pair with a certificate that has a unique purpose: to sign\\nother certificates. CA certificates have a special CA flag set to\\n\\"true.\\" This flag alone does not grant the CA certificate any power, but\\nif a system trusts that CA, it then allows that system to trust any\\ncertificate that CA has signed. As mentioned in previous parts of this\\nseries, trusting a CA is a software or operating system configuration\\nprocess. This process can be done in multiple ways depending on the\\nsystem: adding it to a store, a specific folder, or adding lines to a\\nconfiguration file.\\n\\nYour operating system, right now, has its own set of trusted CAs. Most\\noperating systems come with a default list installed and maintained by\\nyour OS developer. Over time this list is added to and removed from as\\ntrust is granted or withdrawn. Some pieces of software come with a list\\nof CAs that are used instead of or in addition to the OS\'s CAs. The\\npower of a CA comes not by its creation but by it being trusted.\\n\\nCAs come in two flavors: Root CAs and Intermediate CAs. Root CAs are the\\negg or the chicken (depending on your viewpoint) of the CA trust\\nchicken-and-egg problem. Trust for CAs has to start somewhere. With CAs,\\nit is the Root CA. A Root CA can sign certificates that are themselves\\nCAs as well. Those certificates represent Intermediate CAs. Layers of\\nCAs starting with a root and adding intermediates along the way allows\\nthe private key for the Root CAs to be kept in a highly secure\\nenvironment, which is not convenient to use for signing. This security\\nmeans that the Root CA has a far less likely chance of having its\\nprivate key compromised. Intermediate CAs are put into less secure\\nenvironments and, if compromised, can be revoked. Trust is usually put\\ninto the Root CA, and since it was not compromised can remain trusted.\\nCompromised intermediate CAs can be blacklisted.\\n\\nRunning a public CA is serious business if you wish to be publicly\\ntrusted. The organizations running a CA have to have strict protocols\\nthat verify the security and safe handling of the CAs private keys. If\\nthe private key is compromised, it can be used to sign other\\ncertificates for malicious intents. Any system that trusted the\\ncompromised CA will now trust any maliciously signed certificates. This\\nwill compromise all certificates signed by that CA.\\n\\nPublic CAs are maintained by organizations such as DigiCert, Let\'s\\nEncrypt, and others. Anyone can create private CAs. The only difference\\nis that the number of systems that trust a private CA is much smaller\\nthan that of a public one. CAs are a cornerstone of bootstrapping trust.\\nTrusting the proper CAs can grant trust to a large number of systems.\\n\\n### Chains of Trust & PKIs\\n\\n[Part three](./part-03.certificates.md) of this series introduced that\\ncertificates self-sign or sign another certificate. Certificates are\\nusually signed via Certificate Signing Requests (CSRs). A certificate\\nsigning itself is called a \\"self-signed certificate\\" and is an indicator\\nof it being a root CA if the CA flag is also set to true. A root CA can\\nsign other certificates that also have the CA flag set to true. Those\\ntypes of certificates are intermediate CAs. Any CA, root or\\nintermediate, that fulfills a CSR and signs the enclosed certificate\\nwill generate a non-CA certificate as long as the CA flag is false.\\nThese certificates are \\"leaf certificates.\\"\\n\\nThe term Public Key Infrastructure (PKI) is used to describe all of the\\noutputs that are generated when a CA is created. That includes the root,\\nintermediates, and leaf certificates. It also optionally includes all of\\nthe systems, processes, procedures, and data used to manage them. For\\nthe purpose of this article, and simplicity, let us stick to the\\ncertificates only.\\n\\nConsider the following PKI setup:\\n\\n- Two root CAs:\\n  - Root A\\n  - Root B\\n- The root CAs each sign an intermediate CA via CSR:\\n  - Intermediate A\\n  - Intermediate B\\n- A server wishes to have a certificate to have Root A\'s trust extended\\n  to it.\\n  - A key pair is generated\\n- A CSR is created and submitted to Intermediate A to sign\\n- The CSR is fulfilled.\\n  - Server Cert A is created and signed by Intermediate A\\n\\nVisually this would appear as follows:\\n\\n![Chains](./images/chains.png)\\n\\nThis PKI has two chains of trust: Chain A and Chain B. They are called\\nchains because the signatures link the certificates together. Root A has\\nsigned Intermediate A\'s certificate and Intermediate A has signed Server\\nA\'s certificate. Programmatically we can traverse these signatures and\\nverify them using the public certificates of each signatory. Trusting\\nRoot A will trust Server A.\\n\\nThe second chain, Chain B, does not sign any of the certificates on\\nChain A. As expected, Trusting either of the CAs from Chain B does not\\ngrant any trust to the certificates on Chain A. Chain B highlights the\\nfact that any system may have multiple chains of trust that do not\\ninteract in any fashion.\\n\\nReturning to Chain A, trusting Intermediate A designates it as a \\"trust\\nanchor.\\" Any certificate can be a trust anchor. The certificate used as\\na trust anchor determines which certificates will additionally be\\ntrusted. A leaf certificate as a trust anchor only trusts that one\\ncertificate. Trusting a CA trusts all certificates that it has signed\\nitself or any of its intermediates. In the diagram above, trust only\\nflow downward.\\n\\n- Trusting Server Cert A will only trust that one server certificate\\n- Trusting Intermediate A will trust Server Cert A and any other\\n  certificate it signs\\n- Trust Root A will trust Intermediate A and Server Cert A and any other\\n  certificate Root A signs (intermediate CA or not) and in turn, any of\\n  the certificates they sign\\n\\nTrusting a CA that has signed many certificates allows public\\ncertificate trust to scale. This is how trust scales for web traffic.\\nCompanies like DigiCert, IdenTrust, GoDaddy, etc. have their root CA or\\none of their large intermediate CAs trusted. Those CAs sign certificates\\nfor websites. All of our devices trust those website certificates\\nbecause the CA has signed them.\\n\\n### Distributed Systems & CAs\\n\\nThe goal for any private distributed system should be to have\\ncertificates verified on both sides: clients verify servers and vice\\nversa. This behavior is a tenant of Zero Trust - do not trust, verify.\\nVerification should be done on every connection before any data\\nexchange. Over TLS, which secures HTTPS, this would be \\"mutual TLS\\" or\\n\\"mTLS.\\" Most public websites do not require mTLS. Instead, they use TLS\\nwith the client validating the server. For public web traffic, the\\nserver wishes to be trusted widely. The reverse is not necessary. If it\\nis, websites use an additional form of authentications, like usernames\\nand passwords, to verify the client\'s identity. Public key cryptography\\nis a stronger authentication mechanism, but it is also difficult for the\\ngeneral public to set up, manage, and maintain.\\n\\nThe same is true for distributed systems. Most don\'t secure anything at\\nall or only verify servers. It is inherently insecure and can cause\\nissues depending on the setup of the system. Ziti is a distributed\\nsystem that abstracts away this security setup for both its internal\\nrouters and client SDKs. This setup allows application-specific\\nnetworking with strong identity verification, powerful policy\\nmanagement, flexible mesh routing, and more. The goal of this series is\\nto focus on bootstrapping trust. So in the\\n[last article](./part-05.bootstrapping-trust.md) we will come full\\ncircle and see how all of this relates to bootstrapping trust for Zero\\nTrust networks.\\n\\n---\\n\\nWritten By: Andrew Martinez  \\nJune 2020"},{"id":"/bootstrapping-trust/part-05.bootstrapping-trust","metadata":{"permalink":"/blog/bootstrapping-trust/part-05.bootstrapping-trust","source":"@site/blog/bootstrapping-trust/part-05.bootstrapping-trust.md","title":"Bootstrapping Trust","description":"Part 5 Bootstrapping Trust","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":5.735,"hasTruncateMarker":false,"authors":[{"name":"Andrew Martinez","title":"OpenZiti Maintainer","url":"https://github.com/andrewpmartinez","imageURL":"https://avatars.githubusercontent.com/u/199856?v=4","key":"andrewpmartinez"}],"frontMatter":{"authors":"andrewpmartinez"},"prevItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-04.certificate-authorities-and-chains-of-trust"},"nextItem":{"title":"Golang Aha! Moments","permalink":"/blog/golang-aha/article"}},"content":"## Part 5 Bootstrapping Trust\\n\\nIf you have read through the entire series up to here, welcome! If you\\nhave not, please consider reading the whole series:\\n\\n- [Part 1: Encryption Everywhere](./part-01.encryption-everywhere.md)\\n- [Part 2: A Primer On Public-Key Cryptography](./part-02.a-primer-on-public-key-cryptography.md)\\n- [Part 3: Certificates](./part-03.certificates.md)\\n- [Part 4: Certificate Authorities & Chains Of Trust](./part-04.certificate-authorities-and-chains-of-trust.md)\\n- [Part 5: Bootstrapping Trust](./part-05.bootstrapping-trust.md)\\n\\n### Ziti\\n\\nIn this series of articles, we are exploring bootstrapping trust, what\\nthat means, and how it enables Zero Trust security methodologies. Ziti\\nprovides a method to bootstrap trust via its enrollment process. For\\nZiti, the enrollment process is bootstrapping trust. This trust must be\\nin place as all connections in Ziti require verification. All identities\\nin Ziti have a key pair that identifies that individual. The enrollment\\nprocess abstracts the steps of setting up keys, certificates, CSRs, CAs,\\nand deploying them to the proper locations. In addition, the Ziti SDKs\\ncan be embedded within any application and enroll with a Ziti network in\\nthe exact same fashion to bootstrap trust as part of Ziti\'s Zero Trust\\nmodel.\\n\\n\\nZiti has a concept called the \\"Edge.\\" The Edge is a set of software\\nfeatures that sit on top of the \\"Fabric.\\" The Fabric is the core of each\\nZiti component, and it provides long haul mesh routing while the Edge\\nfocuses on enrolling Ziti components, managing access via policies, and\\nmaintaining the trust necessary to provide the foundation of a Zero\\nTrust network without the hassle of setting it up yourself. Together\\nthey are a powerful combination of optimized long haul routing and trust\\nmanagement.\\n\\n![Fabric Edge](./images/fabric-edge.png)\\n\\nA small scale example Ziti system appears as follows:\\n\\n![Ziti System](./images/ziti-system.png)\\n\\nZiti Edge has the concepts of identities for endpoint SDKs and routers.\\nBoth require certificates signed by a trusted CA. Ziti can generate the\\nPKI necessary to manage that trust. The PKI and its CAs will form the\\nbackbone of the trust system that Ziti will deploy for you. In the\\nsystem diagram above, the Ziti Controller will manage an intermediate CA\\nand a secure enrollment process that will bootstrap trust for each\\nrouter and SDK. After bootstrapping trust, the controller will maintain\\ndata to manage the entire life cycle of the certificates it generates.\\nThis life cycle encompasses all the concerns from part one of this\\nseries, including bootstrapping, revoking, renewing, and rotating keys.\\n\\nSo let us review the components a Ziti Controller must have to function:\\n\\n1. A CA (intermediate preferred)\\n2. A server certificate generated for the Controller\'s IP/hostname/etc.\\n   Signed by the CA or a public CA\\n3. A Ziti Controller configured and ready to run\\n\\nThis article series has touched on items one and two, but not three. For\\ninformation on how to configure a Ziti Controller refer to the Ziti\\ndocumentation repository on Github. You will also find details on how to\\nuse the Ziti CLI to generate the PKI necessary to start a Ziti network.\\nHowever, here is a simple command that will help get the controller\\nstarted.\\n\\n```\\n ziti pki create ca test1\\n ziti pki create server --dns myserver.com\\n```\\n\\n## Enrollment\\n\\nOnce a Ziti Controller is up and running, it is possible to create a new\\nidentity and enroll it. Behind the scenes, many things happen, but for\\nnow, let us focus on what an administrator would have to perform.\\n\\n1. Authenticate via the Ziti CLI, Ziti Admin Console (ZAC), or Edge REST\\n   API\\n2. Issue a request to create a new identity for an SDK or router\\n3. Receive an enrollment JWT Use the JWT on the enrolling device/server\\n   to enroll\\n\\nIn those steps, we have performed many complex interactions.\\n\\n- The enrolling identity:\\n  - validated the enrollment JWT cryptographically\\n  - validated the Ziti Controller as a suitable trust anchor\\n    cryptographically\\n  - bootstrapped its trust pool of CAs as additional trust anchors over\\n    a secure connection\\n  - generated a key pair\\n  - generated a CSR\\n- The controller has:\\n  - asserted its identity cryptographically\\n  - asserted the validity of the enrolling identity\\n  - provided a CA store of trust anchors\\n  - fulfilled the CSR request for the identity\\n\\nAll of these items are performed making no assumptions and securely\\nverifying each step. This process does not suffer from man-in-the-middle\\nattacks. It provides many benefits! Below is a detailed image of each\\nstep of the enrollment process.\\n\\n![Enrollment Full](./images/enrollment-full.png)\\n\\nLet\'s break those steps down:\\n\\n1. Via the Ziti CLI, ZAC, or Edge REST API the admin authenticates and\\n   requests to create an identity\\n2. The admin receives a JWT that is signed by the controller and is\\n   cryptographically verifiable. The JWT contains all the information\\n   for the enrolling device/server to contact the controller and verify\\n   its identity. It also includes a secret enrollment token.\\n3. The JWT is given to the enrolling device\\n4. The device parses the JWT, verifies all the information is present to\\n   enroll\\n5. The device retrieves the public certificate from the controller at\\n   the address specified in the JWT\\n6. The device confirms that the server is, in fact, the owner of the\\n   private key for that certificate\\n7. The device uses the retrieved certificate to verify the signature on\\n   the JWT\\n8. Verifies content has not changed\\n9. Verifies the issuing server is the server it is communicating with\\n10. Makes a secure connection to the server and requests the CAs to\\n    trust\\n11. The enrolling identity generates a key pair, if necessary, and a\\n    CSR. The CSR is submitted in a request with the JWT\'s enrollment\\n    token.\\n12. The controller verifies the CSR, verifies the enrollment token,\\n    verifies the client connection, and then returns the necessary\\n    signed certificates.\\n\\nAt the end of the process, which took four simple human steps, but\\nnumerous cryptographically secure software steps, the controller now has\\na record of the certificates issued to a specific identity. That\\nidentity now has certificates that can be used to make connections to\\nother enrolled Ziti components. All components in the system can verify\\nthe identity of any other Ziti component. At every step, every link is\\nverified. No individual piece of software blindly trusts any other for\\ninbound or outbound connections. Trust has been successfully\\nbootstrapped! Now we enter a maintenance window where trust has to be\\nverified continuously and maintained. The enrolled identity can now\\ninteract with the Ziti Controller to either function as a Ziti Router or\\nas Zero Trust network client.\\n\\n# Conclusion\\n\\nThank you for reading this far! If you completed the entire series, I\\nhope it has been helpful. Zero Trust is a complicated topic, and it\\nrequires a serious foundation in bootstrapping trust to get right.\\nHopefully, this series starts you on your way. If you have time, please\\ncheckout (Ziti)[https://github.com/openziti]! It is the Zero Trust\\nnetwork overlay solution that I have personally worked on and was the\\ninspiration for this series.\\n\\n---\\n\\nWritten By: Andrew Martinez  \\nJune 2020"},{"id":"/golang-aha/article","metadata":{"permalink":"/blog/golang-aha/article","source":"@site/blog/golang-aha/article.md","title":"Golang Aha! Moments","description":"Introduction","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":9.94,"hasTruncateMarker":false,"authors":[{"name":"Paul Lorenz","title":"OpenZiti Maintainer","url":"https://github.com/plorenz","imageURL":"https://avatars.githubusercontent.com/u/777993?v=4","key":"plorenz"}],"frontMatter":{"authors":"plorenz"},"prevItem":{"title":"Bootstrapping Trust","permalink":"/blog/bootstrapping-trust/part-05.bootstrapping-trust"},"nextItem":{"title":"Wildcard DNS Cheatsheet","permalink":"/blog/wildcard-dns/cheatsheet"}},"content":"## Introduction\\nAs we (the OpenZiti team) progressed on our Go journey, we\'ve stumbled on various\\nobstacles, settled on some best practices and hopefully gotten better at writing Go\\ncode. This document is meant to share some of the \'Aha!\' moments where we overcame \\nstumbling blocks and found solutions that sparked joy. \\nThis is intended both for new team members and for anyone in the go community who \\nmight be interested. We\'d be very happy to hear from others about their own \'aha\'\\nmoments and also how the solutions presented strike your sensibilities.\\n\\n## Channels\\nChannels are a core feature of go. As is typical of go, the channel API is small and\\nsimple, but provides a lot of power. \\n\\nIf you haven\'t read it yet, Dave Cheney\'s [Channel Axioms](https://dave.cheney.net/2014/03/19/channel-axioms)\\n is worth a look.\\n\\n## Closing Channels\\nClosing channels can be complicated. On the reader side things are generally uncomplicated.\\nA closed channel read will return immediately with the zero value and flag indicating that \\nit is closed.\\n\\n```\\nfunc main() {\\n\\tch := make(chan interface{}, 1)\\n\\tch <- \\"hello\\"\\n\\tval, ok := <- ch\\n\\tfmt.Printf(\\"%v, %v\\\\n\\", val, ok) // prints hello, true\\n\\tclose(ch)\\n\\tval, ok = <- ch\\n\\tfmt.Printf(\\"%v, %v\\\\n\\", val, ok) // prints <nil>, false\\n}\\n```\\n\\nOn the writer side, things can be more complicated. If you only have a single writer, \\nit can be responsible for closing the channel. This notifies any blocker readers that\\nthe channel is closed. However, if there are multiple writers, this won\'t work. Writing\\nto a closed channel will cause a panic. Closing an already closed channel will also \\ncause a panic. So, what do we do?\\n\\nThe main thing is to realize that we don\'t have to close the channel. We only have to\\nmake sure the readers and writers are safely notified that they should stop trying to\\nuse the channel. For this, we can use a second channel.\\n\\n```\\npackage main\\n\\nimport (\\n\\t\\"github.com/openziti/foundation/util/concurrenz\\"\\n\\t\\"github.com/pkg/errors\\"\\n)\\n\\ntype Queue struct {\\n\\tch          chan int\\n\\tcloseNotify chan struct{}\\n\\tclosed      concurrenz.AtomicBoolean\\n}\\n\\nfunc (self *Queue) Push(val int) error {\\n\\tselect {\\n\\tcase self.ch <- val:\\n\\t\\treturn nil\\n\\tcase <-self.closeNotify:\\n\\t\\treturn errors.New(\\"queue closed\\")\\n\\t}\\n}\\n\\nfunc (self *Queue) Pop() (int, error) {\\n\\tselect {\\n\\tcase val := <-self.ch:\\n\\t\\treturn val, nil\\n\\tcase <-self.closeNotify:\\n\\t\\treturn 0, errors.New(\\"queue closed\\")\\n\\t}\\n}\\n\\nfunc (self *Queue) Close() {\\n\\tif self.closed.CompareAndSwap(false, true) {\\n\\t\\tclose(self.closeNotify)\\n\\t}\\n}\\n```\\n\\nIf there are several entities which all need to shutdown together, they can even\\nshare a `closeNotify` channel.\\n\\nA variation on this would let readers drain the channel once it\'s closed. Because \\nselect case evaluation is random, we may not read a val from the channel once\\nthe close notify channel is closed. We can ensure that we return a value if it\'s \\navailable by modifying `Pop()` as follows:\\n\\n```\\nfunc (self *Queue) Pop() (int, error) {\\n\\tselect {\\n\\tcase val := <-self.ch:\\n\\t\\treturn val, nil\\n\\tcase <-self.closeNotify:\\n\\t\\tselect {\\n\\t\\tcase val := <-self.ch:\\n\\t\\t\\treturn val, nil\\n\\t\\tdefault:\\n\\t\\t\\treturn 0, errors.New(\\"queue closed\\")\\n\\t\\t}\\n\\t}\\n}\\n```\\n\\nPlaces used:\\n* https://github.com/openziti/channel/blob/main/impl.go (see rxer, txer)\\n\\n## Other Channel Uses\\nLet\'s look at how we can use channels in a few other ways.\\n\\n### Semaphores and Pools\\nBecause channels have a sized buffer and have well defined blocking behavior, \\ncreating a semaphore implementation is very straightforward. We can create a\\nchannel with a buffer of the size we want our semaphore to have. We can then\\nread and write from the channel to acquire and release the semaphore. \\n\\n```\\npackage concurrenz\\n\\nimport \\"time\\"\\n\\ntype Semaphore interface {\\n\\tAcquire()\\n\\tAcquireWithTimeout(t time.Duration) bool\\n\\tTryAcquire() bool\\n\\tRelease() bool\\n}\\n\\nfunc NewSemaphore(size int) Semaphore {\\n\\tresult := &semaphoreImpl{\\n\\t\\tc: make(chan struct{}, size),\\n\\t}\\n\\tfor result.Release() {\\n\\t}\\n\\treturn result\\n}\\n\\ntype semaphoreImpl struct {\\n\\tc chan struct{}\\n}\\n\\nfunc (self *semaphoreImpl) Acquire() {\\n\\t<-self.c\\n}\\n\\nfunc (self *semaphoreImpl) AcquireWithTimeout(t time.Duration) bool {\\n\\tselect {\\n\\tcase <-self.c:\\n\\t\\treturn true\\n\\tcase <-time.After(t):\\n\\t\\treturn false\\n\\t}\\n}\\n\\nfunc (self *semaphoreImpl) TryAcquire() bool {\\n\\tselect {\\n\\tcase <-self.c:\\n\\t\\treturn true\\n\\tdefault:\\n\\t\\treturn false\\n\\t}\\n}\\n\\nfunc (self *semaphoreImpl) Release() bool {\\n\\tselect {\\n\\tcase self.c <- struct{}{}:\\n\\t\\treturn true\\n\\tdefault:\\n\\t\\treturn false\\n\\t}\\n}\\n```\\n\\nWe could use mostly the same implementation for a resource pool. Instead of\\na channel of struct{}, we could have a channel of connections or buffers \\nthat are acquired and released.\\n\\n### Signal\\nWe can use channels as signals. In this example we have something running\\nperiodically, but we want to be able to trigger it to run sooner. With a \\nsingle element channel, we can notify a goroutine. By using `select` with\\n`default`, we can ensure that signalling code doesn\'t block and that the\\nreceiving side only gets a single signal per loop.\\n\\n\\n```\\npackage main\\n\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"github.com/openziti/foundation/util/concurrenz\\"\\n\\t\\"time\\"\\n)\\n\\nfunc NewWorker() *Worker {\\n\\tw := &Worker{\\n\\t\\tsignal:  make(chan struct{}, 1),\\n\\t}\\n\\tgo w.run()\\n\\treturn w\\n}\\n\\ntype Worker struct {\\n\\tsignal chan struct{}\\n\\tstopped concurrenz.AtomicBoolean\\n}\\n\\nfunc (self *Worker) run() {\\n\\tticker := time.NewTicker(time.Minute)\\n\\tdefer ticker.Stop()\\n\\n\\tfor !self.stopped.Get() {\\n\\t\\tselect {\\n\\t\\tcase <-ticker.C:\\n\\t\\t\\tself.work()\\n\\t\\tcase <-self.signal:\\n\\t\\t\\tself.work()\\n\\t\\t}\\n\\t}\\n}\\n\\nfunc (self *Worker) work() {\\n\\tif !self.stopped.Get() {\\n\\t\\tfmt.Println(\\"working hard\\")\\n\\t}\\n}\\n\\nfunc (self *Worker) RunNow() {\\n\\tselect {\\n\\tcase self.signal <- struct{}{}:\\n\\tdefault:\\n\\t}\\n}\\n```\\n\\n### Channel Loops and Event Handler\\n\\nWe often have a loop which is processing inputs from one or channel. Often we have a set of data\\nwe want to keep local to a single goroutine, so we don\'t have to use any synchronization or worry\\nabout cpu cache effects. We use channels to feed data to the goroutine and/or to trigger different\\nkinds of processing. A for with select loop can handle channels of different types. YOu can have\\na channel per type of work, or per type of data. Sometimes it can be convenient to consolidate things \\non a single channel, using an event API.\\n\\nHere\'s a simple example where the processor is maintaining some cached data which can be updated \\nexternally. Presumably the processor would be doing something with the cached data, but we\'ve left\\nthat out to focus on the pattern itself.\\n\\n```\\ntype Event interface {\\n\\t// events are passed the processor so they don\'t each have to include it\\n\\tHandle(*Processor)\\n}\\n\\ntype Processor struct {\\n\\tch          chan Event\\n\\tcloseNotify chan struct{}\\n\\tcache map[string]string\\n}\\n\\nfunc (self *Processor) run() {\\n\\tfor {\\n\\t\\tselect {\\n\\t\\tcase event := <-self.ch:\\n\\t\\t\\tevent.Handle(self)\\n\\t\\tcase <-self.closeNotify:\\n\\t\\t\\treturn\\n\\t\\t}\\n\\t}\\n}\\n\\nfunc (self *Processor) queueEvent(evt Event) {\\n\\tselect {\\n\\tcase self.ch <- evt:\\n\\tcase <-self.closeNotify:\\n\\t\\treturn\\n\\t}\\n}\\n\\nfunc (self *Processor) UpdateCache(k, v string) {\\n\\tself.queueEvent(&updateCache{key: k, value: v})\\n}\\n\\nfunc (self *Processor) Invalidate(k string) {\\n\\tself.queueEvent(invalidate(k))\\n}\\n\\ntype updateCache struct {\\n\\tkey string\\n\\tvalue string\\n}\\n\\nfunc (self *updateCache) Handle(p *Processor) {\\n\\tp.cache[self.key] = self.value\\n}\\n\\ntype invalidate string\\n\\nfunc (self invalidate) Handle(p *Processor) {\\n\\tdelete(p.cache, string(self))\\n}\\n```\\n\\n## Type Aliases\\nAs we demonstrated in the previous example we can alias a type and add functions to it, usually\\nto satisfy some interface.\\n\\n```\\ntype invalidate string\\n\\nfunc (self invalidate) Handle(p *Processor) {\\n        delete(p.cache, string(self))\\n}\\n```\\n\\nThis can be useful if we only have a single piece of data. Rather than wrapping it in a struct, \\nwe can just alias it and add our own funcs. \\n\\nThe main downside to this approach is that you have to unalias the data inside your functions\\nwhich can lead to code that is less clear. See for example this method from an `AtomicBoolean`\\nimplementation:\\n\\n```\\ntype AtomicBoolean int32\\n\\nfunc (ab *AtomicBoolean) Set(val bool) {\\n\\tatomic.StoreInt32((*int32)(ab), boolToInt(val))\\n}\\n\\n```\\n\\n### Function Type Aliases\\n\\nA go feature which can surprise developers is the ability to add function definitions to funcs.\\nThe Event API in the Processor example above could be extended as follows:\\n\\n```\\ntype Event interface {\\n\\tHandle(*Processor)\\n}\\n\\ntype EventF func(*Processor)\\n\\nfunc (self EventF) Handle(p *Processor) {\\n\\tself(p)\\n}\\n```\\n\\nThe `Invalidate` code could now be written as:\\n\\n```\\nfunc (self *Processor) Invalidate(k string) {\\n\\tself.queueEvent(EventF(func(processor *Processor) {\\n\\t\\tdelete(processor.cache, k)\\n\\t}))\\n}\\n```\\n\\nThe need for an `EventF` cast could be removed by adding a helper function.\\n\\n```\\nfunc (self *Processor) queueEventF(evt EventF) {\\n\\tself.queueEvent(evt)\\n}\\n\\nfunc (self *Processor) UpdateCache(k, v string) {\\n\\tself.queueEventF(func(processor *Processor) {\\n\\t\\tprocessor.cache[k] = v\\n\\t})\\n}\\n```\\n\\nI first encountered this style in the go http library where handlers can be defined\\nas structs implementing `Handler` or as functions matching `HandlerFunc`. This is\\nmost useful when you may have both heavy implementations which carry a lot of state\\nas well as very simple implementations which make more sense as a function.\\n\\nThe processor event channel could also be implemented in terms of pure functions, if\\nall event implementations are lightweight.\\n\\n## Interfaces\\n\\nA golang limitation that often trips people up is that packages cannot have circular\\ndependencies. There are a few ways to work around this, but the most common is to \\nintroduce interfaces in the more independent of the packages.\\n\\n## Errors \\n\\nIn some situations, go\'s error handling can be excessively verbose. Especially in \\ncases where you\'re doing a series of I/O operations, your code can look something\\nlike:\\n\\n\\n```\\nfunc WriteExample(w io.Writer) error {\\n\\tif _, err := w.Write([]byte(\\"one\\")); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif _, err := w.Write([]byte(\\"two\\")); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif _, err := w.Write([]byte(\\"three\\")); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif _, err := w.Write([]byte(\\"four\\")); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\treturn nil\\n}\\n```\\n\\nOne way to clean this up is to wrap the error in the operation and only check it at \\nthe end.\\n\\n```\\ntype WriterErr struct {\\n\\terr error\\n\\tw io.Writer\\n}\\n\\nfunc (self *WriterErr) Write(s string) {\\n\\tif self.err == nil {\\n\\t\\t_, self.err = self.w.Write([]byte(s))\\n\\t}\\n}\\n\\nfunc (self *WriterErr) Error() error {\\n\\treturn self.err\\n}\\n\\nfunc WriteExample2(w io.Writer) error {\\n\\twriter := &WriterErr{w: w}\\n\\twriter.Write(\\"one\\")\\n\\twriter.Write(\\"two\\")\\n\\twriter.Write(\\"three\\")\\n\\twriter.Write(\\"four\\")\\n\\treturn writer.Error()\\n}\\n```\\n\\nSee also: \\n* https://go.dev/blog/errors-are-values\\n* https://dave.cheney.net/2019/01/27/eliminate-error-handling-by-eliminating-errors\\n\\nNote: This pattern is could be viewed as an error monad implementation\\n\\n## Gotchas\\n\\n### Loop Variables[^cam]\\n\\nLike many other languages, it\'s possible to get into trouble when capturing loop variables,\\nboth via pointer references and via closures.\\n\\nThe following snippet will print out `world world` since the loop variable\\nremains constant throughout loop iteration.\\n\\n```\\nfunc main() {\\n\\tvar list []*string\\n\\tfor _, v := range []string {\\"hello\\", \\"world\\"} {\\n\\t\\tlist = append(list, &v)\\n\\t}\\n\\tfor _, v := range list {\\n\\t\\tfmt.Printf(\\"%v \\", *v)\\n\\t}\\n\\tfmt.Println()\\n}\\n```\\n\\nSimilarly, the following will output `second second`:\\n\\n```\\nfunc main() {\\n\\tfor _, v := range []string {\\"first\\", \\"second\\"} {\\n\\t\\tgo func() {\\n\\t\\t\\ttime.Sleep(100 * time.Millisecond)\\n\\t\\t\\tfmt.Printf(\\"%v \\", v)\\n\\t\\t}()\\n\\t}\\n\\ttime.Sleep(200 *time.Millisecond)\\n\\tfmt.Println()\\n}\\n```\\n\\n### Common Deadlock Causes\\n\\n#### Non-reentrant Mutexes\\n\\nUnlike in some other languages, the mutexes provide in the sync package are non-reentrant. So if your code\\ngrabs a lock and ends up calling back into something which gets the same lock, the goroutine will deadlock.\\nTypically, if you have to call back in, you\'d either need an indicator that the lock is already acquired,\\nor do the work in a new go-routine, depending on how independent the second access was.\\n\\n#### Channel Deadlocks\\n\\nIf you have a goroutine processing events from a channel, if the event submits an event back onto the channel,\\nthat can cause a deadlock, if the channel is not buffered, or if the buffer is full.\\n\\nFixes include:\\n* Running the next event in-line, if you can detect that you\'re already in the event processing context\\n* Ensure the channel is buffer is big enough that it will never block\\n* Handing the new event submission off to a new go-routine\\n\\nOne benefit to keeping your channel buffers at zero, is that you will detect these deadlocks very quickly.\\nIf you have a small buffer, then the deadlock may not be caught until the system is under load.\\n\\n[^cam]: Suggested by Cameron Otts"},{"id":"/wildcard-dns/cheatsheet","metadata":{"permalink":"/blog/wildcard-dns/cheatsheet","source":"@site/blog/wildcard-dns/cheatsheet.md","title":"Wildcard DNS Cheatsheet","description":"","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":1.71,"hasTruncateMarker":false,"authors":[{"name":"Clint Dovholuk","title":"OpenZiti Maintainer","url":"https://github.com/dovholuknf","imageURL":"https://avatars.githubusercontent.com/u/46322585?v=4","key":"dovholuknf"}],"frontMatter":{"authors":"dovholuknf"},"prevItem":{"title":"Golang Aha! Moments","permalink":"/blog/golang-aha/article"},"nextItem":{"title":"Zitification","permalink":"/blog/zitification"}},"content":"```text\\r\\n# ------------- start docker \\r\\ndocker-compose up\\r\\n\\r\\n# access the docker controller to create the necessary overlay\\r\\ndocker exec -it docker_ziti-controller_1 bash\\r\\n\\r\\n# ------------- log into the ziti cli\\r\\nzitiLogin\\r\\n\\r\\n# ------------- make at least one router to be public \\r\\nziti edge update edge-router ziti-edge-router -a \\"public\\"\\r\\n\\r\\n# ------------- allow all identities to use any edge router with the attribute \\"public\\"\\r\\nziti edge delete edge-router-policy all-endpoints-public-routers \\r\\nziti edge create edge-router-policy all-endpoints-public-routers --edge-router-roles \\"#public\\" --identity-roles \\"#all\\"\\r\\n\\r\\n# ------------- allows all edge-routers to access all services\\r\\nziti edge delete service-edge-router-policy all-routers-all-services\\r\\nziti edge create service-edge-router-policy all-routers-all-services --edge-router-roles \\"#all\\" --service-roles \\"#all\\"\\r\\n\\r\\nziti edge delete identity zititunneller-blue\\r\\nziti edge create identity device zititunneller-blue -o blue.jwt\\r\\nziti edge enroll blue.jwt\\r\\n\\r\\n# ------------- create a client - probably won\'t commit\\r\\nziti edge create identity device zdewclint -o zdewclint.jwt\\r\\n\\r\\n# from outside docker:\\r\\ndocker cp docker_ziti-controller_1:/openziti/zdewclint.jwt /mnt/v/temp/\\r\\n\\r\\n\\r\\n# attach a wholly different docker container with NET_ADMIN priv\\r\\n# so we can make a tun and provide access to the __blue__ network\\r\\ndocker run --cap-add=NET_ADMIN --device /dev/net/tun --name ziti-tunneler-blue --user root --network docker_zitiblue -v docker_ziti-fs:/openziti --rm -it openziti/quickstart /bin/bash\\r\\n\\r\\n# ------------- zititunneller-blue\\r\\napt install wget unzip\\r\\nwget https://github.com/openziti/ziti-tunnel-sdk-c/releases/latest/download/ziti-edge-tunnel-Linux_x86_64.zip\\r\\nunzip ziti-edge-tunnel-Linux_x86_64.zip\\r\\nclear\\r\\n./ziti-edge-tunnel run -i blue.json\\r\\n\\r\\n\\r\\nziti edge delete config \\"basic.dial\\"\\r\\nziti edge create config \\"basic.dial\\" intercept.v1 \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"simple.web.test\\"], \\"portRanges\\":[{\\"low\\":80, \\"high\\":80}]}\'\\r\\n\\r\\nziti edge delete config \\"basic.bind\\"\\r\\nziti edge create config \\"basic.bind\\" host.v1      \'{\\"protocol\\":\\"tcp\\", \\"address\\":\\"web-test-blue\\",\\"port\\":8000}\'\\r\\n\\r\\nziti edge delete service \\"basic.web.test.service\\"\\r\\nziti edge create service \\"basic.web.test.service\\" --configs \\"basic.bind,basic.dial\\"\\r\\n\\r\\nziti edge delete service-policy basic.web.test.service.bind.blue\\r\\nziti edge create service-policy basic.web.test.service.bind.blue Bind --service-roles \\"@basic.web.test.service\\" --identity-roles \\"@zititunneller-blue\\"\\r\\n\\r\\nziti edge delete service-policy basic.web.test.service.dial.zdew\\r\\nziti edge create service-policy basic.web.test.service.dial.zdew Dial --service-roles \\"@basic.web.test.service\\" --identity-roles \\"@zdewclint\\"\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nziti edge delete config \\"wildcard.dial\\"\\r\\nziti edge create config \\"wildcard.dial\\" intercept.v1 \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"*.blue\\"], \\"portRanges\\":[{\\"low\\":8000, \\"high\\":8000}]}\'\\r\\n\\r\\nziti edge delete config \\"wildcard.bind\\"\\r\\nziti edge create config \\"wildcard.bind\\" host.v1      \'{\\"forwardProtocol\\":true, \\"allowedProtocols\\":[\\"tcp\\",\\"udp\\"], \\"forwardAddress\\":true, \\"allowedAddresses\\":[\\"*.blue\\"], \\"forwardPort\\":true, \\"allowedPortRanges\\":[ {\\"low\\":1,\\"high\\":32768}] }\'\\r\\n\\r\\nziti edge delete service \\"wildcard.web.test.service\\"\\r\\nziti edge create service \\"wildcard.web.test.service\\" --configs \\"wildcard.bind,wildcard.dial\\"\\r\\n\\r\\nziti edge delete service-policy wildcard.web.test.service.bind.blue\\r\\nziti edge create service-policy wildcard.web.test.service.bind.blue Bind --service-roles \\"@wildcard.web.test.service\\" --identity-roles \\"@zititunneller-blue\\"\\r\\n\\r\\nziti edge delete service-policy wildcard.web.test.service.dial.zdew\\r\\nziti edge create service-policy wildcard.web.test.service.dial.zdew Dial --service-roles \\"@wildcard.web.test.service\\" --identity-roles \\"@zdewclint\\"\\r\\n```"},{"id":"/zitification","metadata":{"permalink":"/blog/zitification","source":"@site/blog/zitification/index.md","title":"Zitification","description":"\\"Zitification\\" or \\"zitifying\\" is the act of taking an application and incorporating a Ziti SDK into that application. Once an","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":1.185,"hasTruncateMarker":false,"authors":[{"name":"Clint Dovholuk","title":"OpenZiti Maintainer","url":"https://github.com/dovholuknf","imageURL":"https://avatars.githubusercontent.com/u/46322585?v=4","key":"dovholuknf"}],"frontMatter":{"authors":"dovholuknf"},"prevItem":{"title":"Wildcard DNS Cheatsheet","permalink":"/blog/wildcard-dns/cheatsheet"},"nextItem":{"title":"Zitifying Kubectl","permalink":"/blog/zitification/kubernetes"}},"content":"\\"Zitification\\" or \\"zitifying\\" is the act of taking an application and incorporating a Ziti SDK into that application. Once an\\r\\napplication has a Ziti SDK incorporated into it, that application can now access network resources securely from anywhere in\\r\\nthe world provided that the computer has internet access: NO VPN NEEDED, NO ADDITIONAL SOFTWARE NEEDED.\\r\\n\\r\\nIntegrating a Ziti SDK into your application and enrolling the application itself into a Ziti Network provides you with *\\r\\ntremendous* additional security. An application using a [Ziti Network][2] configured with a truly zero-trust mindset will be\\r\\n**IMMUNE** to the \\"expand/multiply\\" phases of classic [ransomware attacks][1]. As recent events have shown, it\'s probably not\\r\\na case of if your application will be attacked, but when.\\r\\n\\r\\nIn these posts we\'re going to explore how common applications can be \\"zitified\\". The first application we are going to focus\\r\\non will be `ssh` and it\'s corollary `scp`. At first, you might think, \\"why even bother\\" zitifying (of all things) `ssh`\\r\\nand `scp`? These applications are vital to system administration, and we have been using `ssh` and\\r\\n`scp` \\"safely\\" on the internet for years. Hopefully you\'re now interested enough to find out in the first post:\\r\\n[zitifying ssh][3]\\r\\n\\r\\nIf you\'d prefer to read about other zitifications, a running list of zitified apps will be updated below:\\r\\n\\r\\n* [ssh->zssh][3]\\r\\n* [scp->zscp][4]\\r\\n* [Kubernetes cluster manager - kubectl][5]\\r\\n\\r\\n[1]: https://netfoundry.io/ztna-ransomware/\\r\\n[2]: /docs/learn/introduction/\\r\\n[3]: /blog/zitification/zitifying-ssh/\\r\\n[4]: /blog/zitification/zitifying-scp/\\r\\n[5]: /blog/zitification/kubernetes/"},{"id":"/zitification/kubernetes","metadata":{"permalink":"/blog/zitification/kubernetes","source":"@site/blog/zitification/kubernetes/index.md","title":"Zitifying Kubectl","description":"The previous post showed how to use a zero trust overlay like Ziti for transferring files by zitifying scp. Next up in the list of zitifications is kubectl. Kubernetes is a container orchestration system. Its purpose is to deploy, scale, and manage the deployment containers. Containers are self-contained, pre-built images of software generally with a singular purpose. Developers often like using containers for various reasons. One major reason developers like containers is because it simplifies the deployment of the solutions they are developing. This is where Kubernetes starts to come into focus.","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":12.115,"hasTruncateMarker":false,"authors":[{"name":"Clint Dovholuk","title":"OpenZiti Maintainer","url":"https://github.com/dovholuknf","imageURL":"https://avatars.githubusercontent.com/u/46322585?v=4","key":"dovholuknf"}],"frontMatter":{"authors":"dovholuknf"},"prevItem":{"title":"Zitification","permalink":"/blog/zitification"},"nextItem":{"title":"Enable Prometheus to Scrape Anything from Anywhere","permalink":"/blog/zitification/prometheus/part1"}},"content":"The [previous post][1] showed how to use a zero trust overlay like Ziti for transferring files by zitifying `scp`. Next up in the list of zitifications is `kubectl`. [Kubernetes][2] is a container orchestration system. Its purpose is to deploy, scale, and manage the deployment containers. Containers are self-contained, pre-built images of software generally with a singular purpose. [Developers often like using containers for various reasons][13]. One major reason developers like containers is because it simplifies the deployment of the solutions they are developing. This is where Kubernetes starts to come into focus.\\r\\n\\r\\nIn this article we\'ll use a cloud provider to create a Kubernetes cluster to use. I\'m using Oracle OKE in this article but there are [numerous Kubernetes providers][14] and any of them will work but clearly the commands I\'m running here are Oracle specific. Once created we will then access the cluster three ways:\\r\\n\\r\\n1. Via the public Kubernetes API secured via mTLS. This is the default, out-of-the-box mechanism provided by Kubernetes.\\r\\n2. Via a tunneling app. I run Windows, so I\'ll use the Ziti Desktop Edge for Windows.\\r\\n3. Via a zitified `kubectl`. Here\'s where we\'ll get to see the power of a truly zitified application. We\'ll be able to access our cluster extremely securely using the Ziti overlay network without installing an additional agent. Once access to the cluster comes entirely from the [Ziti Network][8], we will be able to turn public access to the Kubernetes management API **off** entirely!\\r\\n\\r\\n***\\r\\n\\r\\n## About Kubernetes\\r\\n\\r\\nIf you are not already familiar with Kubernetes then it\'s probably best for you to stop reading and learn a little about it first. Though this article only expects you to understand the most rudimentary of commands, it won\'t teach you enough about Kubernetes to understand the what\'s and why\'s. Lots of documentation on this topic already exist and are just a search away in your search engine of choice.\\r\\n\\r\\nKubernetes itself is not a container engine, it\'s an orchestrator. This means that Kubernetes knows how to interface with container engines to perform deployments and management of workloads on the behalf of operators. This provides people with a common abstraction to use when doing this management and deployment. Interacting with the Kubernetes API is made easy by using the command-line tool: `kubectl`.\\r\\n\\r\\n[kubectl][4] provides numerous commands and utilities to interact with your Kubernetes cluster. It does this by creating REST requests to a well-known endpoint. This endpoint is a highly-valuable target as it is the entry-point to the cluster. Plenty of blogs exist already on the internet addressing how to secure this endpoint but in this post we\'ll take it one step further than ever before by removing the Kubernetes control plane from the internet entirely. Following that we will even go one step further by replacing the existing `kubectl` command with a zero-trust implementation leveraging the ziti golang sdk.\\r\\n\\r\\nIf you\'d prefer to watch a video that goes over the same content contained in the rest of this article you can go ahead and click here to watch.\\r\\n\\r\\n[![Secure Kubernetes](https://img.youtube.com/vi/CRoansolpR0/0.jpg)](https://youtu.be/CRoansolpR0)\\r\\n\\r\\n* * *\\r\\n\\r\\n## Setup\\r\\n\\r\\nBelow is an overview of the [Ziti Network][8] I created for this article. On the left you can see that the client, my computer, runs Windows 10. Inside Windows 10 I run linux and bash using Ubuntu via [Windows Subsystem For Linux (WSL)][5]. If you run Windows and don\'t have WSL installed I would encourage you to install and learn it!  In my bash shell I have downloaded the linux version of `kubectl` created by combining the Ziti Golang SDK into it. You can grab it from [this link][6] if you like or go check out [the code on GitHub][7] and build it yourself! :)\\r\\n\\r\\n### Solution Overview\\r\\n\\r\\n![private-kubernetes.svg](./private-kubernetes.svg)\\r\\n\\r\\n### Basic Ziti Setup\\r\\n\\r\\nTo accomplish our stated goals, we will need not only an existing [Ziti Network][8] but we\'ll also have to configure that network accordingly. Here\'s a list of the components necessary to deliver Kubernetes with our zero-trust network:\\r\\n\\r\\n1. A configuration for the `Bind` side of the service. This informs the identity within Kubernetes where to send traffic and how.\\r\\n2. A configuration for the `Dial` side of the service. This is strictly **only** necessary for tunneling apps. In this example, for the Ziti Desktop Edge for Windows and specifies what host and port will be intercepted on the machine running the stock `kubectl`. for Windows.\\r\\n3. The service itself which ties our polices mentioned above together.\\r\\n4. A `Bind` service-policy which specifies which identities are allowed to act as a \\"host\\" for the service (meaning an identity to send traffic to which knows where and how to offload that traffic). In our example this will be the `ziti-edge-tunnel` running in a Kubernetes pod.\\r\\n5. A `Dial` service-policy which specifies the identities allowed to access the service. This will be the identity using\\r\\n   `kubectl`.\\r\\n6. Create two identities - one for the `Bind` side of the service (deployed within the Kubernetes cluster) and one for the `Dial` or client side.\\r\\n\\r\\nHere are some example commands using the [ziti cli][9] which illustrate how to create these services. Some things of note worth mentioning. I\'m setting a variable to make my configuration easier. I reuse these code blocks a lot and by extracting some variables it makes it easy for me to delete/recreate services. First I set the `service_name`\\r\\nvariable. I use this variable in all the names of the Ziti objects I create just to make it more clear and obvious if I have to look back at my configuration again.\\r\\n\\r\\nSince I\'m going to be accessing my Kubernetes API which I\'ve deployed using the Oracle cloud I chose to use `k8s.oci`\\r\\nas my service name. When deployed by a cloud provider, the Kubernetes API is generated or updated with numerous SANS and IP address I can choose from to represent the `Dial` side which will be intercepted by the Ziti Desktop Edge for Windows. The Oracle cloud console informs me that the private IP of `10.0.0.6` was assigned to my cluster when I click on the \'Access Cluster\' button which is why I chose to use that value below. I could have chosen to use any of the DNS names provided by OKE. There are at least five I could choose from, all visible as SANS on the cert that the server returns: `kubernetes`, `kubernetes.default`, `kubernetes.default.svc`, `kubernetes.default.svc.cluster`\\r\\n, `kubernetes.default.svc.cluster.local`. I chose the IP since it\'s pretty obvious that it\'s an internal IP, not on my local network. Also worth pointing out is that I\'m mapping the port as well, changing it from the port that the server provides, 6443, to the common HTTPS port of 443 for the local intercept. With zitified `kubectl` we don\'t even need these intercepts, but we\'ll keep it here so that we can use the unmodified `kubectl` as well. Finally, these commands are all executed inside a bash shell since I\'m using WSL.\\r\\n\\r\\n#### Example Ziti CLI commands\\r\\n\\r\\n```bash\\r\\n# the name of the service\\r\\nservice_name=k8s.oci\\r\\n# the name of the identity you\'d like to see on the kubectl client\\r\\nthe_user_identity=\\"${service_name}\\".client\\r\\n# the name of the identity deployed into the kubernetes cluster\\r\\nthe_kubernetes_identity=\\"${service_name}\\".private\\r\\n\\r\\nziti edge create config \\"${service_name}\\"-host.v1 host.v1 \\\\\\r\\n    \'{\\"protocol\\":\\"tcp\\", \\"address\\":\\"10.0.0.6\\",\\"port\\":6443 }\'\\r\\n    \\r\\nziti edge create config \\"${service_name}\\"-client-config intercept.v1 \\\\\\r\\n    \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"10.0.0.6\\",\\"kubernetes\\"], \\"portRanges\\":[{\\"low\\":443, \\"high\\":443}]}\'\\r\\n    \\r\\nziti edge create service \\\\\\r\\n    \\"${service_name}\\" \\\\\\r\\n    --configs \\"${service_name}\\"-client-config,\\"${service_name}\\"-host.v1\\r\\n    \\r\\nziti edge create service-policy \\"${service_name}\\"-binding Bind \\\\\\r\\n    --service-roles \'@\'\\"${service_name}\\" \\\\\\r\\n    --identity-roles \'#\'\\"${service_name}\\"\'ServerEndpoints\'\\r\\n    \\r\\nziti edge create service-policy \\"${service_name}\\"-dialing Dial \\\\\\r\\n    --service-roles \'@\'\\"${service_name}\\" \\\\\\r\\n    --identity-roles \'#\'\\"${service_name}\\"\'ClientEndpoints\'\\r\\n    \\r\\nziti edge create identity device \\"${the_kubernetes_identity}\\" \\\\\\r\\n    -a \\"${service_name}\\"ServerEndpoints \\\\\\r\\n    -o \\"${the_kubernetes_identity}\\".jwt\\r\\n    \\r\\nziti edge create identity device \\"${the_user_identity}\\" \\\\\\r\\n    -a \\"${service_name}\\"ClientEndpoints \\\\\\r\\n    -o \\"${the_user_identity}\\".jwt\\r\\n```\\r\\n\\r\\n## Kubernetes Config Files\\r\\n\\r\\nOnce we have established the pieces of the [Ziti Network][8], we\'ll want to get the Kubernetes config files from OKE so that we can test access, make sure the cluster works etc. Oracle provides a CLI command which makes it pretty easy to get those config files called `oci`. As of this writing - the guide from [Oracle is here][10]. Once `oci` is installed and configured the Oracle cloud gives you very easy commands to run which will generate two files. One file will be for accessing the Kubernetes API through the public endpoint. The other will get you the file for private access. We\'re going to want both since we\'re on a journey here from \\"public API endpoint\\" to tunneling-app-based access, to the final stage of app-embedded zero-trust directly into `kubeztl`.\\r\\n\\r\\n### Getting the Kubernetes Config Files\\r\\n\\r\\nNotice that we are changing the file location output by these commands and they are being output as two separate Kubernetes config files. If you prefer to merge them all into one big config file and change contexts - feel free. I left them as separate files here because it provides a very clear separation as to which config is being used or modified.\\r\\n\\r\\n```bash\\r\\n# Get this value directly from Oracle\\r\\noci_cluster_id=\\"put-your-cluster-id-here\\"\\r\\n\\r\\noci ce cluster create-kubeconfig \\\\\\r\\n    --cluster-id ${oci_cluster_id} \\\\\\r\\n    --file /tmp/oci/config.oci.public \\\\\\r\\n    --region us-ashburn-1 \\\\\\r\\n    --token-version 2.0.0 \\\\\\r\\n    --kube-endpoint PUBLIC_ENDPOINT\\r\\nchmod 600 /tmp/oci/config.oci.public\\r\\n    \\r\\noci ce cluster create-kubeconfig \\\\\\r\\n    --cluster-id ${oci_cluster_id} \\\\\\r\\n    --file /tmp/oci/config.oci.private \\\\\\r\\n    --region us-ashburn-1 \\\\\\r\\n    --token-version 2.0.0 \\\\\\r\\n    --kube-endpoint PRIVATE_ENDPOINT\\r\\nchmod 600 /tmp/oci/config.oci.private\\r\\n```\\r\\n\\r\\n## Connecting the Pieces\\r\\n\\r\\nAt this point we should have all the pieces in place so that we can start putting them together to test the overall solution. In this section we\'ll access our public Kubernetes api to make sure it works. Then we\'ll install Ziti into the Kubernetes cluster and verify private access works. Finally we\'ll disable public access **entirely** and use the zitified `kubeztl` command to access the cluster with true, app-embedded zero-trust binary.\\r\\n\\r\\n### Testing the Public API\\r\\n\\r\\nThis step is very straight-forward for anyone who\'s used Kubernetes before. Issue the following commands, making sure the path is correct for your public Kubernetes config file, and verify Kubernetes works as expected.\\r\\n\\r\\n```bash\\r\\nexport KUBECONFIG=/tmp/oci/config.oci.public\\r\\nkubectl get pods -v6 --request-timeout=\'5s\'\\r\\nI1019 13:57:31.910962    3211 loader.go:372] Config loaded from file:  /tmp/oci/config.oci.public\\r\\nI1019 13:57:33.676047    3211 round_trippers.go:454] GET https://150.230.150.0:6443/api/v1/namespaces/default/pods?limit=500&timeout=5s 200 OK in 1752 milliseconds\\r\\nNAME                                        READY   STATUS    RESTARTS   AGE\\r\\n```\\r\\n\\r\\nIf your output looks something similar to the above (with or without the pods you expect to see) then great! That means your Kubernetes cluster is indeed up and running. Let\'s move on!\\r\\n\\r\\n#### Deploying Ziti to Kubernetes\\r\\n\\r\\nNext we\'ll grab a few lines from the excellent guide NetFoundry put out for integrating with Kubernetes. There\'s a section in that guide for [installing Ziti with Helm][11]. This comes down to just these steps:\\r\\n\\r\\n1. install the `helm` CLI tool [using this guide][12]\\r\\n2. add the NetFoundry helm repo: `helm repo add netfoundry https://netfoundry.github.io/charts/`\\r\\n3. locate the jwt file for the Kubernetes identity. If you followed the steps above the file will be named: `\\"${the_kubernetes_identity}\\".jwt` (make sure you replace the variable with the correct value)\\r\\n4. use the jwt to add Ziti: `helm install ziti-host netfoundry/ziti-host --set-file enrollmentToken=\\"${the_kubernetes_identity}\\".jwt` (again make sure you replace the variable name) If you need to, make sure you create a persistent volume. The ziti pod requires storage to store a secret.\\r\\n\\r\\n```bash\\r\\napiVersion: v1\\r\\nkind: PersistentVolume\\r\\nmetadata:\\r\\n  name: ziti-host-pv\\r\\n  labels:\\r\\n    type: local\\r\\nspec:\\r\\n  storageClassName: oci\\r\\n  capacity:\\r\\n    storage: 100Mi\\r\\n  accessModes:\\r\\n    - ReadWriteMany\\r\\n  hostPath:\\r\\n    path: \\"/netfoundry\\"\\r\\n```\\r\\n\\r\\n#### Add/Enroll the Client Identity\\r\\n\\r\\nNow consume the one time token (the jwt file) to enroll and create a client-side identity using the Ziti Desktop Edge for Windows (or MacOS or via the `ziti-edge-tunnel` if you prefer). Once you can see the identity in your tunneling app, you should be able to use the private kubernetes config file to access the same exact cluster. Remember though, we have mapped the port on the client side to use 443. That means you\'ll need to update your config file and change 6443 --\x3e 443. Now when you run `get pods` you\'ll see the ziti-host pod deployed:\\r\\n\\r\\n```bash\\r\\nexport KUBECONFIG=/tmp/oci/config.oci.private\\r\\nkubectl get pods\\r\\nNAME                        READY   STATUS    RESTARTS   AGE\\r\\nziti-host-976b84c66-kr4bc   1/1     Running   0          90m\\r\\n```\\r\\n\\r\\n## The Big Finale - Zitified kubectl\\r\\n\\r\\nIf you have made it this far, you\'ve seen us access the Kubernetes API via the public IP. We\'ve even accessed it via the private IP (which btw - is pretty cool in my opinion!). Now we\'re going to download the zitified kubectl command, turn off the public IP and even turn off the locally running tunneling app and still access the API!\\r\\n\\r\\n1. Disable the cluster\'s public IP address in OKE (go to the cluster in Oracle Cloud, click Edit and remove the public IP and click save)\\r\\n2. Turn off the Ziti Desktop Edge for Windows\\r\\n3. Build `kubeztl` from [the GitHub repo](https://github.com/openziti-test-kitchen/kubeztl)\\r\\n4. Use `kubeztl` to get pods!\\r\\n\\r\\n    ```bash\\r\\n    ./kubeztl -zConfig ./id.json -service k8s.oci get pods\\r\\n    NAME                        READY   STATUS    RESTARTS   AGE\\r\\n    ziti-host-976b84c66-kr4bc   1/1     Running   0          101m\\r\\n    ```\\r\\n\\r\\n### Modifying KUBECONFIG\\r\\n\\r\\nThe `kubeztl` command has also been modified to allow you to add the service name and config file directly into the file itself. This is convenient since you will not need to supply the ziti identity file, nor will you need to specify which service to use. Modifying the file is straight-forward. Open the config file, find the context listed under the contexts root and add two rows as shown here.\\r\\n\\r\\n```bash\\r\\ncontexts\\r\\n- context:\\r\\n    cluster: cluster-cjw4arxuolq\\r\\n    user: user-cjw4arxuolq\\r\\n    zConfig: /tmp/oci/k8s.id.json\\r\\n    service: k8s.oci\\r\\n```\\r\\n\\r\\nOnce done - you can now simply use the context the same way you have always - `kubeztl get pods`!\\r\\n\\r\\n```bash\\r\\n./kubeztl get pods\\r\\nNAME                        READY   STATUS    RESTARTS   AGE\\r\\nziti-host-976b84c66-kr4bc   1/1     Running   0          114m\\r\\n```\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nWe\'ve seen in this post how you can not only secure your Kubernetes API with the normal Kubernetes mechanisms. You can also take your Kubernetes API off the internet **ENTIRELY**. No need to deploy and maintain a special bastian node. Now by having a secure, zero-trust overlay in place you can safely and securely access your Kubernetes API without the fear of that public, high-value API getting attacked.\\r\\n\\r\\n![But Wait, There\'s More](https://i.imgur.com/JRBQMkN.jpg)\\r\\n\\r\\nOnce you\'ve deployed Ziti into the Kubernetes cluster you\'re not done there. Now you can also use Ziti to span cloud networks. You can use it to easily link private data centers or other private Kubernetes clusters all into one secure, zero-trust overlay network! Use Ziti to expose workloads that are **TRULY** private!  In future articles we might explore how we can bring Ziti to bear on these topics, stay tuned!\\r\\n***\\r\\n\\r\\n[1]: /blog/zitification/zitifying-scp/\\r\\n\\r\\n[2]: https://Kubernetes.io/\\r\\n\\r\\n[3]: ./private-kubernetes.svg\\r\\n\\r\\n[4]: https://Kubernetes.io/docs/reference/kubectl/overview/\\r\\n\\r\\n[5]: https://docs.microsoft.com/en-us/windows/wsl/install\\r\\n\\r\\n[6]: https://github.com/openziti-incubator/kubectl/releases/latest/download/kubectl-linux-amd64\\r\\n\\r\\n[7]: https://github.com/openziti-incubator/kubectl\\r\\n\\r\\n[8]: /docs/learn/introduction/\\r\\n\\r\\n[9]: https://github.com/openziti/ziti/releases/latest\\r\\n\\r\\n[10]: https://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm\\r\\n\\r\\n[11]: https://developer.netfoundry.io/guides/kubernetes/#install-ziti-with-helm\\r\\n\\r\\n[12]: https://helm.sh/docs/intro/install/\\r\\n\\r\\n[13]: https://appfleet.com/blog/10-reasons-why-developers-love-docker/\\r\\n\\r\\n[14]: https://www.google.com/search?q=kubernetes+cloud+providers&oq=kubernetes+cloud+providers"},{"id":"/zitification/prometheus/part1","metadata":{"permalink":"/blog/zitification/prometheus/part1","source":"@site/blog/zitification/prometheus/part1.md","title":"Enable Prometheus to Scrape Anything from Anywhere","description":"_This is part one of a three-part article. This article provides the necessary background and rationale of the series.","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":12.27,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Zitifying Kubectl","permalink":"/blog/zitification/kubernetes"},"nextItem":{"title":"Configuring OpenZiti to Enable Prometheus","permalink":"/blog/zitification/prometheus/part2"}},"content":"_This is part one of a three-part article. This article provides the necessary background and rationale of the series.\\r\\n[The next article](./part2.md) will be a detailed explanation of the actual steps necessary to implement the solution.\\r\\nIn [the final article](./part3.md), we will explore what we have just created and understand what was just created_\\r\\n\\r\\n---\\r\\n\\r\\n## The Problem With Pulling\\r\\n\\r\\nPrometheus is a server which wants to reach out and pull data from \\"scrape targets\\". It will generally do this using http requests. One\\r\\nproblem with this design is that these targets are often inaccessible, hidden from Prometheus behind a firewall.\\r\\n\\r\\nIf not hidden, it means some port was exposed on some network, thereby giving Prometheus the ability to pull the data it needs. Exposing\\r\\nthat port on a \\"trusted\\" network is a possible attack vector for bad actors. Exposing that port on the open internet (as is often the case)\\r\\nis an open invitation for attack. It\'s much better to keep these servers totally dark to all networks.\\r\\n\\r\\nOpenZiti solves this problem of reach elegantly and natively while also keeping your service dark to all networks. This gives an \\r\\nOpenZiti-enabled Prometheus the ability to literally scrape any target, anywhere. As long as the target is participates on an OpenZiti \\r\\noverlay network, and as long as the proper polices are in place allowing the traffic to flow, Prometheus will be able to reach out and \\r\\npull the data it needs from anything, anywhere.\\r\\n\\r\\nIt doesn\'t matter if the target is in some private cloud data center, some private data center protected by a corporate firewall, or heck\\r\\neven running inside my local docker environment! As long as the target participates on that OpenZiti Prometheus can scrape it! That sort of\\r\\nreach is impossible with classic networks.\\r\\n\\r\\n## Prometheus\\r\\n\\r\\n[Prometheus](https://prometheus.io/) is an incredibly popular [CNCF](https://www.cncf.io/projects/prometheus/)\\r\\nproject which has graduated the gauntlet of progressions to emerge as a \\"graduated\\" CNCF project. If you\'re familiar with Prometheus, there\\r\\nare probably a couple of reasons people mainly choose to deploy it:\\r\\nmetrics collection and visualization and alerting.\\r\\n\\r\\nPrometheus is also tremendously flexible. It has numerous available plugins and supports integrating with a wide number of systems.\\r\\nAccording\\r\\nto [this CNCF survey](https://www.cncf.io/blog/2022/03/08/cloud-native-observability-microsurvey-prometheus-leads-the-way-but-hurdles-remain-to-understanding-the-health-of-systems/)\\r\\n, Prometheus leads the pack when it comes to the project people go to for observability. Its popularity is probably because Prometheus is a\\r\\nCNCF project and is often considered the \\"default\\" solution to deploy on another wildly popular CNCF project\\r\\ncalled [Kubernetes](https://kubernetes.io). One interesting aspect of Prometheus is that it generally favors a poll-based approach to\\r\\nmetrics collection instead of a push-based model.\\r\\n\\r\\n### Poll-based?\\r\\n\\r\\nI don\'t know about you, but historically when I\'ve thought about a metrics collection agent, I tend to think of an agent that reads a log\\r\\nfile or some library that pushes rows into a giant data lake in the cloud. I don\'t generally think about a solution that implements\\r\\npoll-based metrics. Often, this is because the target of a poll-based collecting agent will probably be behind a firewall.\\r\\n\\r\\n![FW](./fw.png)\\r\\n\\r\\nAs you would expect, firewalls make it exceptionally difficult to implement a poll-based solution as firewalls have been known to make a\\r\\nhabit of preventing external actors from accessing random http servers behind it! After all, that is their primary function!\\r\\n\\r\\nThe Prometheus project makes [strong arguments](https://prometheus.io/docs/practices/pushing/) explaining the benefits of a poll-based\\r\\nsolution. They also realize that firewalls are important in creating a safe network and understand the challenges firewalls create for such\\r\\na solution. To deal with these situations, the project also provides a [PushGateway](https://prometheus.io/docs/instrumenting/pushing/).\\r\\nThis allows solutions to push their data to a location outbound of the firewall. Pushing data out of the firewall allows metrics and\\r\\nalerting to function without the worry (and maintenance heartache) of an open, inbound firewall hole.\\r\\n\\r\\n### Acceptable Risk\\r\\n\\r\\nPrometheus is often deployed into Kubernetes clusters, but it can be deployed anywhere. Taking the operational differences out of the\\r\\nequation, there is little difference between deploying Prometheus in a Kubernetes cluster and deploying it in one\'s data center. Once\\r\\ndeployed, the needs will be the same. Prometheus will need to be authorized to reach out and scrape the targets it needs to scrape. All too\\r\\noften, this is done with relatively open network permissions. Even though we all know it\'s not the most secure way of authorizing\\r\\nPrometheus, this is often considered \\"safe enough\\" because we deployed Prometheus into a zone considered \\"safe\\". Managing firewall rules to\\r\\nall the computers Prometheus needs access to, feels like an impossible feat. There are just too many.\\r\\n\\r\\nTo add to our acceptable risk, we will need to be able to access the Prometheus server in some way. We\'ll want to get at the UI, see the\\r\\ncharts and graphs and data it provides and use the server to its fullest. For that, we\'ll **of course**\\r\\nneed a hole in our firewall, or in the case of Kubernetes we will probably deploy some form of \\r\\n[Kubernetes Ingress Controller](https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/) to provide users access \\r\\nthe service.\\r\\n\\r\\nWhat we need are better and richer controls over our network. We need a better way of authorizing Prometheus without the hassle of\\r\\nmaintaining firewall rules on individual machines. We also need a way to do this across multiple clouds, multiple Kubernetes clusters and\\r\\nmultiple data centers. Let\'s see how OpenZiti can solve this problem while also enhancing our overall security.\\r\\n\\r\\n---\\r\\n\\r\\n## OpenZiti\\r\\n\\r\\nThe [OpenZiti](https://openziti.github.io) project allows us to solve all the problems outlined above. It is a fully-featured, zero trust\\r\\noverlay network and enables [zero trust networking principles](https://en.wikipedia.org/wiki/Zero_trust_security_model) to be applied \\r\\nanywhere. This includes bringing those zero trust principles directly into your application through one of the many SDKs provided \\r\\nby the project. Let\'s look at an example and see what a setup might look like before and after applying OpenZiti.\\r\\n\\r\\n### Overview\\r\\n\\r\\nLet\'s imagine that we have already deployed a solution using two Kubernetes clusters, ClusterA and ClusterB. It doesn\'t matter where the\\r\\nclusters are deployed. We are trying to illustrate a real-world situation where we have two separate Kubernetes clusters that we want to\\r\\nmanage. The clusters could be deployed in the same cloud provider, in a private data center, in different cloud providers, it really does\\r\\nnot matter. What is important, is that these clusters are available over the network. To enable access to the workloads inside the \\r\\nclusters, some form of Kubernetes ingress controller will be required on both clusters. In our example, we will have a workload deployed \\r\\nwhich exposes a prometheus scrape target we want Prometheus to monitor.\\r\\n\\r\\n#### Figure 1 - Before OpenZiti\\r\\n\\r\\n![Before OpenZiti](./kubernetes-prometheus-before.svg)\\r\\n\\r\\n### Taking a Closer Look\\r\\n\\r\\nLooking at the diagram above with a discerning eye towards security, there are some immediate observations one can make.\\r\\n\\r\\n#### Listening Ports\\r\\n\\r\\nOne observation we have already accepted from the overview, is that these clusters must be exposed via the internet. At first that doesn\'t \\r\\nseem like a big deal, we expose workloads like this to the internet all the time. This is a perfectly normal action, it\'s likely \\r\\ndone every day somewhere in the world. It\'s so common, we almost don\'t even think about it until the time comes when we **need** to \\r\\nthink about it. This ends up in an exposed port, listening somewhere in the world. There might be a firewall with complex rules to \\r\\nprotect this port, but it\'s just as likely that this isn\'t the case. People might need to access the resources inside these clusters \\r\\nfrom anywhere. \\r\\n\\r\\n#### Kubernetes API Exposed\\r\\n\\r\\nAnother observation is that the Kubernetes API is fully exposed to the internet. This API is a very high-value target and should be \\r\\nsecured as strongly as possible. That probably means yet another complex firewall rule to maintain.\\r\\n\\r\\n#### \\"Trusted\\" Intra-cluster Traffic\\r\\n\\r\\nThe final point to note is that the traffic within the cluster is considered safe. As mentioned above, the Prometheus server needs to be\\r\\nable to scrape the target workloads. That traffic is necessary to be considered safe. Also, notice that the pod for Prometheus contains a\\r\\ncontainer named \\"configmap-reload\\" which is used to trigger a webhook on the Prometheus server when the\\r\\n[Kubernetes config map](https://kubernetes.io/docs/concepts/configuration/configmap/) changes. This is necessary when changing the\\r\\nPrometheus config, adding new scrape configs etc.\\r\\n\\r\\n---\\r\\n\\r\\n---\\r\\nauthors: dovholuknf\\r\\n---\\r\\n\\r\\n### Applying Zero Trust Networking Principles Using OpenZiti\\r\\n\\r\\nNow that we understand the basic setup and understand some possible problems, let\'s see if OpenZiti can address one or more of these\\r\\nissues. When applying OpenZiti, the goal will be to strengthen our security posture for each of the above items.\\r\\n\\r\\n#### Figure 2 - After OpenZiti\\r\\n\\r\\n![after](./kubernetes-prometheus-after.svg)\\r\\n\\r\\n### Taking a Closer Look After OpenZiti\\r\\n\\r\\n#### No External Listening Ports\\r\\n\\r\\nWith a classic deployment as shown in the initial design, we know there will be ports exposed to the open internet. In an ideal scenario,\\r\\nthere would be absolutely no ports exposed on the open internet **nor** in the \\"trusted networking zone\\". It\'s immediately obvious after\\r\\napplying a solution using OpenZiti that those listening ports exposed by the Kubernetes ingress controller are no longer deployed and thus\\r\\nare no longer exposed to the internet. That\'s one attack vector eliminated. OpenZiti will initiate outbound mTLS connections among all the\\r\\nconstituent pieces of the overlay network. This means connections will begin inside the trusted network zone and only create outbound \\r\\nlinks. Once established, those connections can be used to safely transfer data between any participating edge node.\\r\\n\\r\\nThis capability really can\'t be emphasized enough. With OpenZiti and with applications that use an OpenZiti SDK, such as the ones shown,\\r\\nthere are no open ports to attack. This network is nearly impervious to the classical \\"land and expand\\" technique so many bad actors \\r\\nlook to exploit.\\r\\n\\r\\n#### Kubernetes API no Longer Exposed\\r\\n\\r\\nAnother significant benefit provided by OpenZiti is starting to come into focus. By having access to our clusters provided \\r\\nthrough OpenZiti, we can **stop exposing** the Kubernetes APIs for both clusters to the open internet. Prometheus will still be able to \\r\\nmonitor each Kubernetes cluster through the private Kubernetes network. Accessing Prometheus will be provided via OpenZiti, instead of \\r\\nusing a Kubernetes ingress controller. Later, we can ues the built-in capability Prometheus already provides to federate information \\r\\nfrom the clusters to a centralized, [zitified](/zitification/index.md) Prometheus server.\\r\\n\\r\\nOnce no longer exposed to the open internet, to maintain our Kubernetes cluster we could then turn to [zitified]\\r\\n(/zitification/index.md) tools. The OpenZiti project provides zitified versions of `kubectl` -\\r\\n[kubeztl](https://github.com/openziti-test-kitchen/kubectl) and `helm` -\\r\\n[helmz](https://github.com/openziti-test-kitchen/helm). Each of these tools have an OpenZiti SDK embedded inside them. This allows both \\r\\ntools to connect to the private Kubernetes API over the OpenZiti overlay network. To use them, you will need a strong, OpenZiti identity \\r\\nas well as be authorized to access the service. Also note that we\'re also not replacing the existing security constraints the \\r\\nKubernetes ecosystem already provides. You can (and should) still secure your Kubernetes clusters using namespaces, roles, etc. \\r\\n\\r\\nWe\'ll explore `kubeztl` and `helmz` in future articles.\\r\\n\\r\\n#### \\"Trusted\\" Intra-cluster Traffic\\r\\n\\r\\nLastly, let\'s turn our eyes toward the traffic running inside the Kubernetes cluster. Pay attention to the lines in orange and the lines in\\r\\ndark blue. Orange lines represent \\"private\\" traffic, traffic that needs to traverse the private network space.\\r\\n\\r\\nAt this point we cannot send traffic to the Kubernetes API via the overlay network. The Kubernetes API doesn\'t have an OpenZiti SDK \\r\\nembedded within it. That means when we deploy Prometheus into ClusterA and ClusterB to monitor the cluster, Prometheus will be forced to \\r\\nconnect to a port exposed on the cluster\'s underlay network. Still, while not ideal, we have greatly improved the overall security \\r\\nposture of the cluster. We\'re no longer able to access the Kubernetes API without first gaining access to the zero trust overlay \\r\\nnetwork. Accessing the Kubernetes API will also require the identity to be properly authorized to access the service attaching to the \\r\\nKubernetes API. \\r\\n\\r\\nLet\'s now focus on ClusterA. It contains a Prometheus server that decided against listening on the OpenZiti overlay. This means it\\r\\nwill need to expose ports to the Kubernetes underlay network. The container inside the Prometheus pod will watch for configmap \\r\\nchanges. To trigger the webhook, it will be forced to send unauthenticated webhook traffic to the Prometheus server on the underlay \\r\\nnetwork in order to trigger the config to reload.\\r\\n\\r\\nStill, accessing this cluster and the listening Prometheus server will require being on the OpenZiti overlay. Also, this Prometheus \\r\\nserver does have an OpenZiti SDK built into it. We also deployed the \\"reflectz\\" workload with an OpenZiti SDK built into it as well. \\r\\nThat means the Prometheus server must scrape the \\"reflectz\\" workload exclusively over the OpenZiti overlay. **Only** authorized \\r\\nidentities can access that scrape data.\\r\\n\\r\\nContrast ClusterA with ClusterB. ClusterB deployed a Prometheus server with an embedded OpenZiti SDK and chose to provide its services\\r\\nexclusively on the OpenZiti overlay. We\'ve also deployed a zitified \\"reflectz\\" workload here. Notice how little traffic traverses the \\r\\nKubernetes cluster underlay network. The only traffic which needs to traverse the cluster\'s underlay network in ClusterB is the traffic \\r\\nwhich monitors the Kubernetes API. All other traffic in the cluster is now secured by the OpenZiti overlay network. You will\\r\\nneed a strong identity, and you will need to be authorized on the overlay before even being allowed to connect to the target service.\\r\\n\\r\\n## OpenZiti-Enabled Prometheus\\r\\n\\r\\nWe are now coming to the final piece of the puzzle. We have protected both Kubernetes clusters using OpenZiti. Now we want to bring all \\r\\nthis data back to a centralized Prometheus server to make it easier on our user base. To do this, we\'ll again deploy an OpenZiti-enabled\\r\\nPrometheus server. This time we don\'t care where it is deployed except that we know we are not deploying it into either of the Kubernetes\\r\\nclusters we are already using. Since the Prometheus servers are all now accessible via the overlay network, we can literally deploy our \\r\\nserver anywhere in the world. It could be on development server, it could be deployed in some other cloud, it could be deployed in our \\r\\nprivate data center. Because it\'s part of the overlay network, it no longer matters where we deploy the server. Wherever deployed, \\r\\nall it will need is outbound internet access, a strong identity, and access and authorization to services defined in the OpenZiti overlay \\r\\nnetwork. Once that\'s done, OpenZiti will take care of the rest.\\r\\n\\r\\nIf you have made it this far you\'re might want to try all this for yourself. The [next article](./part2.md) will go into the details\\r\\nnecessary to implement this solution. When complete you\'ll be able to deploy a zitified version of Prometheus and give Prometheus the power\\r\\nto scrape anything from anywhere using OpenZiti."},{"id":"/zitification/prometheus/part2","metadata":{"permalink":"/blog/zitification/prometheus/part2","source":"@site/blog/zitification/prometheus/part2.md","title":"Configuring OpenZiti to Enable Prometheus","description":"_This is part two of a three-part article. This article provides the technical deep dive into the steps necessary to implement the vision","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":19.14,"hasTruncateMarker":false,"authors":[{"name":"Clint Dovholuk","title":"OpenZiti Maintainer","url":"https://github.com/dovholuknf","imageURL":"https://avatars.githubusercontent.com/u/46322585?v=4","key":"dovholuknf"}],"frontMatter":{"authors":"dovholuknf"},"prevItem":{"title":"Enable Prometheus to Scrape Anything from Anywhere","permalink":"/blog/zitification/prometheus/part1"},"nextItem":{"title":"Scraping Anything, Anywhere in Action","permalink":"/blog/zitification/prometheus/part3"}},"content":"_This is part two of a three-part article. This article provides the technical deep dive into the steps necessary to implement the vision\\r\\noutlined in [part one](./part1.md). This article will be heavy on OpenZiti CLI commands, explaining what we are doing to configure the \\r\\noverlay network, and why. In [the final article](./part3.md), we will explore what we have just created and understand what was just \\r\\ncreated_\\r\\n\\r\\n---\\r\\n\\r\\n## Goals\\r\\n* Incredibly easy to deploy Prometheus servers\\r\\n* No ports exposed to the internet\\r\\n* Prometheus servers can be deployed listening on the overlay, not on the underlay\\r\\n* Private Kubernetes API\\r\\n\\r\\n## Zitified Prometheus\\r\\n\\r\\nAs described in [the previous article](./part1.md), Prometheus really prefers to be able to gather metrics from the targets it is\\r\\nmonitoring. When the target is behind a firewall, you will be left with two choices.\\r\\n![superhero](https://github.com/openziti/branding/raw/main/images/ziggy/svg/Ziggy%20The%20Superhero.svg)\\r\\nYou can choose to open a hole in the firewall granting access (a generally bad idea), or you can use a PushGateway. Even if you choose to\\r\\nuse the PushGateway, Prometheus will still need to be able to access and pull from the PushGateway so you\'ll still need some port open and\\r\\nlistening for Prometheus to collect data.\\r\\n\\r\\nWhat we really want is to enable Prometheus to scrape data from targets without needing to expose any ports to the internet. It would be **\\r\\neven better** if we didn\'t have to expose any ports at all, even to the local \\"trusted\\" network. This capability is something that is \\r\\nunique to an OpenZiti-enabled application. You can take an OpenZiti SDK and embed it into your application, and give your app zero trust \\r\\nsuperpowers! If we take an OpenZiti SDK and embed it into Prometheus, we can give Prometheus the superpower of invisibility and \\r\\naddressability. Embedding an OpenZiti SDK produces a [zitified](/zitification/index.md) version of Prometheus. With an \\r\\nOpenZiti-powered Prometheus, no ports need to be open.\\r\\n\\r\\nThe OpenZiti project has done the work to produce an OpenZiti-enabled version of Prometheus. It\'s also entirely open source. Check it out\\r\\nfrom the OpenZiti Test Kitchen hosted on GitHub https://github.com/openziti-test-kitchen/prometheus.\\r\\n\\r\\n## Solution Overview\\r\\n\\r\\nAs you\'ll recall from [part1](./part1.md), we are trying to use Prometheus to monitor workloads in two different \\r\\nKubernetes clusters. We are going to deploy one cluster which will represent a first step of an OpenZiti solution. \\r\\nIt will use a Prometheus sever which is OpenZiti-enabled, but it will still listen on the underlay network and be \\r\\navailable to local devices on an ip:port. This Prometheus server will use OpenZiti to scrape targets which \\r\\nare available anywhere on the OpenZiti overlay network and we\'ll refer to this as \\"ClusterA\\".\\r\\n\\r\\nWe\'ll also deploy a second OpenZiti-enabled Prometheus server, in a totally separate Kubernetes cluster. This \\r\\nPrometheus server will **not** listen on an ip:port. Instead, it will listen exclusively on the OpenZiti overlay. \\r\\nThis Prometheus server will have no ports available to attack and will only be accessible via a properly authorized \\r\\nand authenticated OpenZiti client. This will be our \\"ClusterB\\"\\r\\n\\r\\nFinally, we\'ll stand up a third Prometheus server and use it to federate metrics back to a \\"central\\" Prometheus \\r\\nserver. This emulates what one might do to provide a central location for humans to go to in order to visualize data \\r\\nor use the Prometheus server. We won\'t care where this is deployed, we\'ll actually deploy it in locally and then \\r\\nmove it to a private server in AWS just to show how easy it that is. \\r\\n\\r\\nThis is what the solution we\'ll build looks like:\\r\\n![after](./kubernetes-prometheus-after.svg)\\r\\n\\r\\n---\\r\\n\\r\\n## Digging In\\r\\n\\r\\nLet\'s get to work and build this solution. We\'ll need some legwork done first. \\r\\n\\r\\n> [!NOTE]\\r\\n> It\'s going to get deep in this article with CLI commands. You\'ll see what the OpenZiti objects are that get created and learn why. \\r\\n> You might not want to replicate the solution on your own and instead are looking for \\"the big reveal\\". If that describes you, just \\r\\n> skim this article lightly and get on to [part3](./part3.md). In part 3 we\'ll explore the deployed solution and see what makes it so \\r\\n> interesting and cool.\\r\\n\\r\\n### Prerequisites\\r\\n\\r\\n![construction worker](https://github.com/openziti/branding/raw/main/images/ziggy/svg/Ziggy%20The%20Construction%20Worker.svg)\\r\\n\\r\\n* You have an OpenZiti overlay network available. If not, for this scenario you will want to use \\r\\n[\\"host your own\\"](/docs/learn/quickstarts/network/hosted). You\'ll also want to have the ziti cli tool on your path\\r\\n* Two Kubernetes clusters provisioned\\r\\n* Necessary tooling installed and available on the path\\r\\n  * kubectl\\r\\n  * helm\\r\\n* bash/zsh shell - tested in bash and some commands will use variables. If you use another shell, change accordingly\\r\\n* a machine with [docker installed](https://docs.docker.com/get-docker/) to run the final Prometheus sever on (your local machine is fine)\\r\\n* Ziti Desktop Edge installed on the development machine. I use \\r\\n[Ziti Desktop Edge for Windows](https://github.com/openziti/desktop-edge-win/releases/latest/).\\r\\n* A temporary folder exists to house files as we need them: /tmp/prometheus\\r\\n\\r\\n---\\r\\n\\r\\n## ClusterA - Using `ziti-host`\\r\\n\\r\\n![clusterA](./clusterA.svg)\\r\\n\\r\\nWe start with an empty OpenZiti network, and two empty Kubernetes clusters. Let\'s start by populating ClusterA. We will deploy three \\r\\npods into this Kubernetes cluster. When done, the Kubernetes cluster will look similar to the image to the right.\\r\\n\\r\\n* Pod 1. **ziti-host**. This pod will provide what is effectively the equivalent of a Kubernetes ingress controller. We\'ll install this \\r\\n  using helm from a NetFoundry provided chart\\r\\n* Pod 2. **prometheuz**. This pod will be our Prometheus server with OpenZiti embedded in it. We won\'t use OpenZiti to listen on the \\r\\n  overlay network. Instead, we will follow a more traditional model of listening on the underlay at a known ip:port combination. We\'ll \\r\\n  install this pod using a chart from the OpenZiti charts repository.\\r\\n* Pod 3. **reflectz**. This pod represents the workload which we want to monitor. This is another chart provided by the OpenZiti chart \\r\\n  repository and will also be installed with helm. If you are interested in viewing the source code for this project you can find it on \\r\\n  [GitHub here](https://github.com/nf-npieros/sdk-golang/tree/feature/reflect-prometheus)\\r\\n\\r\\n> [!NOTE]\\r\\n> Running the ziti cli commands shown below as shown will expect you to have the ziti binary on your path. Also it is expected that all \\r\\n> the commands run will run from the same \\"development\\" machine with the expected tools available. Reach out on discourse if you get stuck.\\r\\n\\r\\n### Pod 1 - `ziti-host`\\r\\n\\r\\nWe will start off deploying Pod 1, ziti-host, to provide access to Kubernetes ClusterA.  The ziti-host pod will require a single \\r\\nidentity to be provisioned. We will use a shortened name for the cluster and we\'ll embed that name into the identity to make it easier \\r\\nfor us to understand what identity we provisioned and why, should we ever need to reference these identities later.  We\'ll refer to \\r\\nClusterA as simply \\"kubeA\\". Let\'s make the identity now. Notice we are also passing the \\"-a\\" attribute during creation to add a role \\r\\nattribute to the identity of `kubeA.services`. This will be used later when setting up policies.\\r\\n\\r\\n#### Create the Identity\\r\\n\\r\\n```text\\r\\nziti edge create identity device kubeA.ziti.id -o /tmp/prometheus/kubeA.ziti.id.jwt -a \\"kubeA.services\\"\\r\\n```\\r\\n\\r\\nYou should see confirmation output such as:\\r\\n\\r\\n```text\\r\\nNew identity kubeA.ziti.id created with id: BeyyFUZFDR\\r\\nEnrollment expires at 2022-04-22T01:18:53.402Z\\r\\n```\\r\\n#### Deploy `ziti-host` into ClusterA\\r\\n\\r\\nOnce created, we can use helm to install the `ziti-host` pod. The jwt is a one-use token and will be useless after being consumed by \\r\\n`ziti-host`. As this is probably your first time running this helm chart, you will need to install it. The command is idempotent to \\r\\nrunning it over and over is of no concern. Run the following:\\r\\n\\r\\n```text\\r\\nhelm repo add netfoundry https://netfoundry.github.io/charts/\\r\\nhelm repo update\\r\\nhelm install ziti-host netfoundry/ziti-host --set-file enrollmentToken=\\"/tmp/prometheus/kubeA.ziti.id.jwt\\"\\r\\n```\\r\\n\\r\\nYou will see the confirmation output from helm. Now when you look at your Kubernetes cluster with `kubectl`, you will see a pod deployed:\\r\\n\\r\\n```text\\r\\nkubectl get pods\\r\\nNAME                        READY   STATUS    RESTARTS   AGE\\r\\nziti-host-db55b5c4b-rpc7f   1/1     Running   0          2m40s\\r\\n```\\r\\n\\r\\nAwesome, we have our first deployed pod. It\'s useless at the moment as we have defined no services, nor authorized any services. Right \\r\\nnow there\'s nothing to connect to, so we can simply move on and install the next pod, `reflectz`.\\r\\n\\r\\n### Pod 2 - `reflectz`\\r\\n\\r\\nThe first pod we want to have access to is the `reflectz` pod. It is a workload we will deploy that will do two things. First, it will \\r\\nlisten on the OpenZiti overlay network for connections. When a connection is made, and when bytes are sent, the workload sill simply \\r\\nreturn back to the caller whatever was sent to it adding \\"you sent me: \\" to the payload. It\'s not much, but it\'s a demo after all. The \\r\\nsecond service provided is a scrape target for Prometheus. There is one metric exposed by `reflectz` we will care about, the total number of connections established to this workload. This pod also needs an identity provisioned, and this time around we will also provision some services. We will also use the `ziti` cli to enroll this identity. This helm chart wants you to provide an enrolled identity as part of the helm command. Let\'s do all this now.\\r\\n\\r\\n#### Create and Enroll the Identity\\r\\n\\r\\n```text\\r\\nziti edge create identity user kubeA.reflect.id -o /tmp/prometheus/kubeA.reflect.id.jwt\\r\\nziti edge enroll /tmp/prometheus/kubeA.reflect.id.jwt -o /tmp/prometheus/kubeA.reflect.id.json\\r\\n```\\r\\n\\r\\n#### Create Configs and Services (including Tunneling-based Access)\\r\\n\\r\\nThe `reflectz` chart also needs two services to be declared and specified at the time of the helm chart installation. We will want to be \\r\\nable to test the service to ensure they work. To enable testing the services, we will create two configs of type `intercept.v1`. This \\r\\nwill allow identities using tunneling apps to be able to access the services, this is how we\'ll verify the services work. Make the \\r\\nconfigs and services now.\\r\\n\\r\\n```text\\r\\n# create intercept configs for the two services\\r\\nziti edge create config kubeA.reflect.svc-intercept.v1 intercept.v1 \\\\\\r\\n  \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"kubeA.reflect.svc.ziti\\"],\\"portRanges\\":[{\\"low\\":80, \\"high\\":80}]}\'\\r\\nziti edge create config \\"kubeA.reflect.svc-intercept.v1.scrape\\" intercept.v1 \\\\\\r\\n  \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"kubeA.reflect.scrape.svc.ziti\\"], \\"portRanges\\":[{\\"low\\":80, \\"high\\":80}], \\"dialOptions\\":{\\"identity\\":\\"kubeA.reflect.id\\"}}\'\\r\\n\\r\\n# create the two services\\r\\nziti edge create service \\"kubeA.reflect.svc\\" --configs \\"kubeA.reflect.svc-intercept.v1\\" -a \\"kubeA.reflect.svc.services\\"\\r\\nziti edge create service \\"kubeA.reflect.scrape.svc\\" --configs \\"kubeA.reflect.svc-intercept.v1.scrape\\"\\r\\n```\\r\\n\\r\\n#### Authorize the Workload and Clients\\r\\n\\r\\nServices are not valuable if there are no identities which can use the services. The identity used in the helm installation will also \\r\\nneed to be authorized to bind these services. Tunneling apps will need to be authorized to dial these services but also remember \\r\\nPrometheus servers will need to be able to dial these services too. We will now create `service-policies` to authorize the tunneling \\r\\nclients, Prometheus scrapes, and the `reflectz` server to bind the service.\\r\\n\\r\\n```text\\r\\n# create the bind service policies and authorize the reflect id to bind these services\\r\\nziti edge create service-policy \\"kubeA.reflect.svc.bind\\" Bind \\\\\\r\\n  --service-roles \\"@kubeA.reflect.svc\\" --identity-roles \\"@kubeA.reflect.id\\"\\r\\nziti edge create service-policy \\"kubeA.reflect.scrape.svc.bind\\" Bind \\\\\\r\\n  --service-roles \\"@kubeA.reflect.scrape.svc\\" --identity-roles \\"@kubeA.reflect.id\\"\\r\\n\\r\\n# create the dial service policies and authorize the reflect id to bind these services\\r\\nziti edge create service-policy \\"kubeA.reflect.svc.dial\\" Dial \\\\\\r\\n  --service-roles \\"@kubeA.reflect.svc\\" --identity-roles \\"#reflectz-clients\\"\\r\\nziti edge create service-policy \\"kubeA.reflect.svc.dial.scrape\\" Dial \\\\\\r\\n  --service-roles \\"@kubeA.reflect.scrape.svc\\" --identity-roles \\"#reflectz-clients\\"\\r\\n```\\r\\n\\r\\n#### Deploy `reflectz`\\r\\n\\r\\nWith the identity enrolled, we can now install the helm chart from openziti, and install our demonstration workload: `reflectz`. Notice \\r\\nthat to deploy `reflectz` we need to supply an identity to the workload using `--set-file reflectIdentity`. This identity will be used \\r\\nto \'Bind\' the services the workload exposes. We also need to define what the service names are we want to allow that identity to bind. \\r\\nWe do this using the `--set serviceName` and `--set prometheusServiceName` flags.\\r\\n\\r\\n```text\\r\\nhelm repo add openziti-test-kitchen https://openziti-test-kitchen.github.io/helm-charts/\\r\\nhelm repo update\\r\\nhelm install reflectz openziti-test-kitchen/reflect \\\\\\r\\n  --set-file reflectIdentity=\\"/tmp/prometheus/kubeA.reflect.id.json\\" \\\\\\r\\n  --set serviceName=\\"kubeA.reflect.svc\\" \\\\\\r\\n  --set prometheusServiceName=\\"kubeA.reflect.scrape.svc\\"\\r\\n```\\r\\n\\r\\nAfter running helm, pod 2 should be up and running. Let\'s take a look using `kubectl`\\r\\n\\r\\n```text\\r\\nkubectl get pods\\r\\nNAME                        READY   STATUS    RESTARTS   AGE\\r\\nreflectz-775bd45d86-4sjwh   1/1     Running   0          7s\\r\\nziti-host-db55b5c4b-rpc7f   1/1     Running   0          4m\\r\\n```\\r\\n\\r\\n### Pod 3 - `Prometheuz`\\r\\n\\r\\n#### Overlay Work - Setting Up OpenZiti\\r\\n\\r\\nNow we have access to the cluster and a workload to monitor. Now we want to deploy Prometheus and monitor this workload. Remember that \\r\\nthe workload only exposes a scrape target over the OpenZiti overlay. For Prometheus to be able to scrape the workload, even when \\r\\nresident inside the Kubernetes cluster (!), Prometheus will need to be OpenZiti-enabled. That will require a few things. We\'ll need a \\r\\nnew identity for Prometheus, we\'ll need to authorize Prometheus to access the workload\'s target, and we\'ll need to configure Prometheus \\r\\nto scrape that workload. When we create this identity we\'ll assign two attributes. The `reflectz-clients` attribute gives this identity \\r\\nthe ability to dial the two services defined above. The `prometheus-clients` attribute is currently unused. We\'ll put that to use later, \\r\\nbut we can define it now.\\r\\n\\r\\n#### Create and Enroll the Identity\\r\\n\\r\\n```text\\r\\n# create and enroll the identity.\\r\\nziti edge create identity user kubeA.prometheus.id -o /tmp/prometheus/kubeA.prometheus.id.jwt -a \\"reflectz-clients\\",\\"prometheus-clients\\"\\r\\nziti edge enroll /tmp/prometheus/kubeA.prometheus.id.jwt -o /tmp/prometheus/kubeA.prometheus.id.json\\r\\n```\\r\\n\\r\\n#### Create Configs and Services (including Tunneling-based Access)\\r\\n\\r\\n```text\\r\\n# create the config and service for the kubeA prometheus server\\r\\nziti edge create config \\"kubeA.prometheus.svc-intercept.v1\\" intercept.v1 \\\\\\r\\n  \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"kubeA.prometheus.svc\\"],\\"portRanges\\":[{\\"low\\":80, \\"high\\":80}]}\'\\r\\nziti edge create config \\"kubeA.prometheus.svc-host.v1\\" host.v1 \\\\\\r\\n  \'{\\"protocol\\":\\"tcp\\", \\"address\\":\\"prometheuz-prometheus-server\\",\\"port\\":80}\'\\r\\nziti edge create service \\"kubeA.prometheus.svc\\" \\\\\\r\\n  --configs \\"kubeA.prometheus.svc-intercept.v1\\",\\"kubeA.prometheus.svc-host.v1\\"\\r\\n```\\r\\n\\r\\n#### Authorize the Workload and Clients\\r\\n\\r\\n```text\\r\\n# grant the prometheus clients the ability to dial the service and the kubeA.prometheus.id the ability to bind\\r\\nziti edge create service-policy \\"kubeA.prometheus.svc.dial\\" Dial \\\\\\r\\n  --service-roles \\"@kubeA.prometheus.svc\\" \\\\\\r\\n  --identity-roles \\"#prometheus-clients\\"\\r\\nziti edge create service-policy \\"kubeA.prometheus.svc.bind\\" Bind \\\\\\r\\n  --service-roles \\"@kubeA.prometheus.svc\\" \\\\\\r\\n  --identity-roles \\"@kubeA.ziti.id\\"\\r\\n```\\r\\n\\r\\n#### Deploying `Prometheuz` {#deploying-prometheuz-1}\\r\\n\\r\\nWith our services, configs and service-policies in place we are now ready to start our Prometheus server. Remember this server will not \\r\\nlisten on a the OpenZiti overlay. It\'s going to listen exclusively on the underlay. We are still exploring OpenZiti, and we are not yet\\r\\ncomfortable deploying our Prometheus server dark. We\'ll change this soon, don\'t worry. For now, we\'ll imagine that we\'re still \\r\\nevaluating the tech and chose to deploy it on the underlay, not on the overlay. \\r\\n\\r\\nAlthough Prometheus is listening on the underlay, we **have** deployed our workload listening on the overlay network. It won\'t be \\r\\navailable on the underlay at all. The workload has **no listening ports**. This means that we\'ll still need an OpenZiti-enabled \\r\\nPrometheus to access and scrape that workload. To do this we\'ll use helm, and use a chart provided by the OpenZiti charts repo.\\r\\n\\r\\nSome interesting things to notice below in the `helm install` command. Notice that we are passing helm two `--set` parameters. These \\r\\nparameters are informing the helm chart that the Prometheus server is not \\"zitified\\", meaning it will be accessible via the underlay \\r\\nnetwork. We\'re also passing one `--set-file` parameter to tell Prometheus what identity we want to be stored in the pod (as a secret). \\r\\nThis secret will be used when we configure Prometheus to scrape the workload. Go ahead and run this command now and run \\r\\n`kubectl get pods` until all the containers are running.\\r\\n\\r\\n```text\\r\\nhelm repo add openziti-test-kitchen https://openziti-test-kitchen.github.io/helm-charts/\\r\\nhelm repo update\\r\\nhelm install prometheuz openziti-test-kitchen/prometheus \\\\\\r\\n  --set server.ziti.enabled=\\"false\\" \\\\\\r\\n  --set-file server.scrape.id.contents=\\"/tmp/prometheus/kubeA.prometheus.id.json\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## ClusterB - Fully Dark\\r\\n\\r\\n![clusterB](./clusterB.svg)\\r\\n\\r\\nNow that we have deployed our first Kubernetes cluster, it\'s now time to deploy the second Kubernetes cluster. This time, we are going \\r\\nto keep our entire deployment **fully dark**! There will be no listening ports, not even local to the Kubernetes cluster itself. To get \\r\\nany traffic to this Prometheus server, you will need a strong identity and need to be authorized on the OpenZiti overlay. When complete, \\r\\nClusterB will look like the image to the right.\\r\\n\\r\\nThis time, \\"Pod1\\" will be the `reflectz` workload. Since this is a **fully dark** deployment, listening entirely on the OpenZiti overlay,\\r\\nwe won\'t need a `ziti-host` pod. Remember, in ClusterA `ziti-host` is used to provide internal access to the Kubernetes cluster via the\\r\\nOpenZiti overlay. It\'s similar in role to an ingress controller, but doesn\'t require you to expose your workloads to the internet. While\\r\\nthat\'s pretty good we want to go fully dark this time. We\'ll have no `ziti-host`. We\'ll only need to deploy two pods: `reflectz` and \\r\\n`prometheuz`.\\r\\n\\r\\nThe good news is that the same commands you\'ve run for ClusterA, will mostly be used for ClusterB. You will want to beware that where \\r\\nyou used \\"kubeA\\" before, make sure you change those to \\"kubeB\\". There will be small other changes we\'ll make along the way too, we\'ll see \\r\\nthose changes and explain them below. \\r\\n\\r\\n### Pod1 - `reflectz`\\r\\n\\r\\nThe `relectz` workload we\'ll deploy for ClusterB will be nearly identical to the ClusterA workload. We will create a service for \\r\\nthe actual \'reflect\' service. We will make a service for Prometheus to scrape the workload. We\'ll also need another identity, so \\r\\nwe\'ll create that identity, authorize it to bind the services, and authorize clients to access the workload. Since this process is very \\r\\nsimilar to what we did for ClusterA, there\'s not much to explain. Setup ClusterB\'s `reflectz` now.\\r\\n\\r\\n#### Create the Identity\\r\\n```text\\r\\nziti edge create identity user kubeB.reflect.id -o /tmp/prometheus/kubeB.reflect.id.jwt\\r\\nziti edge enroll /tmp/prometheus/kubeB.reflect.id.jwt -o /tmp/prometheus/kubeB.reflect.id.json\\r\\n```\\r\\n\\r\\n#### Create Configs and Services (including Tunneling-based Access)\\r\\n```text\\r\\n# create intercept configs for the two services\\r\\nziti edge create config kubeB.reflect.svc-intercept.v1 intercept.v1 \\\\\\r\\n  \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"kubeB.reflect.svc.ziti\\"],\\"portRanges\\":[{\\"low\\":80, \\"high\\":80}]}\'\\r\\nziti edge create config \\"kubeB.reflect.svc-intercept.v1.scrape\\" intercept.v1 \\\\\\r\\n  \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"kubeB.reflect.scrape.svc.ziti\\"], \\"portRanges\\":[{\\"low\\":80, \\"high\\":80}], \\"dialOptions\\":{\\"identity\\":\\"kubeB.reflect.id\\"}}\'\\r\\n\\r\\n# create the two services\\r\\nziti edge create service \\"kubeB.reflect.svc\\" --configs \\"kubeB.reflect.svc-intercept.v1\\" -a \\"kubeB.reflect.svc.services\\"\\r\\nziti edge create service \\"kubeB.reflect.scrape.svc\\" --configs \\"kubeB.reflect.svc-intercept.v1.scrape\\"\\r\\n```\\r\\n\\r\\n#### Authorize the Workload to Bind the Services\\r\\n```text\\r\\n# create the bind service policies and authorize the reflect id to bind these services\\r\\nziti edge create service-policy \\"kubeB.reflect.svc.bind\\" Bind \\\\\\r\\n  --service-roles \\"@kubeB.reflect.svc\\" --identity-roles \\"@kubeB.reflect.id\\"\\r\\nziti edge create service-policy \\"kubeB.reflect.scrape.svc.bind\\" Bind \\\\\\r\\n  --service-roles \\"@kubeB.reflect.scrape.svc\\" --identity-roles \\"@kubeB.reflect.id\\"\\r\\n```\\r\\n\\r\\n#### Authorize Clients to Access the Services\\r\\n```text\\r\\n# create the dial service policies and authorize the reflect id to bind these services\\r\\nziti edge create service-policy \\"kubeB.reflect.svc.dial\\" Dial \\\\\\r\\n  --service-roles \\"@kubeB.reflect.svc\\" --identity-roles \\"#reflectz-clients\\"\\r\\nziti edge create service-policy \\"kubeB.reflect.svc.dial.scrape\\" Dial \\\\\\r\\n  --service-roles \\"@kubeB.reflect.scrape.svc\\" --identity-roles \\"#reflectz-clients\\"\\r\\n  ```\\r\\n\\r\\n#### Deploy `reflectz` {#deploy-reflectz-1}\\r\\n```text\\r\\nhelm repo add openziti-test-kitchen https://openziti-test-kitchen.github.io/helm-charts/\\r\\nhelm repo update\\r\\nhelm install reflectz openziti-test-kitchen/reflect \\\\\\r\\n  --set-file reflectIdentity=\\"/tmp/prometheus/kubeB.reflect.id.json\\" \\\\\\r\\n  --set serviceName=\\"kubeB.reflect.svc\\" \\\\\\r\\n  --set prometheusServiceName=\\"kubeB.reflect.scrape.svc\\"\\r\\n```\\r\\n\\r\\n### Pod 2 - `Prometheuz`\\r\\n\\r\\nFor ClusterB we want `Prometheuz` to be **totally dark**. It will exclusively listen on the OpenZiti overlay and there will be no \\r\\nlistening ports on the underlay. We will need another identity, of course, and most of the configuration and commands appear the same on \\r\\nthe surface with very subtle differences. We\'ll explore these differences as we go. In this section we\'ll be making an identity, **one \\r\\nconfig** (a difference from the ClusterA install), a service, and two service-policies. Let\'s get to it.\\r\\n\\r\\n#### Create the Identity\\r\\n```text\\r\\nziti edge create identity user kubeB.prometheus.id -o /tmp/prometheus/kubeB.prometheus.id.jwt -a \\"reflectz-clients\\",\\"prometheus-clients\\"\\r\\nziti edge enroll /tmp/prometheus/kubeB.prometheus.id.jwt -o /tmp/prometheus/kubeB.prometheus.id.json\\r\\n```\\r\\n\\r\\n#### Create **One** Config and Service\\r\\nHere\'s a difference from ClusterA. Since we are going to listen on the OpenZiti overlay, we are not installing `ziti-host`. That means \\r\\nwe don\'t need to create a `host.v1` config. A `host.v1` config is necessary for services which have a \'Bind\' configuration and are being \\r\\nbound by a tunneling application. We\'re not doing that, here Prometheus will \'Bind\' this service, thus we don\'t need that `host.v1` \\r\\nconfig.\\r\\n```text\\r\\n# create the config and service for the kubeB prometheus server\\r\\nziti edge create config \\"kubeB.prometheus.svc-intercept.v1\\" intercept.v1 \\\\\\r\\n  \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"kubeB.prometheus.svc\\"],\\"portRanges\\":[{\\"low\\":80, \\"high\\":80}], \\"dialOptions\\": {\\"identity\\":\\"kubeB.prometheus.id\\"}}\'\\r\\n# no need for the host.v1 config\\r\\nziti edge create service \\"kubeB.prometheus.svc\\" \\\\\\r\\n  --configs \\"kubeB.prometheus.svc-intercept.v1\\"\\r\\n```\\r\\n\\r\\n#### Authorize Clients and Prometheus to Bind the Service\\r\\n\\r\\nAt first, these commands appear identical. You need to look very closely to notice the difference between these command and the ones we \\r\\nran for ClusterA, other than the obvious changes from \\"kubeA\\" to \\"kubeB\\". Pay close attention to the supplied `--identity-roles` for the \\r\\nbind policy specified below. With ClusterA, we did not have Prometheus listen on the overlay and we allowed Prometheus to listen on the \\r\\nunderlay. That meant we needed to deploy `ziti-host` into that cluster to provide access to the service, and that means the service had \\r\\nto be bound by the `ziti-host` identity.\\r\\n\\r\\nHere we are flipping that script. We are allowing Prometheus to bind this service! That means we\'ll need to authorize the \\r\\n`kubeB.prometheus.id` to be able to bind the service.\\r\\n\\r\\n```text\\r\\n# grant the prometheus clients the ability to dial the service and the kubeB.prometheus.id the ability to bind\\r\\nziti edge create service-policy \\"kubeB.prometheus.svc.dial\\" Dial \\\\\\r\\n  --service-roles \\"@kubeB.prometheus.svc\\" \\\\\\r\\n  --identity-roles \\"#prometheus-clients\\"\\r\\nziti edge create service-policy \\"kubeB.prometheus.svc.bind\\" Bind \\\\\\r\\n  --service-roles \\"@kubeB.prometheus.svc\\" \\\\\\r\\n  --identity-roles \\"@kubeB.prometheus.id\\"\\r\\n```\\r\\n\\r\\n#### Deploying `Prometheuz`\\r\\n\\r\\nAt this point we have the OpenZiti overlay all configured. What\'s left, is to deploy Prometheus into ClusterB. This command is substantially\\r\\ndifferent from what we ran while deploying Prometheus into ClusterA. You\'ll see that we need to supply two other identities for this\\r\\ninstallation. Remember, Prometheus will be entirely dark once deployed into ClusterB, listening only on the OpenZiti overlay. The container\\r\\nin the pod which monitors configmap changes won\'t be able to trigger a webhook using the underlay! This `configmap-reloadz` is a second\\r\\n\\"zitification\\" we didn\'t realize we were deploying in ClusterA, because we did not need it. We need it for ClusterB.\\r\\n\\r\\nYou\'ll see for configmapReload we need to supply the identity which the container will use to hit the Prometheus webhook. We do that by \\r\\npassing `--set-file configmapReload.ziti.id.contents=\\"/tmp/prometheus/kubeB.prometheus.id.json\\"`. Then we\'ll supply the service which \\r\\n`configmap-reloadz` will dial, and we\'ll also specify what identity we expect to be hosting the service.\\r\\n\\r\\nNext you\'ll see we need to supply the identity to the Prometheus server we want to allow to listen on the OpenZiti overlay (\\r\\n`-set-file server.ziti.id.contents`). Similar to `configmap-reloadz` we will also specify the service and identity name to bind.\\r\\n\\r\\nFinally, to allow the server to scrape targets we need to supply a final identity which will be used when scraping targets with\\r\\n`--set-file server.scrape.id.contents`.\\r\\n\\r\\nYou\'ll notice for simplicities sake, we are using the same identity for all three needs which is perfectly fine. If you wanted to use a \\r\\ndifferent identity, you could. That choice is up to you. To keep it simple we just authorized this identity for all these purposes.\\r\\n\\r\\n```text\\r\\n# install prometheus\\r\\nhelm repo add openziti-test-kitchen https://openziti-test-kitchen.github.io/helm-charts/\\r\\nhelm repo update\\r\\nhelm install prometheuz openziti-test-kitchen/prometheus \\\\\\r\\n  --set-file configmapReload.ziti.id.contents=\\"/tmp/prometheus/kubeB.prometheus.id.json\\" \\\\\\r\\n       --set configmapReload.ziti.targetService=\\"kubeB.prometheus.svc\\" \\\\\\r\\n       --set configmapReload.ziti.targetIdentity=\\"kubeB.prometheus.id\\" \\\\\\r\\n  --set-file server.ziti.id.contents=\\"/tmp/prometheus/kubeB.prometheus.id.json\\" \\\\\\r\\n       --set server.ziti.service=\\"kubeB.prometheus.svc\\" \\\\\\r\\n       --set server.ziti.identity=\\"kubeB.prometheus.id\\" \\\\\\r\\n  --set-file server.scrape.id.contents=\\"/tmp/prometheus/kubeB.prometheus.id.json\\"\\r\\n```\\r\\n\\r\\n## What\'s Next\\r\\n\\r\\nIn this article we\'ve done a lot of OpenZiti CLI work, run some `kubectl` and `helm` commands but we still haven\'t explored what it is \\r\\nwe are building and why it\'s so cool. We\'ll do that in the [last, and final](./part3.md) article. Hopefully, the payoff for you will be \\r\\nas rewarding as it was for me while building this article series.\\r\\n\\r\\n---\\r\\n\\r\\n#### Addendum - a Quicker Start\\r\\n\\r\\nAll the commands above are also available in github as `.sh` scripts. If you would prefer, you can clone the \\r\\n[ziti-doc repository](https://github.com/openziti/ziti-doc) and access the scripts from the path mentioned below. \\"Cleanup\\" scripts are \\r\\nprovided if desired. \\r\\n\\r\\n```text\\r\\n${checkout_root}/docusaurus/blog/zitification/prometheus/scripts\\r\\n```"},{"id":"/zitification/prometheus/part3","metadata":{"permalink":"/blog/zitification/prometheus/part3","source":"@site/blog/zitification/prometheus/part3.md","title":"Scraping Anything, Anywhere in Action","description":"_This is part three of a three-part article. This article builds on the previous two articles. Here we will take a look at what we built","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":11.73,"hasTruncateMarker":false,"authors":[{"name":"Clint Dovholuk","title":"OpenZiti Maintainer","url":"https://github.com/dovholuknf","imageURL":"https://avatars.githubusercontent.com/u/46322585?v=4","key":"dovholuknf"}],"frontMatter":{"authors":"dovholuknf"},"prevItem":{"title":"Configuring OpenZiti to Enable Prometheus","permalink":"/blog/zitification/prometheus/part2"},"nextItem":{"title":"Zitifying SCP","permalink":"/blog/zitification/zitifying-scp"}},"content":"_This is part three of a three-part article. This article builds on the previous two articles. Here we will take a look at what we built \\r\\nand use it to explore the power of a zitified Prometheus. See [part one](./part1.md) for the necessary background about the series. See \\r\\n[part two](./part2.md) for detailed instructions covering how to setup the environment you\'re about to explore_\\r\\n\\r\\n## The Payoff\\r\\n\\r\\nOk. Here it is. We are at the end of the series and here is where we\'ll put it all together and really start to understand the sort of \\r\\ninnovations you can create when you zitify an application. As a reminder, we are working with [Prometheus](https://prometheus.io/), a \\r\\nCNCF project which we will use to monitor a workload deployed in two separate [Kubernetes](https://kubernetes.io) clusters. To save you \\r\\nfrom flipping back to a previous article, here is what that solution looks like.\\r\\n\\r\\n![overview](./kubernetes-prometheus-after.svg)\\r\\n\\r\\nNow we are ready to start using our Prometheus servers. We\'ll use our OpenZiti overlay network to connect to a workload which will \\r\\ngenerate a metric we want to display in Prometheus. We\'ll then configure Prometheus to scrape the workload and put it on a graph to \\r\\nprove it works. Once that\'s complete, we\'ll play around with the setup and see if we really can scrape anything, anywhere. Let\'s begin.\\r\\n\\r\\n## Developer Access\\r\\n\\r\\nIn the [previous article](./part2.md), we established our entire solution using the OpenZiti overlay, `kubectl` and `helm`. We saw \\r\\neverything get installed and it all \\"seems to work\\". But how do we **know** it works?  Let\'s provision an identity for yourself now and \\r\\nlet\'s enroll it in your local tunneling app and find out. Go out and get [a tunneling client](/docs/learn/core-concepts/clients/choose) running \\r\\nlocally. Once you have that installed, provision an identity and enroll it with your tunneling client. \\r\\n\\r\\n```text\\r\\nziti edge create identity user dev.client -a \\"prometheus-clients\\",\\"reflectz-clients\\"\\r\\n```\\r\\n\\r\\nYou should have access to six total services when this identity is enrolled:\\r\\n\\r\\n```text\\r\\nService Name: kubeA.prometheus.svc\\r\\n   Intercept: kubeA.prometheus.svc:80\\r\\nService Name: kubeA.reflect.svc\\r\\n   Intercept: kubeA.reflect.svc.ziti:80\\r\\nService Name: kubeA.reflect.scrape.svc\\r\\n   Intercept: kubeA.reflect.scrape.svc.ziti:80\\r\\n\\r\\nService Name: kubeB.prometheus.svc\\r\\n   Intercept: kubeB.prometheus.svc:80\\r\\nService Name: kubeB.reflect.svc\\r\\n   Intercept: kubeB.reflect.svc.ziti:80\\r\\nService Name: kubeB.reflect.scrape.svc\\r\\n   Intercept: kubeB.reflect.scrape.svc.ziti:80\\r\\n```\\r\\n\\r\\n## ClusterA\\r\\n\\r\\nWith your developer access you should be able to navigate your browser to http://kubea.prometheus.svc/targets. \\r\\n\\r\\n> [!NOTE]\\r\\n> We won\'t dwell on this for long in this article but notice that this is showing off another superpower of OpenZiti, private DNS. \\r\\n> Notice that you were able to browse to a totally fictitious domain name: kubea.prometheus.svc. \\".svc\\" is **not** a legitimate top level \\r\\n> domain. \\r\\n> [Look at the full list of top level domains starting with S](https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#S). You \\r\\n> won\'t find \\".svc\\" on that list at this time\\r\\n\\r\\n![kubea.prom.init](./kubea.prom.init.png)\\r\\n\\r\\nYou should see the following. You might have noticed that the chart deployed has a few other containers we have not discussed yet. We\'ll \\r\\nnot go into those containers in this article. What\'s important is that this Prometheus server has a few targets already for us to access. \\r\\nNeat, but this isn\'t what we want to actually monitor.\\r\\n\\r\\nWhat we really want to monitor is the workload we deployed: `reflectz`. We can do this by editing the Prometheus configmap using \\r\\n`kubectl`. Let\'s go ahead and do this now:\\r\\n\\r\\n```text\\r\\nkubectl edit cm prometheuz-prometheus-server\\r\\n```\\r\\n\\r\\nThis will open an editor in your terminal and allow you to update the config map for the pod. Once the editor is open, find the section \\r\\nlabeled \\"scrape_config\\" and add the following entry:\\r\\n\\r\\n```text\\r\\n    - job_name: \'kubeA.reflectz\'\\r\\n      scrape_interval: 5s\\r\\n      honor_labels: true\\r\\n      scheme: \'ziti\'\\r\\n      params:\\r\\n        \'match[]\':\\r\\n          - \'{job!=\\"\\"}\'\\r\\n        \'ziti-config\':\\r\\n          - \'/etc/prometheus/scrape.json\'\\r\\n      static_configs:\\r\\n        - targets:\\r\\n          - \'kubeA.reflect.scrape.svc-kubeA.reflect.id\'\\r\\n```\\r\\n\\r\\nThis is yaml and yaml is sensitive to spaces. The block above is properly indented for the config that the helm chart installs. You \\r\\nshould be able to simply copy it and add it under the scrape_config. Remember, there is a `configmap-reload` container in \\r\\nthe pod which monitors the configmap. On successful edit, this container will notice and will issue a web hook to the \\r\\n`prometheus-server` container. The trigger is not immediate, don\'t worry if it takes a while. It can take around a minute for the \\r\\ntrigger to fire. \\r\\n\\r\\nWhile we wait for the trigger, let\'s explain what this is doing. This is informing the Prometheus server to monitor a workload which can \\r\\nbe found at the provided target of `kubeA.reflect.scrape.svc-kubeA.reflect.id`. Notice that no port is included in this target, and also \\r\\nnotice that this is a very strange looking FQDN. That\'s because this is a zitified version of Prometheus. We have extended Prometheus to \\r\\nunderstand a \\"scheme\\" of `ziti`. When we configure this job with a scheme of ziti, we can then supply targets to the job which represent \\r\\nan OpenZiti service.  We need to supply the `ziti-config` node with the path to the identity we want Prometheus to use to issue the \\r\\nscrape. This will always be `/etc/prometheus/scrape.json` at this time. Should the community desire it, we can look into changing the \\r\\nlocation of the identity.\\r\\n\\r\\nIf you would like to tail the `configmap-reloadz` container, you can issue this one liner. This will instruct `kubectl` to tail the logs \\r\\nfrom `configmap-reloadz`. \\r\\n\\r\\n```text\\r\\npod=$(kubectl get pods | grep server | cut -d \\" \\" -f1); echo POD: $pod; kubectl logs -f \\"$pod\\" prometheus-server-configmap-reload\\r\\n```\\r\\n\\r\\nWhen the trigger happens for ClusterA you will see a message like the one below. Notice that `configmap-reloadz` is using the underlay \\r\\nnetwork: `http://127.0.0.1:9090/-/reload`\\r\\n\\r\\n```text\\r\\n2022/04/23 20:01:23 config map updated\\r\\n2022/04/23 20:01:23 performing webhook request (1/1/http://127.0.0.1:9090/-/reload)\\r\\n2022/04/23 20:01:23 successfully triggered reload\\r\\n```\\r\\n\\r\\n### Config Reloaded\\r\\n\\r\\nOnce you\'ve correctly updated the configmap, and `configmap-reloadz` detected the change and told Prometheus to reload. You\'ll see a new \\r\\ntarget has been reported by Prometheus at http://kubea.prometheus.svc/targets. You should now see \\"kubeA.reflectz (1/1 up)\\" showing. \\r\\nCongratulations! You have just successfully scraped a target from zitified Prometheus! Remember this workload does not listen on the \\r\\nKubernetes underlay network. It\'s only accessible from the OpenZiti overlay. \\r\\n\\r\\n![kubea.target1.png](./kubea.target1.png)\\r\\n\\r\\n### Let\'s Graph It!\\r\\n\\r\\nCool, we have a target. The target can be scraped by Prometheus over the OpenZiti overlay. We\'re also able to securely access the \\r\\nPrometheus UI over the same OpenZiti overlay. Let\'s use the Prometheus UI to graph the data point we want to see, the\\r\\n`reflect_total_connections` metric. \\r\\n\\r\\n1. Navigate to http://kubea.prometheus.svc/graph\\r\\n2. enter `reflect_total_connections`\\r\\n3. click Graph (notice I changed my time to \'10s\', located just under Graph)\\r\\n4. click Execute\\r\\n5. Notice there are no connections (0)\\r\\n\\r\\n![grpah it](./kubea.graph.png)\\r\\n\\r\\n### Generate Some Data\\r\\n\\r\\n\\r\\nNow let\'s change that graph of `reflect_total_connections` from 0 to 1 (or more). One of the services you will have access to will \\r\\nintercept `kubeA.reflect.svc.ziti:80`. \\r\\n\\r\\n> [!NOTE]\\r\\n> If you are using Windows and Windows Subsystem for Linux (WSL) as I am, you **might** need to understand how get WSL to use your Ziti \\r\\n> Desktop Edge for Windows as your DNS resolver when inside WSL. Generally speaking this is as easy as editing /etc/resolv.conf and \\r\\n> adding the IP as the first nameserver: `nameserver 100.64.0.1` (or whatever the DNS IP is). Try it first, depending on how you setup \\r\\n> WSL it might \'just work\' for you. You can also just use cygwin or any other netcat tool from Windows (not WSL) too.\\r\\n\\r\\nNow we can use netcat to open a connection through this intercept a few times. The metric tracks the total number of connections to the \\r\\nreflect service. Connect, send some text, the use ctrl-c to disconnect. Do that a few times then click \'execute\' again on the graph page.\\r\\nYou can see I did this over a minute and moved my total count on kubeA to 8, shown below.\\r\\n\\r\\n```text\\r\\n/tmp/prometheus$ nc kubeA.reflect.svc.ziti 80\\r\\nkubeA reflect test\\r\\nyou sent me: kubeA reflect test\\r\\n^C\\r\\n/tmp/prometheus$ nc kubeA.reflect.svc.ziti 80\\r\\nanother reflect test\\r\\nyou sent me: another reflect test\\r\\n^C\\r\\n/tmp/prometheus$ nc kubeA.reflect.svc.ziti 80\\r\\nanother reflect test\\r\\nyou sent me: another reflect test\\r\\n^C\\r\\n```\\r\\n\\r\\n![kubea.more.total.conn.png](./kubea.more.total.conn.png)\\r\\n\\r\\n### Scrape Something Else\\r\\n\\r\\nHopefully you agree with me that this is pretty neat. Well what if we take it to the next level? What if we tried to scrape the \\r\\nworkload we deployed to ClusterB? Could we get that to work? Recall from above how we enabled the job named \'kubeA.reflectz\'. What if we \\r\\nsimply copied/pasted that into the configmap changing kubeA --\x3e kubeB. Would it work? Let\'s see. \\r\\n\\r\\n```text\\r\\n# edit the configmap on ClusterA:\\r\\nkubectl edit cm prometheuz-prometheus-server\\r\\n\\r\\n#add the job - and wait for the configmap to reload\\r\\n\\r\\n    - job_name: \'kubeB.reflectz\'\\r\\n      scrape_interval: 5s\\r\\n      honor_labels: true\\r\\n      scheme: \'ziti\'\\r\\n      params:\\r\\n        \'match[]\':\\r\\n          - \'{job!=\\"\\"}\'\\r\\n        \'ziti-config\':\\r\\n          - \'/etc/prometheus/scrape.json\'\\r\\n      static_configs:\\r\\n        - targets:\\r\\n          - \'kubeB.reflect.scrape.svc-kubeB.reflect.id\'\\r\\n```\\r\\n\\r\\nAfter watching the logs from `configmap-reloadz` on ClusterA and seeing the webhook trigger. Just go back to the Prometheus server in \\r\\nthe browser. You should be at the \'graph\' url but if not navigate back and execute another graph for `reflect_total_connections`. When \\r\\nwe do that it probably doesn\'t look much different but... Wait a second? In the legend? Can it be? That\'s right. From Kubernetes \\r\\nClusterA, we have just scraped a workload from Kubernetes ClusterB, entirely over the OpenZiti overlay.\\r\\n\\r\\n![kubeA-and-kubeB.png](./kubeA-and-kubeB.png)\\r\\n\\r\\nGenerate some data like you did before by running a few netcat connection/disconnects and click \'Execute\' again. Don\'t forget to send \\r\\nthe connection request to kubeB though!\\r\\n\\r\\n```text\\r\\nnc kubeB.reflect.svc.ziti 80\\r\\nthis is kubeb\\r\\nyou sent me: this is kubeb\\r\\n^C\\r\\nnc kubeB.reflect.svc.ziti 80\\r\\nanother to kube b\\r\\nyou sent me: another to kube b\\r\\n^C\\r\\nnc kubeB.reflect.svc.ziti 80\\r\\none more for fun and profit\\r\\nyou sent me: one more for fun and profit\\r\\n^C\\r\\n```\\r\\n\\r\\n![kubeB from kubeA](./kubeB-from-kubeA.png)\\r\\n\\r\\n## Scraping All the Things!\\r\\n\\r\\nBy now, you are probably starting to get the idea just how powerful this is for Prometheus. A zitified Prometheus can scrape things \\r\\neasily and natively by just deploying a `Prometheuz` instance into the location you want to scrape. Or, you can just enable a scrape \\r\\ntarget using a tunneling app, or in Kubernetes using the `ziti-host` helm chart.  Let\'s complete our vision now and stand up a \\r\\nPrometheus server on our local workstation using Docker.\\r\\n\\r\\nWhen we run `Prometheuz` locally using docker we\'ll need a config file to give to docker using a volume mount. We also provide the \\r\\nidentity used to connect to the OpenZiti overlay in the same fashion. Let\'s start up a docker container locally and see if we can grab \\r\\ndata from our two Prometheus instances using a locally deployed `Prometheuz` via docker.\\r\\n\\r\\nGitHub has a sample Prometheus [file you can download](https://raw.githubusercontent.com/openziti/ziti-doc/main/docusaurus/blog/zitification/prometheus/scripts/local.prometheus.yml).\\r\\nBelow, I used curl to download it and put it into the expected location.\\r\\n\\r\\n```text\\r\\ncurl -s https://raw.githubusercontent.com/openziti/ziti-doc/main/docusaurus/blog/zitification/prometheus/scripts/local.prometheus.yml > /tmp/prometheus/prometheus.config.yml\\r\\n\\r\\nziti edge create identity user local.prometheus.id -o /tmp/prometheus/local.prometheus.id.jwt -a \\"reflectz-clients\\",\\"prometheus-clients\\"\\r\\nziti edge enroll /tmp/prometheus/local.prometheus.id.jwt -o /tmp/prometheus/local.prometheus.id.json\\r\\n\\r\\ndocker run \\\\\\r\\n  -v /tmp/prometheus/local.prometheus.id.json:/etc/prometheus/ziti.id.json \\\\\\r\\n  -v /tmp/prometheus/prometheus.config.yml:/etc/prometheus/prometheus.yml \\\\\\r\\n  -p 9090:9090 \\\\\\r\\n  openziti/prometheuz\\r\\n```\\r\\n\\r\\n![local-docker-targets.png](./local-docker-targets.png)\\r\\n\\r\\nLook at what we\'ve just done. We have started a Prometheus instance locally, and used it to connect to four Prometheus targets via \\r\\nscrape configurations when all four targets are hidden entirely from my local computer (and any computer) unless the computer has an \\r\\nOpenZiti identity. I personally think that is incredibly cool!\\r\\n\\r\\n## Taking it to 11\\r\\n\\r\\nBut wait, I\'m not done. That docker instance is listening on an underlay network. It\'s exposed to attack by anything on my local network.\\r\\nI want to fix that too. Let\'s start this docker container up listening only on the OpenZiti overlay. Just like in [part 2](./part2.md) \\r\\nwe will make a config, a service and two policies to enable identities on the OpenZiti overlay.\\r\\n\\r\\n```text\\r\\ncurl -s https://raw.githubusercontent.com/openziti/ziti-doc/main/docusaurus/blog/zitification/prometheus/scripts/local.prometheus.yml > /tmp/prometheus/prometheus.config.yml\\r\\n\\r\\n# create the config and service for the local prometheus server\\r\\nziti edge create config \\"local.prometheus.svc-intercept.v1\\" intercept.v1 \\\\\\r\\n  \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"local.prometheus.svc\\"],\\"portRanges\\":[{\\"low\\":80, \\"high\\":80}], \\"dialOptions\\": {\\"identity\\":\\"local.prometheus.id\\"}}\'\\r\\n\\r\\nziti edge create service \\"local.prometheus.svc\\" \\\\\\r\\n  --configs \\"local.prometheus.svc-intercept.v1\\"\\r\\n\\r\\n# grant the prometheus clients the ability to dial the service and the local.prometheus.id the ability to bind\\r\\nziti edge create service-policy \\"local.prometheus.svc.dial\\" Dial \\\\\\r\\n  --service-roles \\"@local.prometheus.svc\\" \\\\\\r\\n  --identity-roles \\"#prometheus-clients\\"\\r\\nziti edge create service-policy \\"local.prometheus.svc.bind\\" Bind \\\\\\r\\n  --service-roles \\"@local.prometheus.svc\\" \\\\\\r\\n  --identity-roles \\"@local.prometheus.id\\"\\r\\n```\\r\\n\\r\\nOnce that\'s done - let\'s see if we can start the docker container. The helm charts are configured to translate the `--set` flags \\r\\nprovided into \\"container friendly\\" settings like environment variables, volumes and mounts etc. In docker we need to provide those. If \\r\\nyou\'re familiar with docker these will probably all make sense. The most important part of the command below is the **lack** of a `-p` \\r\\nflag. The `-p` flag is used to expose a port from inside docker, outside docker. Look at the previous docker sample and you\'ll find we \\r\\nwere mapping local underlay port 9090 to port 9090 in the docker container. In this example, **we will do no such thing**! :)\\r\\n\\r\\n```text\\r\\ndocker run \\\\\\r\\n    -e ZITI_LISTENER_SERVICE_NAME=local.prometheus.svc \\\\\\r\\n    -e ZITI_LISTENER_IDENTITY_FILE=/etc/prometheus/ziti.server.json \\\\\\r\\n    -e ZITI_LISTENER_IDENTITY_NAME=local.prometheus.id \\\\\\r\\n    -v /tmp/prometheus/prometheus.config.yml:/etc/prometheus/prometheus.yml \\\\\\r\\n    -v /tmp/prometheus/local.prometheus.id.json:/etc/prometheus/ziti.id.json \\\\\\r\\n    -v /tmp/prometheus/local.prometheus.id.json:/etc/prometheus/ziti.server.json \\\\\\r\\n    openziti/prometheuz\\r\\n```\\r\\n\\r\\n### But - Does It Work?\\r\\n\\r\\nAfter configuring the OpenZiti overlay, we just need to open a browser and navigate to http://local.prometheus.svc/targets. SUCCESS!\\r\\n\\r\\n![local-docker-targets-no-listener.png](./local-docker-targets-no-listener.png)\\r\\n\\r\\n### SUCCESS!\\r\\n![local-docker-graph-no-listener.png](./local-docker-graph-no-listener.png)\\r\\n\\r\\n## Wrap Up\\r\\n\\r\\nThis was quite the journey and a lot of fun. We have taken a wildly popular open source project and brought OpenZiti to it with really \\r\\nnot much code at all. Then using OpenZiti we were able to give Prometheus superpowers and enable it to scrape any target regardless of \\r\\nwhere that target is or what network it is on. \\r\\n\\r\\nThink of the possibilities here. Are you a cloud provider looking to monitor your client\'s services which are deployed on-prem? That\'s \\r\\nso easy with OpenZiti and without sacrificing security **at all**. In fact, using OpenZiti like this provides amazing reach while \\r\\n**strengthening** the security posture of the solution because you\'re now using the concepts of\\r\\n[zero trust networking principles](https://en.wikipedia.org/wiki/Zero_trust_security_model) and applying them to your alerting and \\r\\nmonitoring solution.\\r\\n\\r\\nWhat do you think? Was this series interesting? Do you think OpenZiti is cool and you are looking to try it out? What are you going to \\r\\nzitify? Tell us on twitter or on discourse! Both links are included in this page. Let us know what you think! Go star the \\r\\n[openziti/ziti](http://github.com/openziti/ziti) repo and help us spread the word of OpenZiti to the world!"},{"id":"/zitification/zitifying-scp","metadata":{"permalink":"/blog/zitification/zitifying-scp","source":"@site/blog/zitification/zitifying-scp/index.md","title":"Zitifying SCP","description":"In the previous post we talked about how we could take a well-known application and improve its security by zitifying it, producing zssh. The logical next step after zitifying ssh would be to extend the functionality of zssh to cover moving files securely as well, enter zscp. A zitified scp effectively creates a more secure command line tool for sending and receiving files between ziti-empowered devices. Once zitified, we can use zscp using ziti identity names just like we did in zitifying ssh. I recommend reading the previous article) if you haven\'t to learn more about the benefits of zitifying tools like ssh and scp.","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":4.99,"hasTruncateMarker":false,"authors":[{"name":"Clint Dovholuk","title":"OpenZiti Maintainer","url":"https://github.com/dovholuknf","imageURL":"https://avatars.githubusercontent.com/u/46322585?v=4","key":"dovholuknf"}],"frontMatter":{"authors":"dovholuknf"},"prevItem":{"title":"Scraping Anything, Anywhere in Action","permalink":"/blog/zitification/prometheus/part3"},"nextItem":{"title":"zscp Cheat Sheet","permalink":"/blog/zitification/zitifying-scp/zscp-cheatsheat"}},"content":"In the [previous post][1] we talked about how we could take a well-known application and improve its security by zitifying it, producing `zssh`. The logical next step after zitifying `ssh` would be to extend the functionality of `zssh` to cover moving files securely as well, enter `zscp`. A zitified `scp` effectively creates a more secure command line tool for sending and receiving files between ziti-empowered devices. Once zitified, we can use `zscp` using ziti identity names just like we did in [zitifying ssh][1]. I recommend reading the [previous article][1]) if you haven\'t to learn more about the benefits of zitifying tools like `ssh` and `scp`.\\n\\n* * *\\n\\n## First Things First\\n\\n`zscp` functions with the same prerequisites as `zssh`:\\n\\n* Establish a [Ziti Network][2]\\n* Create and enroll two Ziti Endpoints (one for our `ssh` server, one for the client)\\n    * the `sshd` server will run `ziti-tunnel` for this demonstration. Conveniently it will run on the same machine I used to setup the [Ziti Network][3].\\n    * the client, in this case, is my local machine and I\'ll `zscp` files both to and from both the remote machine.\\n* Create the [Ziti Service][4] we\'ll use and authorize the two endpoints to use this service\\n* Use the `zscp` binary from the client side and the `ziti-tunnel` binary from the serving side to connect\\n* Harden `sshd` further by removing port 22 from any internet-based firewall configuration (for example, from within the security-groups wizard in AWS) or by forcing `sshd` to only listen on `localhost/127.0.0.1`\\n\\nAfter ensuring these steps are complete, you will have the ability to copy files across your Ziti Network. The traffic will be even more secure since now a Ziti Network is required for the connection, requiring that strong identity before even being able to access the `sshd` server. And of course now `sshd` is \'dark\' - it no longer needs the typical port 22 to be exposed to any network.\\n\\nGiven all the prerequisites are satisfied, we can put `zscp` to use. Simply download the binary for your platform:\\n\\n* [linux][5]\\n* [windows][6]\\n* [MacOs][7]\\n\\n<span></span>\\n\\n* * *\\n\\n## Sending and Receiving Files with Zscp\\n\\nOnce you have the executable downloaded, make sure it is named `zscp` and for simplicity\'s sake we\'ll assume it\'s on the path. Just like `zssh` to `ssh`, `zscp` provides the same basic functionality as `scp`. As with most tooling, executing the binary with no arguments will display the expected usage.\\n\\nThere are two main functions of `zscp`. Just like `scp` you can send and receive from the remote host.\\n\\nTo send files we use this basic syntax:\\n\\n```text\\n./zscp LOCAL_FILEPATHS... <REMOTE_USERNAME>@TARGET_IDENTITY:REMOTE_FILEPATH\\n```\\n\\nThen, to retrieve remote files we use a similar syntax:\\n\\n```text\\n./zscp <REMOTE_USERNAME>@TARGET_IDENTITY:REMOTE_FILEPATH LOCAL_FILEPATH\\n```\\n\\nBelow is a working example of using `zscp` to send a file to a remote machine. In this case the remote username is not the same as my local username. Just like with `scp`, I\'ll need to supply the username in my command and it will use the same syntax that regular `scp` uses. Here I am `zscp\'ing` as username `ubuntu` to the remote computer that is joined to the Ziti Network using the identity named `ziti-tunnel-aws`.\\n\\n```text\\n./zscp local/1.txt ubuntu@ziti-tunnel-aws:remote\\nINFO    connection to edge router using token 6c2e8b79-ce8e-483e-a9f8-a930530e706a\\nINFO    sent file: /Users/name/local/1.txt ==> /home/ubuntu/remote/1.txt\\n```\\n\\nThis is only a basic example on how we can use `zscp` to send a singular file to a remote computer. In the next section, we will go over how to use `zscp` flags for extended functionality.\\n\\n* * *\\n\\n## Zscp Flags\\n\\nJust like `zssh`, `zscp` has the same flags to pass in: ssh key, ziti configuration file, service name, and one to toggle debug logging. All the defaults are the same as with `zssh`, thus both `zscp` and `zssh` will work without the `-i` and `-c` flag providing the files exist at the default locations. Refer to \\\\[zitifying-ssh\\\\]\\\\[2\\\\] for instructions on how to use the flags below.\\n\\n```text\\n    -i, --SshKeyPath string   Path to ssh key. default: $HOME/.ssh/id_rsa\\n    -c, --ZConfig string      Path to ziti config file. default: $HOME/.ziti/zssh.json\\n    -d, --debug               pass to enable additional debug information\\n    -s, --service string      service name. (default \\"zssh\\")\\n```\\n\\nIn addition to the flags above, `zscp` has a flag to enable recursive copying:\\n\\n```text\\n    -r, --recursive           pass to enable recursive file transfer\\n```\\n\\nTo use the recursive flag, you must input a directory into the `LOCAL_FILEPATH` argument. Just like `scp`, `zscp` will copy all file contents under the provided directory. You can see below how we can use the `-r` flag to send all contents of `big_directory`.\\n\\nContents of `big_directory` on local computer:\\n\\n```text\\ntree local\\nlocal\\n\u2514\u2500\u2500 big_directory\\n    \u251c\u2500\u2500 1.txt\\n    \u251c\u2500\u2500 2.txt\\n    \u251c\u2500\u2500 3.txt\\n    \u251c\u2500\u2500 small_directory1\\n    \u2502   \u2514\u2500\u2500 4.txt\\n    \u251c\u2500\u2500 small_directory2\\n    \u2502   \u2514\u2500\u2500 5.txt\\n    \u2514\u2500\u2500 small_directory3\\n        \u2514\u2500\u2500 6.txt\\n```\\n\\nHere is the command and output:\\n\\n```text\\n$ zscp -r big_directory ubuntu@ziti-tunnel-aws:remote\\nINFO    connection to edge router using token d6c268ee-e4f5-4836-bd38-2fc1558257aa\\nINFO    sent file: /Users/name/local/big_directory/1.txt ==> /home/ubuntu/remote/big_directory/1.txt\\nINFO    sent file: /Users/name/local/big_directory/2.txt ==> /home/ubuntu/remote/big_directory/2.txt\\nINFO    sent file: /Users/name/local/big_directory/3.txt ==> /home/ubuntu/remote/big_directory/3.txt\\nINFO    sent file: /Users/name/local/big_directory/small_directory1/4.txt ==> /home/ubuntu/remote/big_directory/small_directory1/4.txt\\nINFO    sent file: /Users/name/local/big_directory/small_directory2/5.txt ==> /home/ubuntu/remote/big_directory/small_directory2/5.txt\\nINFO    sent file: /Users/name/local/big_directory/small_directory3/6.txt ==> /home/ubuntu/remote/big_directory/small_directory3/6.txt\\n```\\n\\nAfter `zssh\'ing` to the remote machine, we can prove that all files have been transferred to remote device:\\n\\n```text\\nubuntu@IP:~$ tree remote/\\nremote/\\n\u2514\u2500\u2500 big_directory\\n    \u251c\u2500\u2500 1.txt\\n    \u251c\u2500\u2500 2.txt\\n    \u251c\u2500\u2500 3.txt\\n    \u251c\u2500\u2500 small_directory1\\n    \u2502   \u2514\u2500\u2500 4.txt\\n    \u251c\u2500\u2500 small_directory2\\n    \u2502   \u2514\u2500\u2500 5.txt\\n    \u2514\u2500\u2500 small_directory3\\n        \u2514\u2500\u2500 6.txt\\n```\\n\\nRecursive copying also works to retrieve all contents of a directory on the remote machine.\\n\\n* * *\\n\\nI hope this post has helped you get familiar with another ziti-empowered developer\'s tool and hopefully it\'s becoming more clear why zitifying your application will make it more resilient to attack and make the act of connecting to remote services trivial.\\n\\nHave a look at the code over at [GitHub][8] or continue reading on to the next zitification - [kubectl][9]!\\n\\n[1]: /blog/zitification/zitifying-ssh/\\n\\n[2]: /docs/learn/quickstarts/network/hosted\\n\\n[3]: /docs/learn/introduction/\\n\\n[4]: /docs/learn/core-concepts/services/overview\\n\\n[5]: https://github.com/openziti-test-kitchen/zssh/releases/latest/download/zscp-linux-amd64\\n\\n[6]: https://github.com/openziti-test-kitchen/zssh/releases/latest/download/zscp-windows-amd64.exe\\n\\n[7]: https://github.com/openziti-test-kitchen/zssh/releases/latest/download/zscp-macos-amd64\\n\\n[8]: https://github.com/openziti-test-kitchen/zssh/tree/main/zssh/zscp\\n\\n[9]: /blog/zitification/kubernetes/"},{"id":"/zitification/zitifying-scp/zscp-cheatsheat","metadata":{"permalink":"/blog/zitification/zitifying-scp/zscp-cheatsheat","source":"@site/blog/zitification/zitifying-scp/zscp-cheatsheat.md","title":"zscp Cheat Sheet","description":"","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":0.985,"hasTruncateMarker":false,"authors":[{"name":"Clint Dovholuk","title":"OpenZiti Maintainer","url":"https://github.com/dovholuknf","imageURL":"https://avatars.githubusercontent.com/u/46322585?v=4","key":"dovholuknf"}],"frontMatter":{"authors":"dovholuknf"},"prevItem":{"title":"Zitifying SCP","permalink":"/blog/zitification/zitifying-scp"},"nextItem":{"title":"Zitifying SSH","permalink":"/blog/zitification/zitifying-ssh"}},"content":"```text\\r\\n# establish some variables which are used below\\r\\nservice_name=zscpSvc\\r\\nclient_identity=\\"${service_name}\\"Client\\r\\nserver_identity=\\"${service_name}\\"Server\\r\\nthe_port=22\\r\\n\\r\\n# create two identities. one host - one client. Only necessary if you want/need them. Skippable if you\\r\\n# already have an identity. provided here to just \'make it easy\' to test/try\\r\\nziti edge create identity device \\"${server_identity}\\" -a \\"${service_name}\\"ServerEndpoints -o \\"${server_identity}\\".jwt\\r\\nziti edge create identity device \\"${client_identity}\\" -a \\"${service_name}\\"ClientEndpoints -o \\"${client_identity}\\".jwt\\r\\n\\r\\n# if you want to modify anything, often deleting the configs/services is easier than updating them\\r\\n# it\'s easier to delete all the items too - so until you understand exactly how ziti works, \\r\\n# make sure you clean them all up before making a change\\r\\nziti edge delete config \\"${service_name}\\"-host.v1\\r\\nziti edge delete config \\"${service_name}\\"-client-config\\r\\nziti edge delete service \\"${service_name}\\"\\r\\nziti edge delete service-policy \\"${service_name}\\"-binding\\r\\nziti edge delete service-policy \\"${service_name}\\"-dialing\\r\\n\\r\\nziti edge create config \\"${service_name}\\"-host.v1 host.v1 \'{\\"protocol\\":\\"tcp\\", \\"address\\":\\"localhost\\",\\"port\\":\'\\"${the_port}\\"\', \\"listenOptions\\": {\\"bindUsingEdgeIdentity\\":true}}\'# intercept is not needed for zscp/zssh but make it for testing if you like\\r\\nziti edge create config \\"${service_name}\\"-client-config intercept.v1 \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"\'\\"${service_name}.ziti\\"\'\\"], \\"portRanges\\":[{\\"low\\":\'\\"${the_port}\\"\', \\"high\\":\\"\'${the_port}\\"\'}]}\'\\r\\nziti edge create service \\"${service_name}\\" --configs \\"${service_name}\\"-client-config,\\"${service_name}\\"-host.v1\\r\\nziti edge create service-policy \\"${service_name}\\"-binding Bind --service-roles \'@\'\\"${service_name}\\" --identity-roles \'#\'\\"${service_name}\\"\'ServerEndpoints\'\\r\\nziti edge create service-policy \\"${service_name}\\"-dialing Dial --service-roles \'@\'\\"${service_name}\\" --identity-roles \'#\'\\"${service_name}\\"\'ClientEndpoints\'\\r\\n\\r\\n```"},{"id":"/zitification/zitifying-ssh","metadata":{"permalink":"/blog/zitification/zitifying-ssh","source":"@site/blog/zitification/zitifying-ssh/index.md","title":"Zitifying SSH","description":"As we learned in the opening post, \\"zitifying\\" an application means to embed a Ziti SDK into an application and leverage the power of a Ziti Network to provide secure, truly zero-trust access to your application no matter where in the world that application goes. In this post we are going to see how we have zitified ssh and why. Future posts will expand on this even further by showing how NetFoundry uses zssh to support our customers.","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":7.885,"hasTruncateMarker":false,"authors":[{"name":"Clint Dovholuk","title":"OpenZiti Maintainer","url":"https://github.com/dovholuknf","imageURL":"https://avatars.githubusercontent.com/u/46322585?v=4","key":"dovholuknf"}],"frontMatter":{"authors":"dovholuknf"},"prevItem":{"title":"zscp Cheat Sheet","permalink":"/blog/zitification/zitifying-scp/zscp-cheatsheat"},"nextItem":{"title":"zssh Cheat Sheet","permalink":"/blog/zitification/zitifying-ssh/zssh-cheat-sheet"}},"content":"As we learned in the [opening post][1], \\"zitifying\\" an application means to embed a Ziti SDK into an application and leverage the power of a [Ziti Network][2] to provide secure, truly zero-trust access to your application no matter where in the world that application goes. In this post we are going to see how we have zitified `ssh` and why. Future posts will expand on this even further by showing how NetFoundry uses `zssh` to support our customers.\\r\\n\\r\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/WyZ8GRvtgGs\\" title=\\"YouTube video player\\" allow=\\"autoplay; picture-in-picture\\" allowfullscreen></iframe>\\r\\n\\r\\n* * *\\r\\n\\r\\n## Why SSH?\\r\\n\\r\\nAs I sit here typing these words, I can tell you\'re skeptical. I can tell you\'re wondering why in the world we would even attempt to mess with `ssh` at all. After all, `ssh` has been a foundation of the administration of not only home networks but also corporate networks and the internet itself. Surely if millions (billions?) of computers can interact every day safely and securely using `ssh` there is \\"no need\\" for us to be spending time zitifying `ssh` right? (Spoiler alert: wrong)\\r\\n\\r\\nI\'m sure you\'ve guessed that this is not the case whatsoever. After all, attackers don\'t leave `ssh` alone just because it\'s not worth it to try! Put a machine on the open internet, expose `ssh` on port 22 and watch for yourself all the attempts to access `ssh` using known default/weak/bad passwords flood in. Attacks don\'t only come from the internet either! Attacks from a single compromised machine on your network very well could behave in the same way as an outside attacker. This is particularly true for ransomware-style attacks as the compromised machine attempts to expand/multiply. The problems don\'t just stop here either. DoS attacks, other zero-day type bugs and more are all waiting for any service sitting on the open internet.\\r\\n\\r\\nA zitified `ssh` client is superior since the port used by `ssh` can be eliminated from the internet-based firewall preventing any connections whatsoever from any network client. In this configuration the `ssh` process is effectively \\"\\r\\ndark\\". The only way to `ssh` to a machine configured in this way is to have an identity authorized for that [Ziti Network][2].\\r\\n\\r\\nIt doesn\'t stop there though. A Ziti Network mandates the use of a strong identity. You cannot access any services defined in a [Ziti Network][2] without having gone through the enrollment process to create a strong identity used for bidirectional authentication and authorization. With Ziti, you can\'t even connect to SSH without first being authorized to connect to the remote SSH server.\\r\\n\\r\\nContrast that to SSH. With SSH you need access the sshd port before starting the authentication process. This requires the port to be exposed to the network, exposing it to attack. With SSH you are also usually allowed to authenticate without providing a strong identity using a username and password. Even if you are choosing to use the more secure pub/private key authentication for SSH, the remote machine still needed the public key added to the authorized_keys file before allowing connections to it via SSH. This is all-too-often a step which a human will do, making the process of authorizing a user or revoking access relatively cumbersome. Ziti provides a secure, centralized location to manage authorization of users to services. Ziti makes it trivial to grant or revoke access to a given set of services to users immediately.\\r\\n\\r\\nLastly, Ziti provides support for continual authorization through the use of policy checks. These policy checks run continuously. If a user suddenly fails to meet a particular policy, access to the services provided via the [Ziti Network][2] are revoked immediately.\\r\\n\\r\\nCool right? Let\'s see how we did it and how you can do the same thing using a [Ziti Network][2].\\r\\n\\r\\n#### Overview of SSH - notice how port 22 is open to inbound connections:\\r\\n\\r\\n![ssh-overview.svg](./ssh-overview.svg)\\r\\n\\r\\n* * *\\r\\n\\r\\n## How It\'s Done\\r\\n\\r\\nThere are a few steps necessary before being able to use `zssh`:\\r\\n\\r\\n* Establish a [Ziti Network][4]\\r\\n* Create and enroll two Ziti Endpoints (one for our `ssh` server, one for the client)\\r\\n    * the `sshd` server will run `ziti-tunnel` for this demonstration. Conveniently it will run on the same machine I used to setup the [Ziti Network][2].\\r\\n    * the client will run `zssh` from my local machine, and I\'ll `zssh` to the other endpoint\\r\\n* Create the [Ziti Service][5] we\'ll use and authorize the two endpoints to use this service\\r\\n* Use the `zssh` binary from the client side and the `ziti-tunnel` binary from the serving side to connect\\r\\n* Harden `sshd` further by removing port 22 from any internet-based firewall configuration (for example, from within the security-groups wizard in AWS) or by forcing `sshd` to only listen on `localhost/127.0.0.1`\\r\\n\\r\\n#### Overview of ZSSH - notice port 22 is no longer open to inbound connections:\\r\\n\\r\\n![zssh-overview.svg](./zssh-overview.svg)\\r\\n\\r\\nAfter performing these steps you\'ll have an `sshd` server that is dark to the internet. Accessing the server via `ssh`\\r\\nmust now occur using the Ziti Network. Since the service is no longer accessible directly through a network, it is no longer susceptible to the types of attacks mentioned previously!\\r\\n\\r\\n* * *\\r\\n\\r\\n## Zssh in Action\\r\\n\\r\\nOnce the prerequisites are satisfied, we can see `zssh` in action. Simply download the binary for your platform:\\r\\n\\r\\n* [linux][7]\\r\\n* [windows][8]\\r\\n* [MacOs][9]\\r\\n\\r\\nOnce you have the executable download, make sure it is named `zssh` and for simplicity\'s sake we\'ll assume it\'s on the path. A goal for `zssh` is to make the usage of the command very similar to the usage of `ssh`. Anyone familiar with `ssh` should be able to pick up `zssh` easily. As with most tooling, executing the binary with no arguments will display the expected usage. The general format when using `zssh` will be similar to that of `ssh`: `zssh <remoteUsername>@<targetIdentity>`\\r\\n\\r\\nBelow you can see me `zssh` from my local machine to the AWS machine secured by `ziti-tunnel`:\\r\\n\\r\\n```text\\r\\n./zssh ubuntu@ziti-tunnel-aws\\r\\nINFO[0000] connection to edge router using token 95c45123-9415-49d6-930a-275ada9ae06f\\r\\nconnected.\\r\\nubuntu@ip-172-31-27-154:~$\\r\\n```\\r\\n\\r\\nIt really was that simple! Now let\'s break down the current flags for `zssh` and exactly how this worked.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Zssh Flags\\r\\n\\r\\nWe know that `zssh` requires access to a [Ziti Network][2] but it is not clear from the example above is where `zzsh`\\r\\nfound the credentials required to access the network. `zssh` supports three basic flags:\\r\\n\\r\\n-i, --SshKeyPath string Path to ssh key. default: $HOME/.ssh/id_rsa -c, --ZConfig string Path to ziti config file. default: $HOME/.ziti/zssh.json -d, --debug pass to enable additional debug information -h, --help help for this command -s, --service string service name. default: zssh (default \\"zssh\\")\\r\\n\\r\\nWhat you see above is exactly the output `zssh` provides should you pass the `-h/--help` flag or execute `zssh` without any parameters. The `-i/--SshKeyPath` flag is congruent to the `-i` flag for `ssh`. You would use it to supply your key to the `ssh` client. Under the hood of `zssh` is a full-fledged `ssh` client that works similarly to how `ssh` does. If your `~/.ssh/id_rsa` file is in the `authorized_keys` of the remote machine, then you won\'t need to specify the `-i/`\\r\\nflag (as I didn\'t in my example). Using `zssh` requires the use of a public/private key in order for the `zssh` client to connect to the remote machine.\\r\\n\\r\\nThe `-c/--ZConfig` flag controls access to the network. A configuration file must be supplied to use `zssh` but does not need to be supplied as part of the command. By default, `zssh` will look at your home directory in a folder named `.ziti` for a file named `zssh.json`. In bash this is would be the equivalent of `$HOME`. In Windows this is the equivalent the environment variable named `USERPROFILE`. You do not need to supply this flag if a file exists at the default location. You can specify this flag to use `zssh` with other networks.\\r\\n\\r\\nThe `-s/--service` flag is for passing in a different service name other than \\"zssh\\". By default, the service name will be \\"zssh\\", but if you would like to access a different service use the `-s` flag followed by the service name.\\r\\n\\r\\nThe `-d/--debug` flag outputs additional information to assist you with debugging. For example:\\r\\n\\r\\n```text\\r\\n$ ./zssh ubuntu@ziti-tunnel-aws -d\\r\\nINFO[0000]     sshKeyPath set to: /home/myUser/.ssh/id_rsa\\r\\nINFO[0000]        ZConfig set to: /home/myUser/.ziti/zssh.json\\r\\nINFO[0000]       username set to: ubuntu\\r\\nINFO[0000] targetIdentity set to: ziti-tunnel-aws\\r\\nINFO[0000] connection to edge router using token 95c45123-a234-412e-8997-96139fbd1938\\r\\nconnected.\\r\\nubuntu@ip-172-31-27-154:~$\\r\\n```\\r\\n\\r\\nShown above is also one additional piece of information, the remote username. Shown in the example above I have `zssh`ed to an ubuntu image in AWS. When it was provisioned AWS used the username `ubuntu`. In order to `zssh` to this machine I need to tell the remote `sshd` server that I wish to attach as the `ubuntu` user. If your username is the same for your local environment as the remote machine you do not need to specify the username. For example, my local username is `cd` (my initials). When I `zssh` to my dev machine I can simply use `zssh ClintLinux`:\\r\\n\\r\\n```text\\r\\n$ ./zssh ClintLinux\\r\\nINFO[0000] connection to edge router using token 909dfb4f-fa83-4f73-af8e-ed251bcd30be\\r\\nconnected.\\r\\ncd@clint-linux-vm ~\\r\\n```\\r\\n\\r\\nHopefully this post has been helpful and insightful. Zitifying an application is *POWERFUL*!!!!\\r\\n\\r\\nThe next post in this series will cover how we extended the same code we used for `zssh` and [zitified scp][10].\\r\\n\\r\\nHave a look at the code over at [GitHub][11]\\r\\n\\r\\n[1]: /blog/zitification/\\r\\n\\r\\n[2]: /docs/learn/introduction/\\r\\n\\r\\n[3]: ./ssh-overview.svg\\r\\n\\r\\n[4]: /docs/learn/quickstarts/network/hosted\\r\\n\\r\\n[5]: /docs/learn/core-concepts/services/overview\\r\\n\\r\\n[6]: ./zssh-overview.svg\\r\\n\\r\\n[7]: https://github.com/openziti-test-kitchen/zssh/releases/latest/download/zssh-linux-amd64\\r\\n\\r\\n[8]: https://github.com/openziti-test-kitchen/zssh/releases/latest/download/zssh-windows-amd64.exe\\r\\n\\r\\n[9]: https://github.com/openziti-test-kitchen/zssh/releases/latest/download/zssh-macos-amd64\\r\\n\\r\\n[10]: /blog/zitification/zitifying-scp/\\r\\n\\r\\n[11]: https://github.com/openziti-test-kitchen/zssh/tree/main/zssh/zssh"},{"id":"/zitification/zitifying-ssh/zssh-cheat-sheet","metadata":{"permalink":"/blog/zitification/zitifying-ssh/zssh-cheat-sheet","source":"@site/blog/zitification/zitifying-ssh/zssh-cheat-sheet.md","title":"zssh Cheat Sheet","description":"","date":"2023-11-30T19:48:40.000Z","formattedDate":"November 30, 2023","tags":[],"readingTime":0.99,"hasTruncateMarker":false,"authors":[{"name":"Clint Dovholuk","title":"OpenZiti Maintainer","url":"https://github.com/dovholuknf","imageURL":"https://avatars.githubusercontent.com/u/46322585?v=4","key":"dovholuknf"}],"frontMatter":{"authors":"dovholuknf"},"prevItem":{"title":"Zitifying SSH","permalink":"/blog/zitification/zitifying-ssh"}},"content":"```text\\r\\n# establish some variables which are used below\\r\\nservice_name=zsshSvc\\r\\nclient_identity=\\"${service_name}\\"Client\\r\\nserver_identity=\\"${service_name}\\"Server\\r\\nthe_port=22\\r\\n\\r\\n# create two identities. one host - one client. Only necessary if you want/need them. Skippable if you\\r\\n# already have an identity. provided here to just \'make it easy\' to test/try\\r\\nziti edge create identity device \\"${server_identity}\\" -a \\"${service_name}\\"ServerEndpoints -o \\"${server_identity}\\".jwt\\r\\nziti edge create identity device \\"${client_identity}\\" -a \\"${service_name}\\"ClientEndpoints -o \\"${client_identity}\\".jwt\\r\\n\\r\\n# if you want to modify anything, often deleting the configs/services is easier than updating them\\r\\n# it\'s easier to delete all the items too - so until you understand exactly how ziti works,\\r\\n# make sure you clean them all up before making a change\\r\\nziti edge delete config \\"${service_name}\\"-host.v1\\r\\nziti edge delete config \\"${service_name}\\"-client-config\\r\\nziti edge delete service \\"${service_name}\\"\\r\\nziti edge delete service-policy \\"${service_name}\\"-binding\\r\\nziti edge delete service-policy \\"${service_name}\\"-dialing\\r\\n\\r\\nziti edge create config \\"${service_name}\\"-host.v1 host.v1 \'{\\"protocol\\":\\"tcp\\", \\"address\\":\\"localhost\\",\\"port\\":\'\\"${the_port}\\"\', \\"listenOptions\\": {\\"bindUsingEdgeIdentity\\":true}}\'\\r\\n# intercept is not needed for zscp/zssh but make it for testing if you like\\r\\nziti edge create config \\"${service_name}\\"-client-config intercept.v1 \'{\\"protocols\\":[\\"tcp\\"],\\"addresses\\":[\\"\'\\"${service_name}.ziti\\"\'\\"], \\"portRanges\\":[{\\"low\\":\'\\"${the_port}\\"\', \\"high\\":\'\\"${the_port}\\"\'}]}\'\\r\\nziti edge create service \\"${service_name}\\" --configs \\"${service_name}\\"-client-config,\\"${service_name}\\"-host.v1\\r\\nziti edge create service-policy \\"${service_name}\\"-binding Bind --service-roles \'@\'\\"${service_name}\\" --identity-roles \'#\'\\"${service_name}\\"\'ServerEndpoints\'\\r\\nziti edge create service-policy \\"${service_name}\\"-dialing Dial --service-roles \'@\'\\"${service_name}\\" --identity-roles \'#\'\\"${service_name}\\"\'ClientEndpoints\'\\r\\n```"}],"blogListPaginated":[{"items":["/articles","/c-sdk-on-beaglebone","/bootstrapping-trust/part-01.encryption-everywhere","/bootstrapping-trust/part-02.a-primer-on-public-key-cryptography","/bootstrapping-trust/part-03.certificates","/bootstrapping-trust/part-04.certificate-authorities-and-chains-of-trust","/bootstrapping-trust/part-05.bootstrapping-trust","/golang-aha/article","/wildcard-dns/cheatsheet","/zitification"],"metadata":{"permalink":"/blog","page":1,"postsPerPage":10,"totalPages":2,"totalCount":18,"nextPage":"/blog/page/2","blogDescription":"Technical articles about OpenZiti","blogTitle":"OpenZiti Technical Blog"}},{"items":["/zitification/kubernetes","/zitification/prometheus/part1","/zitification/prometheus/part2","/zitification/prometheus/part3","/zitification/zitifying-scp","/zitification/zitifying-scp/zscp-cheatsheat","/zitification/zitifying-ssh","/zitification/zitifying-ssh/zssh-cheat-sheet"],"metadata":{"permalink":"/blog/page/2","page":2,"postsPerPage":10,"totalPages":2,"totalCount":18,"previousPage":"/blog","blogDescription":"Technical articles about OpenZiti","blogTitle":"OpenZiti Technical Blog"}}],"blogTags":{},"blogTagsListPath":"/blog/tags"}},"docusaurus-plugin-content-pages":{"default":[{"type":"jsx","permalink":"/","source":"@site/src/pages/index.js"},{"type":"jsx","permalink":"/stargazers","source":"@site/src/pages/stargazers.js"},{"type":"mdx","permalink":"/comparisons/overview","source":"@site/src/pages/comparisons/overview.md","title":"OpenZiti Comparison Overview","description":"This is the landing page for comparisons.","frontMatter":{}},{"type":"mdx","permalink":"/comparisons/service-mesh","source":"@site/src/pages/comparisons/service-mesh.md","title":"OpenZiti Compared to Service Mesh","description":"Words here...","frontMatter":{}}]},"docusaurus-plugin-debug":{},"docusaurus-plugin-google-gtag":{},"docusaurus-plugin-sitemap":{},"docusaurus-plugin-redoc":{"edge-client":{"converted":{"openapi":"3.0.0","info":{"description":"OpenZiti Edge Client API","title":"Ziti Edge Client","contact":{"name":"OpenZiti","url":"https://openziti.discourse.group","email":"help@openziti.org"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.26.1"},"paths":{"/":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listRoot","responses":{"200":{"description":"Version information for the controller","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listVersionEnvelope"}}}}}}},"/.well-known/est/cacerts":{"get":{"security":[],"description":"This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.\\nThis endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library\\nthat supports parsing PKCS7 stores.\\n","tags":["Well Known"],"summary":"Get CA Cert Store","operationId":"listWellKnownCas","responses":{"200":{"description":"A base64 encoded PKCS7 store","content":{"application/pkcs7-mime":{"schema":{"type":"string","example":"MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG\\nBjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw\\nFQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD\\nVQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl\\nIEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx\\nODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI\\nDA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg\\nTmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv\\ndW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z\\nKIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ\\nNJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa\\nVK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl\\n7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s\\n6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb\\nQGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010\\nXdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU\\nHe16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW\\nghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb\\nryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw\\nHQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu\\nOuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD\\nAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE\\ngRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS\\nCpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7\\nKOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+\\nrMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X\\n6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI\\nFximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN\\n8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw\\nBHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2\\nYSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo\\nLLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq\\ndH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB\\nlzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH\\nDAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv\\ndW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5\\nIFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG\\nA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy\\nbG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg\\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg\\nQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD\\nDIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw\\nHDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f\\nWsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV\\nXO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv\\npnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD\\nw2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI\\nKyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo\\n783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm\\npQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE\\nWFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F\\n6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa\\nbADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD\\nVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB\\nACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy\\n3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY\\nuEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn\\ncCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS\\nWI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg\\nAX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO\\nwEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y\\nqQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m\\nfGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh\\ndprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8\\n3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==\\n"}}}}}}},"/authenticate":{"post":{"security":[],"description":"Allowed authentication methods include \\"password\\", \\"cert\\", and \\"ext-jwt\\"\\n","tags":["Authentication"],"summary":"Authenticate via a method supplied via a query string parameter","operationId":"authenticate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticate"}}}},"responses":{"200":{"description":"The API session associated with the session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The authentication request could not be processed as the credentials are invalid","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"INVALID_AUTH","message":"The authentication request failed","requestId":"5952ed10-3091-474f-a691-47ebab6990dc"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"method","in":"query","required":true,"schema":{"type":"string","enum":["password","cert","ext-jwt"]}}]},"/authenticate/mfa":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA authentication by submitting a MFA time based one time token or backup code.","tags":["Authentication","MFA"],"summary":"Complete MFA authentication","operationId":"authenticateMfa","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}}}}},"/current-api-session":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the API session that was used to issue the current request","tags":["Current API Session"],"summary":"Return the current API session","operationId":"getCurrentAPISession","responses":{"200":{"description":"The API session associated with the session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Terminates the current API session","tags":["Current API Session"],"summary":"Logout","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-api-session/certificates":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of certificate resources for the current API session; supports filtering, sorting, and pagination","tags":["Current API Session"],"summary":"List the ephemeral certificates available for the current API Session","operationId":"listCurrentApiSessionCertificates","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of the current API Session\'s certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listCurrentApiSessionCertificatesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an ephemeral certificate for the current API Session. This endpoint expects a PEM encoded CSRs to be provided for fulfillment as a property of a JSON payload. It is up to the client to manage the private key backing the CSR request.","tags":["Current API Session"],"summary":"Creates an ephemeral certificate for the current API Session","operationId":"createCurrentApiSessionCertificate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionCertificateCreate"}}},"description":"The payload describing the CSR used to create a session certificate","required":true},"responses":{"201":{"description":"A response of a create API Session certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createCurrentApiSessionCertificateEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-api-session/certificates/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single ephemeral certificate by id","tags":["Current API Session"],"summary":"Retrieves an ephemeral certificate","operationId":"detailCurrentApiSessionCertificate","responses":{"200":{"description":"A response containing a single API Session certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailCurrentApiSessionCertificateEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an ephemeral certificateby id\\n","tags":["Current API Session"],"summary":"Delete an ephemeral certificate","operationId":"deleteCurrentApiSessionCertificate","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-api-session/service-updates":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves data indicating the last time data relevant to this API Session was altered that would necessitate\\nservice refreshes.\\n","tags":["Current API Session","Services"],"summary":"Returns data indicating whether a client should updates it service list","operationId":"listServiceUpdates","responses":{"200":{"description":"Data indicating necessary service updates","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listCurrentApiSessionServiceUpdatesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns the identity associated with the API sessions used to issue the current request","tags":["Current Identity"],"summary":"Return the current identity","operationId":"getCurrentIdentity","responses":{"200":{"description":"The identity associated with the API Session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentIdentityDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"edge-router-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers"},"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"},"service-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities"}},"authenticators":{"updb":{"username":"admin"}},"createdAt":"2020-01-13T16:38:13.6854788Z","enrollment":{},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","isAdmin":true,"isDefaultAdmin":true,"name":"Default Admin","roleAttributes":[],"tags":{},"type":{"_links":{"self":{"href":"./identity-types/User"}},"id":"User","name":"User","urlName":"identity-types"},"updatedAt":"2020-01-13T16:38:13.6854788Z"},"meta":{}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of authenticators assigned to the current API session\'s identity; supports filtering, sorting, and pagination.","tags":["Current API Session"],"summary":"List authenticators for the current identity","operationId":"listCurrentIdentityAuthenticators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of authenticators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthenticatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Will only show authenticators assigned to the API session\'s identity.","tags":["Current API Session"],"summary":"Retrieve an authenticator for the current identity","operationId":"detailCurrentIdentityAuthenticator","responses":{"200":{"description":"A singular authenticator resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailAuthenticatorEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session\'s\\nidentity.\\n","tags":["Current API Session"],"summary":"Update all fields on an authenticator of this identity","operationId":"updateCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorUpdateWithCurrent"}}},"description":"An authenticator put object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API\\nsession\'s identity.\\n","tags":["Current API Session"],"summary":"Update the supplied fields on an authenticator of this identity","operationId":"patchCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorPatchWithCurrent"}}},"description":"An authenticator patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/authenticators/{id}/extend":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.\\nAllows an identity to extend its certificate\'s expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.\\nThe response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.\\nAfter verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to recieve a new certificate associated with a certificate based authenticator","operationId":"extendCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"A response containg the identity\'s new certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendEnrollmentEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/authenticators/{id}/extend-verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.\\nAfter receipt, the new client certificate must be used for new authentication requests.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to validate reciept of a new client certificate","operationId":"extendVerifyCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendValidateEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Lists the Edge Routers that the current identity has access to via policies. The data returned\\nincludes their address and online status\\n","tags":["Current Identity","Edge Router"],"summary":"Return this list of Edge Routers the identity has access to","operationId":"getCurrentIdentityEdgeRouters","responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listCurrentIdentityEdgeRoutersEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.\\n","tags":["Current Identity","MFA"],"summary":"Returns the current status of MFA enrollment","operationId":"detailMfa","responses":{"200":{"description":"The details of an MFA enrollment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailMfaEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`\\n","tags":["Current Identity","MFA"],"summary":"Initiate MFA enrollment","operationId":"enrollMfa","responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The identity is already enrolled in MFA","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":null,"cause":null,"causeMessage":"","code":"ALREADY_MFA_ENROLLED","message":"The identity is already enrolled in MFA","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Disable MFA for the current identity","operationId":"deleteMfa","parameters":[{"name":"mfa-validation-code","in":"header","schema":{"type":"string"}}],"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa/qr-code":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.\\n","tags":["Current Identity","MFA"],"summary":"Show a QR code for unverified MFA enrollments","operationId":"detailMfaQrCode","responses":{"200":{"description":"OK"},"404":{"description":"No MFA enrollment or MFA enrollment is completed"}}}},"/current-identity/mfa/recovery-codes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment view the current recovery codes","operationId":"detailMfaRecoveryCodes","parameters":[{"name":"mfa-validation-code","in":"header","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/mfaCode"}}},"description":"An MFA validation request"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment regenerate the recovery codes","operationId":"createMfaRecoveryCodes","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"The recovery codes of an MFA enrollment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailMfaRecoveryCodesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Complete MFA enrollment by verifying a time based one time token","operationId":"verifyMfa","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/enroll":{"post":{"description":"present a OTT and CSR to receive a long-lived client certificate","tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enroll","responses":{"200":{"description":"Base empty response","content":{"application/x-pem-file":{"schema":{"$ref":"#/components/schemas/empty"}},"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"404":{"description":"The requested resource does not exist","content":{"application/x-pem-file":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/x-pem-file":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"token","in":"query","schema":{"type":"string","format":"uuid"}},{"name":"method","in":"query","schema":{"type":"string"}}]},"/enroll/ca":{"post":{"description":"For CA auto enrollment, an identity is not created beforehand.\\nInstead one will be created during enrollment. The client will present a client certificate that is signed by a\\nCertificate Authority that has been added and verified (See POST /cas and POST /cas/{id}/verify).\\n\\nDuring this process no CSRs are requires as the client should already be in possession of a valid certificate.\\n","tags":["Enroll"],"summary":"Enroll an identity with a pre-exchanged certificate","operationId":"enrollCa","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/enroll/erott":{"post":{"description":"Enrolls an edge-router via a one-time-token to establish a certificate based identity.\\n","tags":["Enroll"],"summary":"Enroll an edge-router","operationId":"enrollErOtt","responses":{"200":{"description":"A response containing the edge routers signed certificates (server chain, server cert, CAs).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/enrollmentCertsEnvelope"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","format":"uuid"}}]},"/enroll/extend/router":{"post":{"description":"Allows a router to extend its certificates\' expiration date by\\nusing its current and valid client certificate to submit a CSR. This CSR may\\nbe passed in using a new private key, thus allowing private key rotation or swapping.\\n\\nAfter completion any new connections must be made with certificates returned from a 200 OK\\nresponse. The previous client certificate is rendered invalid for use with the controller even if it\\nhas not expired.\\n\\nThis request must be made using the existing, valid, client certificate.\\n","tags":["Enroll","Extend Enrollment"],"summary":"Extend the life of a currently enrolled router\'s certificates","operationId":"extendRouterEnrollment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/routerExtendEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"A response containg the edge routers new signed certificates (server chain, server cert, CAs).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/enrollmentCertsEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/enroll/ott":{"post":{"description":"Enroll an identity via a one-time-token which is supplied via a query string parameter. This enrollment method\\nexpects a PEM encoded CSRs to be provided for fulfillment. It is up to the enrolling identity to manage the\\nprivate key backing the CSR request.\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enrollOtt","responses":{"200":{"description":"A PEM encoded certificate signed by the internal Ziti CA","content":{"application/x-x509-user-cert":{"schema":{"type":"string"},"examples":{"response":{"value":"-----BEGIN CERTIFICATE-----\\nMIICzDCCAlGgAwIBAgIRAPkVg1jVKqnNGFpSB3lPbaIwCgYIKoZIzj0EAwIwXjEL\\nMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk5DMRMwEQYDVQQKDApOZXRGb3VuZHJ5MS0w\\nKwYDVQQDDCROZXRGb3VuZHJ5IFppdGkgRXh0ZXJuYWwgQVBJIFJvb3QgQ0EwHhcN\\nMTgxMTE1MTI1NzE3WhcNMTkxMTI1MTI1NzE3WjBrMQswCQYDVQQGEwJVUzELMAkG\\nA1UECAwCTkMxEjAQBgNVBAcMCUNoYXJsb3R0ZTETMBEGA1UECgwKTmV0Rm91bmRy\\neTEPMA0GA1UECwwGQWR2RGV2MRUwEwYDVQQDDAxaaXRpQ2xpZW50MDEwdjAQBgcq\\nhkjOPQIBBgUrgQQAIgNiAATTl2ft+/K9RvDgki9gSr9udNcV2bxD4LrWEdCdXNzF\\niVUiEcEte9z/M0JRt8lgo17OjFvS+ecrAmLtIZNmQnH3+9YeafjeNPpvQsMKxlTN\\nMnU7Hka11GHc6swQZSyHvlKjgcUwgcIwCQYDVR0TBAIwADARBglghkgBhvhCAQEE\\nBAMCBaAwMwYJYIZIAYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIENsaWVudCBD\\nZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUtx+Tej6lSYdjb8Jbc2QuvoEsI/swHwYDVR0j\\nBBgwFoAUcdTlRrnP43ZbQ3PGAbZMPE26+H4wDgYDVR0PAQH/BAQDAgXgMB0GA1Ud\\nJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDBDAKBggqhkjOPQQDAgNpADBmAjEAuXDS\\nH7KKMr+la+Yuh8d8Q9cLtXzdS0j6a8e7iOyPJmdWq2WuzNdbCfAfLgKXuxhSAjEA\\nsadZrXl1OBv11RGAKdYBIyRmfYUotCFAtCNKcfgBUxci0TDaKDA7r3jnjKT1d7Fs\\n-----END CERTIFICATE-----\\n"}}}}},"404":{"description":"The requested resource does not exist","content":{"application/x-x509-user-cert":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/x-x509-user-cert":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","format":"uuid"}}]},"/enroll/ottca":{"post":{"description":"Enroll an identity via a one-time-token that also requires a pre-exchanged client certificate to match a\\nCertificate Authority that has been added and verified (See POST /cas and POST /cas{id}/verify). The client\\nmust present a client certificate signed by CA associated with the enrollment. This enrollment is similar to\\nCA auto enrollment except that is required the identity to be pre-created.\\n\\nAs the client certificate has been pre-exchanged there is no CSR input to this enrollment method.\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token with a pre-exchanged client certificate","operationId":"enrollOttCa","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","format":"uuid"}}]},"/enroll/updb":{"post":{"description":"Enrolls an identity via a one-time-token to establish an initial username and password combination\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"ernollUpdb","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","format":"uuid"}}]},"/enumerated-capabiities":{"get":{"security":[],"tags":["Informational"],"summary":"Returns all capabilities this version of the controller is aware of, enabled or not.","operationId":"listEnumeratedCapabilities","responses":{"200":{"description":"A typed and enumerated list of capabilities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEnumeratedCapabilitiesEnvelope"}}}}}}},"/external-jwt-signers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of external JWT signers for authentication","tags":["External JWT Signer"],"summary":"List Client Authentication External JWT","operationId":"listExternalJwtSigners","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of External JWT Signers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listClientExternalJwtSignersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-response":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Submits posture responses","tags":["Posture Checks"],"summary":"Submit a posture response to a posture query","operationId":"createPostureResponse","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureResponseCreate"}}},"description":"A Posture Response","required":true},"responses":{"201":{"description":"Contains a list of services that have had their timers altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureResponseEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-response-bulk":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Submits posture responses","tags":["Posture Checks"],"summary":"Submit multiple posture responses","operationId":"createPostureResponseBulk","requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/postureResponseCreate"}}}},"description":"A Posture Response","required":true},"responses":{"200":{"description":"Contains a list of services that have had their timers altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureResponseEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/protocols":{"get":{"security":[],"tags":["Informational"],"summary":"Return a list of the listening Edge protocols","operationId":"listProtocols","responses":{"200":{"description":"A list of supported Edge protocols","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listProtocolsEnvelope"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List services","operationId":"listServices","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/services/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service by id. Requires admin access.","tags":["Service"],"summary":"Retrieves a single service","operationId":"detailService","responses":{"200":{"description":"A single service","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailServiceEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service by id. Requires admin access.","tags":["Service"],"summary":"Update all fields on a service","operationId":"updateService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceUpdate"}}},"description":"A service update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service by id. Requires admin access.","tags":["Service"],"summary":"Delete a service","operationId":"deleteService","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service. Requires admin access.","tags":["Service"],"summary":"Update the supplied fields on a service","operationId":"patchService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePatch"}}},"description":"A service patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the list of edge routers permitted to handle traffic for the specified service\\n","tags":["Service"],"summary":"List of edge routers permitted to handle traffic for the specified service","operationId":"listServiceEdgeRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"description":"an optional JWT token use to authenticate the request. If provided, the token must be valid else a not authorized response is returned.","name":"session-token","in":"header","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of edge routers suitable for dialing or binding the specified service by the authenticated identity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServiceEdgeRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.\\n","tags":["Service"],"summary":"List of terminators assigned to a service","operationId":"listServiceTerminators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of terminators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listClientTerminatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of active sessions resources; supports filtering, sorting, and pagination.\\n\\nSessions are tied to an API session and are moved when an API session times out or logs out. Active sessions\\n(i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.\\n","tags":["Session"],"summary":"List sessions","operationId":"listSessions","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of sessions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSessionsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a session resource.","tags":["Session"],"summary":"Create a session resource","operationId":"createSession","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/sessionCreate"}}},"description":"A session to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/sessionCreateEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session by id.","tags":["Session"],"summary":"Retrieves a single session","operationId":"detailSession","responses":{"200":{"description":"A single session","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSessionEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a session by id.","tags":["Session"],"summary":"Delete a session","operationId":"deleteSession","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/specs":{"get":{"security":[],"description":"Returns a list of spec files embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Returns a list of API specs","operationId":"listSpecs","responses":{"200":{"description":"A list of specifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSpecsEnvelope"}}}}}}},"/specs/{id}":{"get":{"security":[],"description":"Returns single spec resource embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Return a single spec resource","operationId":"detailSpec","responses":{"200":{"description":"A single specification","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSpecEnvelope"}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/specs/{id}/spec":{"get":{"security":[],"description":"Return the body of the specification (i.e. Swagger, OpenAPI 2.0, 3.0, etc).","tags":["Informational"],"summary":"Returns the spec\'s file","operationId":"detailSpecBody","responses":{"200":{"description":"Returns the document that represents the specification","content":{"text/yaml":{"schema":{"$ref":"#/components/schemas/detailSpecBodyEnvelope"}},"application/json":{"schema":{"$ref":"#/components/schemas/detailSpecBodyEnvelope"}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/version":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listVersion","responses":{"200":{"description":"Version information for the controller","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listVersionEnvelope"}}}}}}}},"servers":[{"url":"https://demo.ziti.dev/edge/client/v1"}],"components":{"requestBodies":{"mfaCode":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/mfaCode"}}},"description":"An MFA validation request","required":true}},"securitySchemes":{"oauth2":{"type":"oauth2","flows":{"authorizationCode":{"authorizationUrl":"/oidc/authorize","tokenUrl":"/oidc/token","scopes":{"openid":"openid"}}}},"ztSession":{"description":"An API Key that is provided post authentication","type":"apiKey","name":"zt-session","in":"header"}},"schemas":{"apiError":{"type":"object","properties":{"args":{"$ref":"#/components/schemas/apiErrorArgs"},"cause":{"$ref":"#/components/schemas/apiErrorCause"},"causeMessage":{"type":"string"},"code":{"type":"string"},"data":{"type":"object","additionalProperties":true},"message":{"type":"string"},"requestId":{"type":"string"}}},"apiErrorArgs":{"type":"object","properties":{"urlVars":{"type":"object","additionalProperties":{"type":"string"}}}},"apiErrorCause":{"allOf":[{"$ref":"#/components/schemas/apiFieldError"},{"$ref":"#/components/schemas/apiError"}]},"apiErrorEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/components/schemas/apiError"},"meta":{"$ref":"#/components/schemas/meta"}}},"apiFieldError":{"type":"object","properties":{"field":{"type":"string"},"reason":{"type":"string"},"value":{"description":"can be any value - string, number, boolean, array or object"}}},"apiSessionDetail":{"description":"An API Session object","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["token","identity","identityId","configTypes","ipAddress","authQueries","cachedUpdatedAt","isMfaRequired","isMfaComplete","authenticatorId"],"properties":{"authQueries":{"$ref":"#/components/schemas/authQueryList"},"authenticatorId":{"type":"string"},"cachedLastActivityAt":{"type":"string","format":"date-time"},"configTypes":{"type":"array","items":{"type":"string"}},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"ipAddress":{"type":"string"},"isMfaComplete":{"type":"boolean"},"isMfaRequired":{"type":"boolean"},"lastActivityAt":{"type":"string","format":"date-time"},"token":{"type":"string"}}}]},"apiVersion":{"type":"object","required":["path"],"properties":{"apiBaseUrls":{"type":"array","items":{"type":"string"}},"path":{"type":"string"},"version":{"type":"string"}}},"attributes":{"description":"A set of strings used to loosly couple this resource to policies","type":"array","items":{"type":"string"},"x-omitempty":true,"nullable":true},"authQueryDetail":{"type":"object","required":["provider"],"properties":{"format":{"$ref":"#/components/schemas/mfaFormats"},"httpMethod":{"type":"string"},"httpUrl":{"type":"string"},"maxLength":{"type":"integer"},"minLength":{"type":"integer"},"provider":{"$ref":"#/components/schemas/mfaProviders"},"typeId":{"type":"string"}}},"authQueryList":{"type":"array","items":{"$ref":"#/components/schemas/authQueryDetail"}},"authenticate":{"description":"A generic authenticate object meant for use with the /authenticate path. Required fields depend on authentication method.","type":"object","properties":{"configTypes":{"$ref":"#/components/schemas/configTypes"},"envInfo":{"$ref":"#/components/schemas/envInfo"},"password":{"$ref":"#/components/schemas/password"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"},"username":{"$ref":"#/components/schemas/username"}}},"authenticatorDetail":{"description":"A singular authenticator resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["method","identityId","identity"],"properties":{"certPem":{"type":"string"},"fingerprint":{"type":"string"},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"method":{"type":"string"},"username":{"type":"string"}}}]},"authenticatorList":{"description":"An array of authenticator resources","type":"array","items":{"$ref":"#/components/schemas/authenticatorDetail"}},"authenticatorPatch":{"description":"All of the fields on an authenticator that may be updated","type":"object","properties":{"password":{"$ref":"#/components/schemas/passwordNullable"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"$ref":"#/components/schemas/usernameNullable"}}},"authenticatorPatchWithCurrent":{"description":"All of the fields on an authenticator that may be updated","type":"object","allOf":[{"$ref":"#/components/schemas/authenticatorPatch"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/components/schemas/password"}}}]},"authenticatorUpdate":{"description":"All of the fields on an authenticator that will be updated","type":"object","required":["username","password"],"properties":{"password":{"$ref":"#/components/schemas/password"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"$ref":"#/components/schemas/username"}}},"authenticatorUpdateWithCurrent":{"description":"All of the fields on an authenticator that will be updated","type":"object","allOf":[{"$ref":"#/components/schemas/authenticatorUpdate"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/components/schemas/password"}}}]},"baseEntity":{"description":"Fields shared by all Edge API entities","type":"object","required":["id","createdAt","updatedAt","_links"],"properties":{"_links":{"$ref":"#/components/schemas/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"},"updatedAt":{"type":"string","format":"date-time"}}},"capabilities":{"type":"string","enum":["OIDC_AUTH","HA_CONTROLLER"]},"clientExternalJwtSignerDetail":{"description":"A External JWT Signer resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","externalAuthUrl"],"properties":{"externalAuthUrl":{"type":"string","format":"url"},"name":{"type":"string","example":"MyApps Signer"}}}]},"clientExternalJwtSignerList":{"description":"An array of External JWT Signers resources","type":"array","items":{"$ref":"#/components/schemas/clientExternalJwtSignerDetail"}},"commonEdgeRouterProperties":{"type":"object","required":["hostname","name","supportedProtocols","syncStatus","isOnline","cost","noTraversal","disabled"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean"},"hostname":{"type":"string"},"isOnline":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"supportedProtocols":{"type":"object","additionalProperties":{"type":"string"}},"syncStatus":{"type":"string"}}},"configTypes":{"description":"Specific configuration types that should be returned","type":"array","items":{"type":"string"}},"createCurrentApiSessionCertificateEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionCertificateCreateResponse"},"meta":{"$ref":"#/components/schemas/meta"}}},"createEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/createLocation"},"meta":{"$ref":"#/components/schemas/meta"}}},"createLocation":{"type":"object","properties":{"_links":{"$ref":"#/components/schemas/links"},"id":{"type":"string"}}},"currentApiSessionCertificateCreate":{"type":"object","required":["csr"],"properties":{"csr":{"type":"string"}}},"currentApiSessionCertificateCreateResponse":{"allOf":[{"$ref":"#/components/schemas/createLocation"},{"type":"object","required":["certificate"],"properties":{"cas":{"type":"string"},"certificate":{"type":"string"}}}]},"currentApiSessionCertificateDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["subject","fingerprint","validFrom","validTo","certificate"],"properties":{"certificate":{"type":"string"},"fingerprint":{"type":"string"},"subject":{"type":"string"},"validFrom":{"type":"string","format":"date-time"},"validTo":{"type":"string","format":"date-time"}}}]},"currentApiSessionCertificateList":{"type":"array","items":{"$ref":"#/components/schemas/currentApiSessionCertificateDetail"}},"currentApiSessionDetail":{"description":"An API Session object for the current API session","type":"object","allOf":[{"$ref":"#/components/schemas/apiSessionDetail"},{"type":"object","required":["expiresAt","expirationSeconds"],"properties":{"expirationSeconds":{"type":"integer"},"expiresAt":{"type":"string","format":"date-time"}}}]},"currentApiSessionDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"currentApiSessionServiceUpdateList":{"type":"object","required":["lastChangeAt"],"properties":{"lastChangeAt":{"type":"string","format":"date-time"}}},"currentIdentityDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"currentIdentityEdgeRouterDetail":{"description":"A detail edge router resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"$ref":"#/components/schemas/commonEdgeRouterProperties"}]},"currentIdentityEdgeRouterList":{"description":"A list of edge router resources","type":"array","items":{"$ref":"#/components/schemas/currentIdentityEdgeRouterDetail"}},"detailAuthenticatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/authenticatorDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailCurrentApiSessionCertificateEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionCertificateDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailMfa":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"required":["isVerified"],"properties":{"isVerified":{"type":"boolean"},"provisioningUrl":{"description":"Not provided if MFA verification has been completed","type":"string"},"recoveryCodes":{"description":"Not provided if MFA verification has been completed","type":"array","items":{"type":"string"}}}}]},"detailMfaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/detailMfa"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailMfaRecoveryCodes":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"required":["recoveryCodes"],"properties":{"recoveryCodes":{"type":"array","items":{"type":"string"}}}}]},"detailMfaRecoveryCodesEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/components/schemas/detailMfaRecoveryCodes"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailServiceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSessionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSpecBodyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specBodyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSpecEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"dialBind":{"type":"string","enum":["Dial","Bind"]},"dialBindArray":{"type":"array","items":{"$ref":"#/components/schemas/dialBind"}},"empty":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"object","example":{}},"meta":{"$ref":"#/components/schemas/meta"}}},"enrollmentCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates to trust","type":"string"},"cert":{"description":"A PEM encoded cert for the server","type":"string"},"serverCert":{"description":"A PEM encoded set of certificates to use as the servers chain","type":"string"}}},"enrollmentCertsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/enrollmentCerts"},"meta":{"$ref":"#/components/schemas/meta"}}},"entityRef":{"description":"A reference to another resource and links to interact with it","type":"object","properties":{"_links":{"$ref":"#/components/schemas/links"},"entity":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"}}},"envInfo":{"description":"Environment information an authenticating client may provide","type":"object","properties":{"arch":{"type":"string"},"os":{"type":"string"},"osRelease":{"type":"string"},"osVersion":{"type":"string"}}},"identityAuthenticators":{"type":"object","properties":{"cert":{"type":"object","properties":{"fingerprint":{"type":"string"},"id":{"type":"string"}}},"updb":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"}}}}},"identityDetail":{"description":"Detail of a specific identity","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","type","typeId","isDefaultAdmin","isAdmin","authenticators","enrollment","envInfo","sdkInfo","roleAttributes","hasEdgeRouterConnection","hasApiSession","isMfaEnabled","serviceHostingPrecedences","serviceHostingCosts","defaultHostingCost","authPolicyId","authPolicy","externalId","disabled"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicy":{"$ref":"#/components/schemas/entityRef"},"authPolicyId":{"type":"string"},"authenticators":{"$ref":"#/components/schemas/identityAuthenticators"},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"disabled":{"type":"boolean"},"disabledAt":{"type":"string","format":"date-time","nullable":true},"disabledUntil":{"type":"string","format":"date-time","nullable":true},"enrollment":{"$ref":"#/components/schemas/identityEnrollments"},"envInfo":{"$ref":"#/components/schemas/envInfo"},"externalId":{"type":"string","nullable":true},"hasApiSession":{"type":"boolean"},"hasEdgeRouterConnection":{"type":"boolean"},"isAdmin":{"type":"boolean"},"isDefaultAdmin":{"type":"boolean"},"isMfaEnabled":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"type":{"$ref":"#/components/schemas/entityRef"},"typeId":{"type":"string"}}}]},"identityEnrollments":{"type":"object","properties":{"ott":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"ottca":{"type":"object","properties":{"ca":{"$ref":"#/components/schemas/entityRef"},"caId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"updb":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}}}},"identityExtendCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates","type":"string"},"clientCert":{"description":"A PEM encoded client certificate","type":"string"}}},"identityExtendEnrollmentEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/identityExtendCerts"},"meta":{"$ref":"#/components/schemas/meta"}}},"identityExtendEnrollmentRequest":{"type":"object","required":["clientCertCsr"],"properties":{"clientCertCsr":{"type":"string"}}},"identityExtendValidateEnrollmentRequest":{"type":"object","required":["clientCert"],"properties":{"clientCert":{"description":"A PEM encoded client certificate previously returned after an extension request","type":"string"}}},"link":{"description":"A link to another resource","type":"object","required":["href"],"properties":{"comment":{"type":"string"},"href":{"type":"string","format":"uri"},"method":{"type":"string"}}},"links":{"description":"A map of named links","type":"object","additionalProperties":{"$ref":"#/components/schemas/link"},"x-omitempty":false},"listAuthenticatorsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/authenticatorList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listClientExternalJwtSignersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/clientExternalJwtSignerList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listClientTerminatorsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/terminatorClientList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listCurrentApiSessionCertificatesEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionCertificateList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listCurrentApiSessionServiceUpdatesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionServiceUpdateList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listCurrentIdentityEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentIdentityEdgeRouterList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEnumeratedCapabilitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/capabilities"}},"meta":{"$ref":"#/components/schemas/meta"}}},"listProtocols":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/protocol"}},"listProtocolsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/listProtocols"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServiceEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceEdgeRouters"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServicesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSessionsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSpecsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listVersionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/version"},"meta":{"$ref":"#/components/schemas/meta"}}},"meta":{"type":"object","properties":{"apiEnrollmentVersion":{"type":"string"},"apiVersion":{"type":"string"},"filterableFields":{"type":"array","items":{"type":"string"},"x-omitempty":true},"pagination":{"$ref":"#/components/schemas/pagination"}}},"mfaCode":{"type":"object","required":["code"],"properties":{"code":{"type":"string"}}},"mfaFormats":{"type":"string","enum":["numeric","alpha","alphaNumeric"]},"mfaProviders":{"type":"string","enum":["ziti","url"]},"osType":{"type":"string","enum":["Windows","WindowsServer","Android","iOS","Linux","macOS"]},"pagination":{"type":"object","required":["limit","offset","totalCount"],"properties":{"limit":{"type":"number","format":"int64"},"offset":{"type":"number","format":"int64"},"totalCount":{"type":"number","format":"int64"}}},"password":{"type":"string","maxLength":100,"minLength":5},"passwordNullable":{"type":"string","maxLength":100,"minLength":5,"nullable":true},"postureCheckType":{"type":"string","enum":["OS","PROCESS","DOMAIN","MAC","MFA","PROCESS_MULTI"]},"postureQueries":{"type":"object","required":["policyId","isPassing","postureQueries"],"properties":{"isPassing":{"type":"boolean"},"policyId":{"type":"string"},"policyType":{"$ref":"#/components/schemas/dialBind"},"postureQueries":{"type":"array","items":{"$ref":"#/components/schemas/postureQuery"}}}},"postureQuery":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["queryType","isPassing","timeout","timeoutRemaining"],"properties":{"isPassing":{"type":"boolean"},"process":{"$ref":"#/components/schemas/postureQueryProcess"},"processes":{"type":"array","items":{"$ref":"#/components/schemas/postureQueryProcess"}},"queryType":{"$ref":"#/components/schemas/postureCheckType"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}}]},"postureQueryProcess":{"type":"object","properties":{"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"}}},"postureResponse":{"type":"object","required":["services"],"properties":{"services":{"type":"array","items":{"$ref":"#/components/schemas/postureResponseService"}}}},"postureResponseCreate":{"type":"object","required":["id","typeId"],"properties":{"id":{"type":"string"},"typeId":{"$ref":"#/components/schemas/postureCheckType"}},"discriminator":{"propertyName":"typeId"}},"postureResponseDomainCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","required":["domain"],"properties":{"domain":{"type":"string"}}}],"x-class":"DOMAIN"},"postureResponseEndpointStateCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","properties":{"unlocked":{"type":"boolean"},"woken":{"type":"boolean"}}}],"x-class":"ENDPOINT_STATE"},"postureResponseEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureResponse"},"meta":{"$ref":"#/components/schemas/meta"}}},"postureResponseMacAddressCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","items":{"type":"string"}}}}],"x-class":"MAC"},"postureResponseOperatingSystemCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","required":["type","version"],"properties":{"build":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}}],"x-class":"OS"},"postureResponseProcessCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","required":["process"],"properties":{"hash":{"type":"string"},"isRunning":{"type":"boolean"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}}],"x-class":"PROCESS"},"postureResponseService":{"type":"object","required":["id","name","postureQueryType","timeout","timeoutRemaining"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"postureQueryType":{"type":"string"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}},"protocol":{"type":"object","required":["address"],"properties":{"address":{"type":"string"}}},"routerExtendEnrollmentRequest":{"type":"object","required":["serverCertCsr","certCsr"],"properties":{"certCsr":{"type":"string"},"serverCertCsr":{"type":"string"}}},"sdkInfo":{"description":"SDK information an authenticating client may provide","type":"object","properties":{"appId":{"type":"string"},"appVersion":{"type":"string"},"branch":{"type":"string"},"revision":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}},"serviceDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","terminatorStrategy","roleAttributes","permissions","configs","config","encryptionRequired","postureQueries"],"properties":{"config":{"description":"map of config data for this service keyed by the config type name. Only configs of the types requested will be returned.","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"permissions":{"$ref":"#/components/schemas/dialBindArray"},"postureQueries":{"type":"array","items":{"$ref":"#/components/schemas/postureQueries"}},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"terminatorStrategy":{"type":"string"}}}]},"serviceEdgeRouters":{"type":"object","properties":{"edgeRouters":{"type":"array","items":{"$ref":"#/components/schemas/commonEdgeRouterProperties"}}}},"serviceList":{"type":"array","items":{"$ref":"#/components/schemas/serviceDetail"}},"servicePatch":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"serviceUpdate":{"type":"object","required":["name"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"sessionCreate":{"type":"object","properties":{"serviceId":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/dialBind"}}},"sessionCreateEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/sessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"sessionDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["type","apiSessionId","apiSession","serviceId","service","token","edgeRouters","identityId"],"properties":{"apiSession":{"$ref":"#/components/schemas/entityRef"},"apiSessionId":{"type":"string"},"edgeRouters":{"type":"array","items":{"$ref":"#/components/schemas/sessionEdgeRouter"}},"identityId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"},"token":{"type":"string"},"type":{"$ref":"#/components/schemas/dialBind"}}}]},"sessionEdgeRouter":{"allOf":[{"$ref":"#/components/schemas/commonEdgeRouterProperties"},{"type":"object","required":["urls"],"properties":{"urls":{"type":"object","additionalProperties":{"type":"string"}}}}]},"sessionList":{"type":"array","items":{"$ref":"#/components/schemas/sessionDetail"}},"specBodyDetail":{"type":"string"},"specDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}]},"specList":{"type":"array","items":{"$ref":"#/components/schemas/specDetail"}},"subTags":{"type":"object","additionalProperties":{"type":"object"}},"tags":{"description":"A map of user defined fields and values. The values are limited to the following types/values: null, string, boolean","allOf":[{"$ref":"#/components/schemas/subTags"}],"nullable":true},"terminatorClientDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["serviceId","service","routerId","identity"],"properties":{"identity":{"type":"string"},"routerId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"}}}]},"terminatorClientList":{"type":"array","items":{"$ref":"#/components/schemas/terminatorClientDetail"}},"terminatorCost":{"type":"integer","maximum":65535,"minimum":0},"terminatorCostMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/terminatorCost"}},"terminatorPrecedence":{"type":"string","enum":["default","required","failed"]},"terminatorPrecedenceMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/terminatorPrecedence"}},"username":{"type":"string","maxLength":100,"minLength":4},"usernameNullable":{"type":"string","maxLength":100,"minLength":4,"nullable":true},"version":{"type":"object","properties":{"apiVersions":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/apiVersion"}}},"buildDate":{"type":"string","example":"2020-02-11 16:09:08"},"capabilities":{"type":"array","items":{"type":"string"}},"revision":{"type":"string","example":"ea556fc18740"},"runtimeVersion":{"type":"string","example":"go1.13.5"},"version":{"type":"string","example":"v0.9.0"}}}}}},"bundle":{"consumes":["application/json"],"produces":["application/json"],"schemes":["https"],"swagger":"2.0","info":{"description":"OpenZiti Edge Client API","title":"Ziti Edge Client","contact":{"name":"OpenZiti","url":"https://openziti.discourse.group","email":"help@openziti.org"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.26.1"},"host":"demo.ziti.dev","basePath":"/edge/client/v1","paths":{"/":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listRoot","responses":{"200":{"description":"Version information for the controller","schema":{"$ref":"#/definitions/listVersionEnvelope"}}}}},"/.well-known/est/cacerts":{"get":{"security":[],"description":"This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.\\nThis endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library\\nthat supports parsing PKCS7 stores.\\n","produces":["application/pkcs7-mime"],"tags":["Well Known"],"summary":"Get CA Cert Store","operationId":"listWellKnownCas","responses":{"200":{"description":"A base64 encoded PKCS7 store","schema":{"type":"string","example":"MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG\\nBjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw\\nFQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD\\nVQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl\\nIEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx\\nODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI\\nDA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg\\nTmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv\\ndW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z\\nKIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ\\nNJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa\\nVK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl\\n7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s\\n6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb\\nQGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010\\nXdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU\\nHe16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW\\nghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb\\nryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw\\nHQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu\\nOuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD\\nAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE\\ngRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS\\nCpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7\\nKOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+\\nrMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X\\n6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI\\nFximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN\\n8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw\\nBHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2\\nYSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo\\nLLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq\\ndH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB\\nlzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH\\nDAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv\\ndW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5\\nIFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG\\nA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy\\nbG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg\\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg\\nQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD\\nDIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw\\nHDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f\\nWsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV\\nXO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv\\npnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD\\nw2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI\\nKyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo\\n783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm\\npQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE\\nWFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F\\n6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa\\nbADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD\\nVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB\\nACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy\\n3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY\\nuEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn\\ncCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS\\nWI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg\\nAX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO\\nwEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y\\nqQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m\\nfGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh\\ndprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8\\n3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==\\n"}}}}},"/authenticate":{"post":{"security":[],"description":"Allowed authentication methods include \\"password\\", \\"cert\\", and \\"ext-jwt\\"\\n","tags":["Authentication"],"summary":"Authenticate via a method supplied via a query string parameter","operationId":"authenticate","parameters":[{"name":"auth","in":"body","schema":{"$ref":"#/definitions/authenticate"}}],"responses":{"200":{"description":"The API session associated with the session used to issue the request","schema":{"$ref":"#/definitions/currentApiSessionDetailEnvelope"},"examples":{"default":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The authentication request could not be processed as the credentials are invalid","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"INVALID_AUTH","message":"The authentication request failed","requestId":"5952ed10-3091-474f-a691-47ebab6990dc"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"enum":["password","cert","ext-jwt"],"type":"string","name":"method","in":"query","required":true}]},"/authenticate/mfa":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA authentication by submitting a MFA time based one time token or backup code.","tags":["Authentication","MFA"],"summary":"Complete MFA authentication","operationId":"authenticateMfa","parameters":[{"description":"An MFA validation request","name":"mfaAuth","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}}}}},"/current-api-session":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the API session that was used to issue the current request","tags":["Current API Session"],"summary":"Return the current API session","operationId":"getCurrentAPISession","responses":{"200":{"description":"The API session associated with the session used to issue the request","schema":{"$ref":"#/definitions/currentApiSessionDetailEnvelope"},"examples":{"default":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Terminates the current API session","tags":["Current API Session"],"summary":"Logout","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-api-session/certificates":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of certificate resources for the current API session; supports filtering, sorting, and pagination","tags":["Current API Session"],"summary":"List the ephemeral certificates available for the current API Session","operationId":"listCurrentApiSessionCertificates","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of the current API Session\'s certificate","schema":{"$ref":"#/definitions/listCurrentApiSessionCertificatesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an ephemeral certificate for the current API Session. This endpoint expects a PEM encoded CSRs to be provided for fulfillment as a property of a JSON payload. It is up to the client to manage the private key backing the CSR request.","tags":["Current API Session"],"summary":"Creates an ephemeral certificate for the current API Session","operationId":"createCurrentApiSessionCertificate","parameters":[{"description":"The payload describing the CSR used to create a session certificate","name":"sessionCertificate","in":"body","required":true,"schema":{"$ref":"#/definitions/currentApiSessionCertificateCreate"}}],"responses":{"201":{"description":"A response of a create API Session certificate","schema":{"$ref":"#/definitions/createCurrentApiSessionCertificateEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-api-session/certificates/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single ephemeral certificate by id","tags":["Current API Session"],"summary":"Retrieves an ephemeral certificate","operationId":"detailCurrentApiSessionCertificate","responses":{"200":{"description":"A response containing a single API Session certificate","schema":{"$ref":"#/definitions/detailCurrentApiSessionCertificateEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an ephemeral certificateby id\\n","tags":["Current API Session"],"summary":"Delete an ephemeral certificate","operationId":"deleteCurrentApiSessionCertificate","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-api-session/service-updates":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves data indicating the last time data relevant to this API Session was altered that would necessitate\\nservice refreshes.\\n","tags":["Current API Session","Services"],"summary":"Returns data indicating whether a client should updates it service list","operationId":"listServiceUpdates","responses":{"200":{"description":"Data indicating necessary service updates","schema":{"$ref":"#/definitions/listCurrentApiSessionServiceUpdatesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns the identity associated with the API sessions used to issue the current request","tags":["Current Identity"],"summary":"Return the current identity","operationId":"getCurrentIdentity","responses":{"200":{"description":"The identity associated with the API Session used to issue the request","schema":{"$ref":"#/definitions/currentIdentityDetailEnvelope"},"examples":{"default":{"data":{"_links":{"edge-router-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers"},"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"},"service-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities"}},"authenticators":{"updb":{"username":"admin"}},"createdAt":"2020-01-13T16:38:13.6854788Z","enrollment":{},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","isAdmin":true,"isDefaultAdmin":true,"name":"Default Admin","roleAttributes":[],"tags":{},"type":{"_links":{"self":{"href":"./identity-types/User"}},"id":"User","name":"User","urlName":"identity-types"},"updatedAt":"2020-01-13T16:38:13.6854788Z"},"meta":{}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of authenticators assigned to the current API session\'s identity; supports filtering, sorting, and pagination.","tags":["Current API Session"],"summary":"List authenticators for the current identity","operationId":"listCurrentIdentityAuthenticators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of authenticators","schema":{"$ref":"#/definitions/listAuthenticatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Will only show authenticators assigned to the API session\'s identity.","tags":["Current API Session"],"summary":"Retrieve an authenticator for the current identity","operationId":"detailCurrentIdentityAuthenticator","responses":{"200":{"description":"A singular authenticator resource","schema":{"$ref":"#/definitions/detailAuthenticatorEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session\'s\\nidentity.\\n","tags":["Current API Session"],"summary":"Update all fields on an authenticator of this identity","operationId":"updateCurrentIdentityAuthenticator","parameters":[{"description":"An authenticator put object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorUpdateWithCurrent"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API\\nsession\'s identity.\\n","tags":["Current API Session"],"summary":"Update the supplied fields on an authenticator of this identity","operationId":"patchCurrentIdentityAuthenticator","parameters":[{"description":"An authenticator patch object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorPatchWithCurrent"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/authenticators/{id}/extend":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.\\nAllows an identity to extend its certificate\'s expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.\\nThe response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.\\nAfter verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to recieve a new certificate associated with a certificate based authenticator","operationId":"extendCurrentIdentityAuthenticator","parameters":[{"name":"extend","in":"body","required":true,"schema":{"$ref":"#/definitions/identityExtendEnrollmentRequest"}}],"responses":{"200":{"description":"A response containg the identity\'s new certificate","schema":{"$ref":"#/definitions/identityExtendEnrollmentEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/authenticators/{id}/extend-verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.\\nAfter receipt, the new client certificate must be used for new authentication requests.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to validate reciept of a new client certificate","operationId":"extendVerifyCurrentIdentityAuthenticator","parameters":[{"name":"extend","in":"body","required":true,"schema":{"$ref":"#/definitions/identityExtendValidateEnrollmentRequest"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Lists the Edge Routers that the current identity has access to via policies. The data returned\\nincludes their address and online status\\n","tags":["Current Identity","Edge Router"],"summary":"Return this list of Edge Routers the identity has access to","operationId":"getCurrentIdentityEdgeRouters","responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listCurrentIdentityEdgeRoutersEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.\\n","tags":["Current Identity","MFA"],"summary":"Returns the current status of MFA enrollment","operationId":"detailMfa","responses":{"200":{"description":"The details of an MFA enrollment","schema":{"$ref":"#/definitions/detailMfaEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`\\n","tags":["Current Identity","MFA"],"summary":"Initiate MFA enrollment","operationId":"enrollMfa","responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The identity is already enrolled in MFA","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":null,"cause":null,"causeMessage":"","code":"ALREADY_MFA_ENROLLED","message":"The identity is already enrolled in MFA","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Disable MFA for the current identity","operationId":"deleteMfa","parameters":[{"type":"string","name":"mfa-validation-code","in":"header"}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa/qr-code":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.\\n","produces":["image/png","application/json"],"tags":["Current Identity","MFA"],"summary":"Show a QR code for unverified MFA enrollments","operationId":"detailMfaQrCode","responses":{"200":{"description":"OK"},"404":{"description":"No MFA enrollment or MFA enrollment is completed"}}}},"/current-identity/mfa/recovery-codes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment view the current recovery codes","operationId":"detailMfaRecoveryCodes","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","schema":{"$ref":"#/definitions/mfaCode"}},{"type":"string","name":"mfa-validation-code","in":"header"}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment regenerate the recovery codes","operationId":"createMfaRecoveryCodes","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"The recovery codes of an MFA enrollment","schema":{"$ref":"#/definitions/detailMfaRecoveryCodesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Complete MFA enrollment by verifying a time based one time token","operationId":"verifyMfa","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/enroll":{"post":{"description":"present a OTT and CSR to receive a long-lived client certificate","consumes":["application/pkcs10","application/json","application/x-pem-file","text/plain"],"produces":["application/x-pem-file","application/json"],"tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enroll","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","format":"uuid","name":"token","in":"query"},{"type":"string","name":"method","in":"query"}]},"/enroll/ca":{"post":{"description":"For CA auto enrollment, an identity is not created beforehand.\\nInstead one will be created during enrollment. The client will present a client certificate that is signed by a\\nCertificate Authority that has been added and verified (See POST /cas and POST /cas/{id}/verify).\\n\\nDuring this process no CSRs are requires as the client should already be in possession of a valid certificate.\\n","tags":["Enroll"],"summary":"Enroll an identity with a pre-exchanged certificate","operationId":"enrollCa","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/enroll/erott":{"post":{"description":"Enrolls an edge-router via a one-time-token to establish a certificate based identity.\\n","tags":["Enroll"],"summary":"Enroll an edge-router","operationId":"enrollErOtt","responses":{"200":{"description":"A response containing the edge routers signed certificates (server chain, server cert, CAs).","schema":{"$ref":"#/definitions/enrollmentCertsEnvelope"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","format":"uuid","name":"token","in":"query","required":true}]},"/enroll/extend/router":{"post":{"description":"Allows a router to extend its certificates\' expiration date by\\nusing its current and valid client certificate to submit a CSR. This CSR may\\nbe passed in using a new private key, thus allowing private key rotation or swapping.\\n\\nAfter completion any new connections must be made with certificates returned from a 200 OK\\nresponse. The previous client certificate is rendered invalid for use with the controller even if it\\nhas not expired.\\n\\nThis request must be made using the existing, valid, client certificate.\\n","tags":["Enroll","Extend Enrollment"],"summary":"Extend the life of a currently enrolled router\'s certificates","operationId":"extendRouterEnrollment","parameters":[{"name":"routerExtendEnrollmentRequest","in":"body","required":true,"schema":{"$ref":"#/definitions/routerExtendEnrollmentRequest"}}],"responses":{"200":{"description":"A response containg the edge routers new signed certificates (server chain, server cert, CAs).","schema":{"$ref":"#/definitions/enrollmentCertsEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/enroll/ott":{"post":{"description":"Enroll an identity via a one-time-token which is supplied via a query string parameter. This enrollment method\\nexpects a PEM encoded CSRs to be provided for fulfillment. It is up to the enrolling identity to manage the\\nprivate key backing the CSR request.\\n","consumes":["application/pkcs10"],"produces":["application/x-x509-user-cert"],"tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enrollOtt","responses":{"200":{"description":"A PEM encoded certificate signed by the internal Ziti CA","schema":{"type":"string"},"examples":{"application/x-x509-user-cert":"-----BEGIN CERTIFICATE-----\\nMIICzDCCAlGgAwIBAgIRAPkVg1jVKqnNGFpSB3lPbaIwCgYIKoZIzj0EAwIwXjEL\\nMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk5DMRMwEQYDVQQKDApOZXRGb3VuZHJ5MS0w\\nKwYDVQQDDCROZXRGb3VuZHJ5IFppdGkgRXh0ZXJuYWwgQVBJIFJvb3QgQ0EwHhcN\\nMTgxMTE1MTI1NzE3WhcNMTkxMTI1MTI1NzE3WjBrMQswCQYDVQQGEwJVUzELMAkG\\nA1UECAwCTkMxEjAQBgNVBAcMCUNoYXJsb3R0ZTETMBEGA1UECgwKTmV0Rm91bmRy\\neTEPMA0GA1UECwwGQWR2RGV2MRUwEwYDVQQDDAxaaXRpQ2xpZW50MDEwdjAQBgcq\\nhkjOPQIBBgUrgQQAIgNiAATTl2ft+/K9RvDgki9gSr9udNcV2bxD4LrWEdCdXNzF\\niVUiEcEte9z/M0JRt8lgo17OjFvS+ecrAmLtIZNmQnH3+9YeafjeNPpvQsMKxlTN\\nMnU7Hka11GHc6swQZSyHvlKjgcUwgcIwCQYDVR0TBAIwADARBglghkgBhvhCAQEE\\nBAMCBaAwMwYJYIZIAYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIENsaWVudCBD\\nZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUtx+Tej6lSYdjb8Jbc2QuvoEsI/swHwYDVR0j\\nBBgwFoAUcdTlRrnP43ZbQ3PGAbZMPE26+H4wDgYDVR0PAQH/BAQDAgXgMB0GA1Ud\\nJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDBDAKBggqhkjOPQQDAgNpADBmAjEAuXDS\\nH7KKMr+la+Yuh8d8Q9cLtXzdS0j6a8e7iOyPJmdWq2WuzNdbCfAfLgKXuxhSAjEA\\nsadZrXl1OBv11RGAKdYBIyRmfYUotCFAtCNKcfgBUxci0TDaKDA7r3jnjKT1d7Fs\\n-----END CERTIFICATE-----\\n"}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","format":"uuid","name":"token","in":"query","required":true}]},"/enroll/ottca":{"post":{"description":"Enroll an identity via a one-time-token that also requires a pre-exchanged client certificate to match a\\nCertificate Authority that has been added and verified (See POST /cas and POST /cas{id}/verify). The client\\nmust present a client certificate signed by CA associated with the enrollment. This enrollment is similar to\\nCA auto enrollment except that is required the identity to be pre-created.\\n\\nAs the client certificate has been pre-exchanged there is no CSR input to this enrollment method.\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token with a pre-exchanged client certificate","operationId":"enrollOttCa","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","format":"uuid","name":"token","in":"query","required":true}]},"/enroll/updb":{"post":{"description":"Enrolls an identity via a one-time-token to establish an initial username and password combination\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"ernollUpdb","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","format":"uuid","name":"token","in":"query","required":true}]},"/enumerated-capabiities":{"get":{"security":[],"tags":["Informational"],"summary":"Returns all capabilities this version of the controller is aware of, enabled or not.","operationId":"listEnumeratedCapabilities","responses":{"200":{"description":"A typed and enumerated list of capabilities","schema":{"$ref":"#/definitions/listEnumeratedCapabilitiesEnvelope"}}}}},"/external-jwt-signers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of external JWT signers for authentication","tags":["External JWT Signer"],"summary":"List Client Authentication External JWT","operationId":"listExternalJwtSigners","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of External JWT Signers","schema":{"$ref":"#/definitions/listClientExternalJwtSignersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-response":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Submits posture responses","tags":["Posture Checks"],"summary":"Submit a posture response to a posture query","operationId":"createPostureResponse","parameters":[{"description":"A Posture Response","name":"postureResponse","in":"body","required":true,"schema":{"$ref":"#/definitions/postureResponseCreate"}}],"responses":{"201":{"description":"Contains a list of services that have had their timers altered","schema":{"$ref":"#/definitions/postureResponseEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-response-bulk":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Submits posture responses","tags":["Posture Checks"],"summary":"Submit multiple posture responses","operationId":"createPostureResponseBulk","parameters":[{"description":"A Posture Response","name":"postureResponse","in":"body","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/postureResponseCreate"}}}],"responses":{"200":{"description":"Contains a list of services that have had their timers altered","schema":{"$ref":"#/definitions/postureResponseEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/protocols":{"get":{"security":[],"tags":["Informational"],"summary":"Return a list of the listening Edge protocols","operationId":"listProtocols","responses":{"200":{"description":"A list of supported Edge protocols","schema":{"$ref":"#/definitions/listProtocolsEnvelope"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List services","operationId":"listServices","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/services/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service by id. Requires admin access.","tags":["Service"],"summary":"Retrieves a single service","operationId":"detailService","responses":{"200":{"description":"A single service","schema":{"$ref":"#/definitions/detailServiceEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service by id. Requires admin access.","tags":["Service"],"summary":"Update all fields on a service","operationId":"updateService","parameters":[{"description":"A service update object","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service by id. Requires admin access.","tags":["Service"],"summary":"Delete a service","operationId":"deleteService","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service. Requires admin access.","tags":["Service"],"summary":"Update the supplied fields on a service","operationId":"patchService","parameters":[{"description":"A service patch object","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the list of edge routers permitted to handle traffic for the specified service\\n","tags":["Service"],"summary":"List of edge routers permitted to handle traffic for the specified service","operationId":"listServiceEdgeRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"string","description":"an optional JWT token use to authenticate the request. If provided, the token must be valid else a not authorized response is returned.","name":"session-token","in":"header"}],"responses":{"200":{"description":"A list of edge routers suitable for dialing or binding the specified service by the authenticated identity","schema":{"$ref":"#/definitions/listServiceEdgeRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.\\n","tags":["Service"],"summary":"List of terminators assigned to a service","operationId":"listServiceTerminators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of terminators","schema":{"$ref":"#/definitions/listClientTerminatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of active sessions resources; supports filtering, sorting, and pagination.\\n\\nSessions are tied to an API session and are moved when an API session times out or logs out. Active sessions\\n(i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.\\n","tags":["Session"],"summary":"List sessions","operationId":"listSessions","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of sessions","schema":{"$ref":"#/definitions/listSessionsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a session resource.","tags":["Session"],"summary":"Create a session resource","operationId":"createSession","parameters":[{"description":"A session to create","name":"session","in":"body","required":true,"schema":{"$ref":"#/definitions/sessionCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/sessionCreateEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session by id.","tags":["Session"],"summary":"Retrieves a single session","operationId":"detailSession","responses":{"200":{"description":"A single session","schema":{"$ref":"#/definitions/detailSessionEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a session by id.","tags":["Session"],"summary":"Delete a session","operationId":"deleteSession","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/specs":{"get":{"security":[],"description":"Returns a list of spec files embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Returns a list of API specs","operationId":"listSpecs","responses":{"200":{"description":"A list of specifications","schema":{"$ref":"#/definitions/listSpecsEnvelope"}}}}},"/specs/{id}":{"get":{"security":[],"description":"Returns single spec resource embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Return a single spec resource","operationId":"detailSpec","responses":{"200":{"description":"A single specification","schema":{"$ref":"#/definitions/detailSpecEnvelope"}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/specs/{id}/spec":{"get":{"security":[],"description":"Return the body of the specification (i.e. Swagger, OpenAPI 2.0, 3.0, etc).","produces":["text/yaml","application/json"],"tags":["Informational"],"summary":"Returns the spec\'s file","operationId":"detailSpecBody","responses":{"200":{"description":"Returns the document that represents the specification","schema":{"$ref":"#/definitions/detailSpecBodyEnvelope"}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/version":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listVersion","responses":{"200":{"description":"Version information for the controller","schema":{"$ref":"#/definitions/listVersionEnvelope"}}}}}},"definitions":{"apiError":{"type":"object","properties":{"args":{"$ref":"#/definitions/apiErrorArgs"},"cause":{"$ref":"#/definitions/apiErrorCause"},"causeMessage":{"type":"string"},"code":{"type":"string"},"data":{"type":"object","additionalProperties":true},"message":{"type":"string"},"requestId":{"type":"string"}}},"apiErrorArgs":{"type":"object","properties":{"urlVars":{"type":"object","additionalProperties":{"type":"string"}}}},"apiErrorCause":{"allOf":[{"$ref":"#/definitions/apiFieldError"},{"$ref":"#/definitions/apiError"}]},"apiErrorEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/definitions/apiError"},"meta":{"$ref":"#/definitions/meta"}}},"apiFieldError":{"type":"object","properties":{"field":{"type":"string"},"reason":{"type":"string"},"value":{"description":"can be any value - string, number, boolean, array or object"}}},"apiSessionDetail":{"description":"An API Session object","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["token","identity","identityId","configTypes","ipAddress","authQueries","cachedUpdatedAt","isMfaRequired","isMfaComplete","authenticatorId"],"properties":{"authQueries":{"$ref":"#/definitions/authQueryList"},"authenticatorId":{"type":"string"},"cachedLastActivityAt":{"type":"string","format":"date-time"},"configTypes":{"type":"array","items":{"type":"string"}},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"ipAddress":{"type":"string"},"isMfaComplete":{"type":"boolean"},"isMfaRequired":{"type":"boolean"},"lastActivityAt":{"type":"string","format":"date-time"},"token":{"type":"string"}}}]},"apiVersion":{"type":"object","required":["path"],"properties":{"apiBaseUrls":{"type":"array","items":{"type":"string"}},"path":{"type":"string"},"version":{"type":"string"}}},"attributes":{"description":"A set of strings used to loosly couple this resource to policies","type":"array","items":{"type":"string"},"x-nullable":true,"x-omitempty":true},"authQueryDetail":{"type":"object","required":["provider"],"properties":{"format":{"$ref":"#/definitions/mfaFormats"},"httpMethod":{"type":"string"},"httpUrl":{"type":"string"},"maxLength":{"type":"integer"},"minLength":{"type":"integer"},"provider":{"$ref":"#/definitions/mfaProviders"},"typeId":{"type":"string"}}},"authQueryList":{"type":"array","items":{"$ref":"#/definitions/authQueryDetail"}},"authenticate":{"description":"A generic authenticate object meant for use with the /authenticate path. Required fields depend on authentication method.","type":"object","properties":{"configTypes":{"$ref":"#/definitions/configTypes"},"envInfo":{"$ref":"#/definitions/envInfo"},"password":{"$ref":"#/definitions/password"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"},"username":{"$ref":"#/definitions/username"}}},"authenticatorDetail":{"description":"A singular authenticator resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["method","identityId","identity"],"properties":{"certPem":{"type":"string"},"fingerprint":{"type":"string"},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"method":{"type":"string"},"username":{"type":"string"}}}]},"authenticatorList":{"description":"An array of authenticator resources","type":"array","items":{"$ref":"#/definitions/authenticatorDetail"}},"authenticatorPatch":{"description":"All of the fields on an authenticator that may be updated","type":"object","properties":{"password":{"$ref":"#/definitions/passwordNullable"},"tags":{"$ref":"#/definitions/tags"},"username":{"$ref":"#/definitions/usernameNullable"}}},"authenticatorPatchWithCurrent":{"description":"All of the fields on an authenticator that may be updated","type":"object","allOf":[{"$ref":"#/definitions/authenticatorPatch"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/definitions/password"}}}]},"authenticatorUpdate":{"description":"All of the fields on an authenticator that will be updated","type":"object","required":["username","password"],"properties":{"password":{"$ref":"#/definitions/password"},"tags":{"$ref":"#/definitions/tags"},"username":{"$ref":"#/definitions/username"}}},"authenticatorUpdateWithCurrent":{"description":"All of the fields on an authenticator that will be updated","type":"object","allOf":[{"$ref":"#/definitions/authenticatorUpdate"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/definitions/password"}}}]},"baseEntity":{"description":"Fields shared by all Edge API entities","type":"object","required":["id","createdAt","updatedAt","_links"],"properties":{"_links":{"$ref":"#/definitions/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"tags":{"$ref":"#/definitions/tags"},"updatedAt":{"type":"string","format":"date-time"}}},"capabilities":{"type":"string","enum":["OIDC_AUTH","HA_CONTROLLER"]},"clientExternalJwtSignerDetail":{"description":"A External JWT Signer resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","externalAuthUrl"],"properties":{"externalAuthUrl":{"type":"string","format":"url"},"name":{"type":"string","example":"MyApps Signer"}}}]},"clientExternalJwtSignerList":{"description":"An array of External JWT Signers resources","type":"array","items":{"$ref":"#/definitions/clientExternalJwtSignerDetail"}},"commonEdgeRouterProperties":{"type":"object","required":["hostname","name","supportedProtocols","syncStatus","isOnline","cost","noTraversal","disabled"],"properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean"},"hostname":{"type":"string"},"isOnline":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"supportedProtocols":{"type":"object","additionalProperties":{"type":"string"}},"syncStatus":{"type":"string"}}},"configTypes":{"description":"Specific configuration types that should be returned","type":"array","items":{"type":"string"}},"createCurrentApiSessionCertificateEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionCertificateCreateResponse"},"meta":{"$ref":"#/definitions/meta"}}},"createEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/createLocation"},"meta":{"$ref":"#/definitions/meta"}}},"createLocation":{"type":"object","properties":{"_links":{"$ref":"#/definitions/links"},"id":{"type":"string"}}},"currentApiSessionCertificateCreate":{"type":"object","required":["csr"],"properties":{"csr":{"type":"string"}}},"currentApiSessionCertificateCreateResponse":{"allOf":[{"$ref":"#/definitions/createLocation"},{"type":"object","required":["certificate"],"properties":{"cas":{"type":"string"},"certificate":{"type":"string"}}}]},"currentApiSessionCertificateDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["subject","fingerprint","validFrom","validTo","certificate"],"properties":{"certificate":{"type":"string"},"fingerprint":{"type":"string"},"subject":{"type":"string"},"validFrom":{"type":"string","format":"date-time"},"validTo":{"type":"string","format":"date-time"}}}]},"currentApiSessionCertificateList":{"type":"array","items":{"$ref":"#/definitions/currentApiSessionCertificateDetail"}},"currentApiSessionDetail":{"description":"An API Session object for the current API session","type":"object","allOf":[{"$ref":"#/definitions/apiSessionDetail"},{"type":"object","required":["expiresAt","expirationSeconds"],"properties":{"expirationSeconds":{"type":"integer"},"expiresAt":{"type":"string","format":"date-time"}}}]},"currentApiSessionDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"currentApiSessionServiceUpdateList":{"type":"object","required":["lastChangeAt"],"properties":{"lastChangeAt":{"type":"string","format":"date-time"}}},"currentIdentityDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityDetail"},"meta":{"$ref":"#/definitions/meta"}}},"currentIdentityEdgeRouterDetail":{"description":"A detail edge router resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"$ref":"#/definitions/commonEdgeRouterProperties"}]},"currentIdentityEdgeRouterList":{"description":"A list of edge router resources","type":"array","items":{"$ref":"#/definitions/currentIdentityEdgeRouterDetail"}},"detailAuthenticatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/authenticatorDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailCurrentApiSessionCertificateEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionCertificateDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailMfa":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"required":["isVerified"],"properties":{"isVerified":{"type":"boolean"},"provisioningUrl":{"description":"Not provided if MFA verification has been completed","type":"string"},"recoveryCodes":{"description":"Not provided if MFA verification has been completed","type":"array","items":{"type":"string"}}}}]},"detailMfaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/detailMfa"},"meta":{"$ref":"#/definitions/meta"}}},"detailMfaRecoveryCodes":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"required":["recoveryCodes"],"properties":{"recoveryCodes":{"type":"array","items":{"type":"string"}}}}]},"detailMfaRecoveryCodesEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/definitions/detailMfaRecoveryCodes"},"meta":{"$ref":"#/definitions/meta"}}},"detailServiceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSessionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSpecBodyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specBodyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSpecEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specDetail"},"meta":{"$ref":"#/definitions/meta"}}},"dialBind":{"type":"string","enum":["Dial","Bind"]},"dialBindArray":{"type":"array","items":{"$ref":"#/definitions/dialBind"}},"empty":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"object","example":{}},"meta":{"$ref":"#/definitions/meta"}}},"enrollmentCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates to trust","type":"string"},"cert":{"description":"A PEM encoded cert for the server","type":"string"},"serverCert":{"description":"A PEM encoded set of certificates to use as the servers chain","type":"string"}}},"enrollmentCertsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/enrollmentCerts"},"meta":{"$ref":"#/definitions/meta"}}},"entityRef":{"description":"A reference to another resource and links to interact with it","type":"object","properties":{"_links":{"$ref":"#/definitions/links"},"entity":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"}}},"envInfo":{"description":"Environment information an authenticating client may provide","type":"object","properties":{"arch":{"type":"string"},"os":{"type":"string"},"osRelease":{"type":"string"},"osVersion":{"type":"string"}}},"identityAuthenticators":{"type":"object","properties":{"cert":{"type":"object","properties":{"fingerprint":{"type":"string"},"id":{"type":"string"}}},"updb":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"}}}}},"identityDetail":{"description":"Detail of a specific identity","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","type","typeId","isDefaultAdmin","isAdmin","authenticators","enrollment","envInfo","sdkInfo","roleAttributes","hasEdgeRouterConnection","hasApiSession","isMfaEnabled","serviceHostingPrecedences","serviceHostingCosts","defaultHostingCost","authPolicyId","authPolicy","externalId","disabled"],"properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicy":{"$ref":"#/definitions/entityRef"},"authPolicyId":{"type":"string"},"authenticators":{"$ref":"#/definitions/identityAuthenticators"},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"disabled":{"type":"boolean"},"disabledAt":{"type":"string","format":"date-time","x-nullable":true},"disabledUntil":{"type":"string","format":"date-time","x-nullable":true},"enrollment":{"$ref":"#/definitions/identityEnrollments"},"envInfo":{"$ref":"#/definitions/envInfo"},"externalId":{"type":"string","x-nullable":true},"hasApiSession":{"type":"boolean"},"hasEdgeRouterConnection":{"type":"boolean"},"isAdmin":{"type":"boolean"},"isDefaultAdmin":{"type":"boolean"},"isMfaEnabled":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"type":{"$ref":"#/definitions/entityRef"},"typeId":{"type":"string"}}}]},"identityEnrollments":{"type":"object","properties":{"ott":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"ottca":{"type":"object","properties":{"ca":{"$ref":"#/definitions/entityRef"},"caId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"updb":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}}}},"identityExtendCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates","type":"string"},"clientCert":{"description":"A PEM encoded client certificate","type":"string"}}},"identityExtendEnrollmentEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/identityExtendCerts"},"meta":{"$ref":"#/definitions/meta"}}},"identityExtendEnrollmentRequest":{"type":"object","required":["clientCertCsr"],"properties":{"clientCertCsr":{"type":"string"}}},"identityExtendValidateEnrollmentRequest":{"type":"object","required":["clientCert"],"properties":{"clientCert":{"description":"A PEM encoded client certificate previously returned after an extension request","type":"string"}}},"link":{"description":"A link to another resource","type":"object","required":["href"],"properties":{"comment":{"type":"string"},"href":{"type":"string","format":"uri"},"method":{"type":"string"}}},"links":{"description":"A map of named links","type":"object","additionalProperties":{"$ref":"#/definitions/link"},"x-omitempty":false},"listAuthenticatorsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/authenticatorList"},"meta":{"$ref":"#/definitions/meta"}}},"listClientExternalJwtSignersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/clientExternalJwtSignerList"},"meta":{"$ref":"#/definitions/meta"}}},"listClientTerminatorsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/terminatorClientList"},"meta":{"$ref":"#/definitions/meta"}}},"listCurrentApiSessionCertificatesEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionCertificateList"},"meta":{"$ref":"#/definitions/meta"}}},"listCurrentApiSessionServiceUpdatesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionServiceUpdateList"},"meta":{"$ref":"#/definitions/meta"}}},"listCurrentIdentityEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentIdentityEdgeRouterList"},"meta":{"$ref":"#/definitions/meta"}}},"listEnumeratedCapabilitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/definitions/capabilities"}},"meta":{"$ref":"#/definitions/meta"}}},"listProtocols":{"type":"object","additionalProperties":{"$ref":"#/definitions/protocol"}},"listProtocolsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/listProtocols"},"meta":{"$ref":"#/definitions/meta"}}},"listServiceEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceEdgeRouters"},"meta":{"$ref":"#/definitions/meta"}}},"listServicesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceList"},"meta":{"$ref":"#/definitions/meta"}}},"listSessionsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionList"},"meta":{"$ref":"#/definitions/meta"}}},"listSpecsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specList"},"meta":{"$ref":"#/definitions/meta"}}},"listVersionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/version"},"meta":{"$ref":"#/definitions/meta"}}},"meta":{"type":"object","properties":{"apiEnrollmentVersion":{"type":"string"},"apiVersion":{"type":"string"},"filterableFields":{"type":"array","items":{"type":"string"},"x-omitempty":true},"pagination":{"$ref":"#/definitions/pagination"}}},"mfaCode":{"type":"object","required":["code"],"properties":{"code":{"type":"string"}}},"mfaFormats":{"type":"string","enum":["numeric","alpha","alphaNumeric"]},"mfaProviders":{"type":"string","enum":["ziti","url"]},"osType":{"type":"string","enum":["Windows","WindowsServer","Android","iOS","Linux","macOS"]},"pagination":{"type":"object","required":["limit","offset","totalCount"],"properties":{"limit":{"type":"number","format":"int64"},"offset":{"type":"number","format":"int64"},"totalCount":{"type":"number","format":"int64"}}},"password":{"type":"string","maxLength":100,"minLength":5},"passwordNullable":{"type":"string","maxLength":100,"minLength":5,"x-nullable":true},"postureCheckType":{"type":"string","enum":["OS","PROCESS","DOMAIN","MAC","MFA","PROCESS_MULTI"]},"postureQueries":{"type":"object","required":["policyId","isPassing","postureQueries"],"properties":{"isPassing":{"type":"boolean"},"policyId":{"type":"string"},"policyType":{"$ref":"#/definitions/dialBind"},"postureQueries":{"type":"array","items":{"$ref":"#/definitions/postureQuery"}}}},"postureQuery":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["queryType","isPassing","timeout","timeoutRemaining"],"properties":{"isPassing":{"type":"boolean"},"process":{"$ref":"#/definitions/postureQueryProcess"},"processes":{"type":"array","items":{"$ref":"#/definitions/postureQueryProcess"}},"queryType":{"$ref":"#/definitions/postureCheckType"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}}]},"postureQueryProcess":{"type":"object","properties":{"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"}}},"postureResponse":{"type":"object","required":["services"],"properties":{"services":{"type":"array","items":{"$ref":"#/definitions/postureResponseService"}}}},"postureResponseCreate":{"type":"object","required":["id","typeId"],"properties":{"id":{"type":"string"},"typeId":{"$ref":"#/definitions/postureCheckType"}},"discriminator":"typeId"},"postureResponseDomainCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","required":["domain"],"properties":{"domain":{"type":"string"}}}],"x-class":"DOMAIN"},"postureResponseEndpointStateCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","properties":{"unlocked":{"type":"boolean"},"woken":{"type":"boolean"}}}],"x-class":"ENDPOINT_STATE"},"postureResponseEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureResponse"},"meta":{"$ref":"#/definitions/meta"}}},"postureResponseMacAddressCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","items":{"type":"string"}}}}],"x-class":"MAC"},"postureResponseOperatingSystemCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","required":["type","version"],"properties":{"build":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}}],"x-class":"OS"},"postureResponseProcessCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","required":["process"],"properties":{"hash":{"type":"string"},"isRunning":{"type":"boolean"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}}],"x-class":"PROCESS"},"postureResponseService":{"type":"object","required":["id","name","postureQueryType","timeout","timeoutRemaining"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"postureQueryType":{"type":"string"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}},"protocol":{"type":"object","required":["address"],"properties":{"address":{"type":"string"}}},"routerExtendEnrollmentRequest":{"type":"object","required":["serverCertCsr","certCsr"],"properties":{"certCsr":{"type":"string"},"serverCertCsr":{"type":"string"}}},"sdkInfo":{"description":"SDK information an authenticating client may provide","type":"object","properties":{"appId":{"type":"string"},"appVersion":{"type":"string"},"branch":{"type":"string"},"revision":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}},"serviceDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","terminatorStrategy","roleAttributes","permissions","configs","config","encryptionRequired","postureQueries"],"properties":{"config":{"description":"map of config data for this service keyed by the config type name. Only configs of the types requested will be returned.","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"permissions":{"$ref":"#/definitions/dialBindArray"},"postureQueries":{"type":"array","items":{"$ref":"#/definitions/postureQueries"}},"roleAttributes":{"$ref":"#/definitions/attributes"},"terminatorStrategy":{"type":"string"}}}]},"serviceEdgeRouters":{"type":"object","properties":{"edgeRouters":{"type":"array","items":{"$ref":"#/definitions/commonEdgeRouterProperties"}}}},"serviceList":{"type":"array","items":{"$ref":"#/definitions/serviceDetail"}},"servicePatch":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"serviceUpdate":{"type":"object","required":["name"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"sessionCreate":{"type":"object","properties":{"serviceId":{"type":"string"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/dialBind"}}},"sessionCreateEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/sessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"sessionDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["type","apiSessionId","apiSession","serviceId","service","token","edgeRouters","identityId"],"properties":{"apiSession":{"$ref":"#/definitions/entityRef"},"apiSessionId":{"type":"string"},"edgeRouters":{"type":"array","items":{"$ref":"#/definitions/sessionEdgeRouter"}},"identityId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"},"token":{"type":"string"},"type":{"$ref":"#/definitions/dialBind"}}}]},"sessionEdgeRouter":{"allOf":[{"$ref":"#/definitions/commonEdgeRouterProperties"},{"type":"object","required":["urls"],"properties":{"urls":{"type":"object","additionalProperties":{"type":"string"}}}}]},"sessionList":{"type":"array","items":{"$ref":"#/definitions/sessionDetail"}},"specBodyDetail":{"type":"string"},"specDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}]},"specList":{"type":"array","items":{"$ref":"#/definitions/specDetail"}},"subTags":{"type":"object","additionalProperties":{"type":"object"}},"tags":{"description":"A map of user defined fields and values. The values are limited to the following types/values: null, string, boolean","allOf":[{"$ref":"#/definitions/subTags"}],"x-nullable":true},"terminatorClientDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["serviceId","service","routerId","identity"],"properties":{"identity":{"type":"string"},"routerId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"}}}]},"terminatorClientList":{"type":"array","items":{"$ref":"#/definitions/terminatorClientDetail"}},"terminatorCost":{"type":"integer","maximum":65535,"minimum":0},"terminatorCostMap":{"type":"object","additionalProperties":{"$ref":"#/definitions/terminatorCost"}},"terminatorPrecedence":{"type":"string","enum":["default","required","failed"]},"terminatorPrecedenceMap":{"type":"object","additionalProperties":{"$ref":"#/definitions/terminatorPrecedence"}},"username":{"type":"string","maxLength":100,"minLength":4},"usernameNullable":{"type":"string","maxLength":100,"minLength":4,"x-nullable":true},"version":{"type":"object","properties":{"apiVersions":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/definitions/apiVersion"}}},"buildDate":{"type":"string","example":"2020-02-11 16:09:08"},"capabilities":{"type":"array","items":{"type":"string"}},"revision":{"type":"string","example":"ea556fc18740"},"runtimeVersion":{"type":"string","example":"go1.13.5"},"version":{"type":"string","example":"v0.9.0"}}}},"securityDefinitions":{"oauth2":{"type":"oauth2","flow":"accessCode","authorizationUrl":"/oidc/authorize","tokenUrl":"/oidc/token","scopes":{"openid":"openid"}},"ztSession":{"description":"An API Key that is provided post authentication","type":"apiKey","name":"zt-session","in":"header"}}}},"edge-management":{"converted":{"openapi":"3.0.0","info":{"description":"OpenZiti Edge Management API","title":"Ziti Edge Management","contact":{"name":"OpenZiti","url":"https://openziti.discourse.group","email":"help@openziti.org"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.26.1"},"paths":{"/":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listRoot","responses":{"200":{"description":"Version information for the controller","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listVersionEnvelope"}}}}}}},"/.well-known/est/cacerts":{"get":{"security":[],"description":"This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.\\nThis endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library\\nthat supports parsing PKCS7 stores.\\n","tags":["Well Known"],"summary":"Get CA Cert Store","operationId":"listWellKnownCas","responses":{"200":{"description":"A base64 encoded PKCS7 store","content":{"application/pkcs7-mime":{"schema":{"type":"string","example":"MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG\\nBjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw\\nFQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD\\nVQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl\\nIEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx\\nODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI\\nDA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg\\nTmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv\\ndW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z\\nKIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ\\nNJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa\\nVK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl\\n7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s\\n6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb\\nQGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010\\nXdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU\\nHe16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW\\nghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb\\nryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw\\nHQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu\\nOuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD\\nAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE\\ngRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS\\nCpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7\\nKOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+\\nrMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X\\n6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI\\nFximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN\\n8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw\\nBHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2\\nYSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo\\nLLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq\\ndH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB\\nlzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH\\nDAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv\\ndW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5\\nIFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG\\nA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy\\nbG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg\\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg\\nQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD\\nDIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw\\nHDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f\\nWsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV\\nXO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv\\npnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD\\nw2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI\\nKyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo\\n783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm\\npQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE\\nWFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F\\n6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa\\nbADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD\\nVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB\\nACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy\\n3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY\\nuEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn\\ncCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS\\nWI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg\\nAX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO\\nwEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y\\nqQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m\\nfGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh\\ndprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8\\n3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==\\n"}}}}}}},"/api-sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of active API sessions. The resources can be sorted, filtered, and paginated. This endpoint\\nrequires admin access.\\n","tags":["API Session"],"summary":"List active API sessions","operationId":"listAPISessions","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of active API Sessions","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/listApiSessionsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/api-sessions/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single API Session by id. Requires admin access.","tags":["API Session"],"summary":"Retrieves a single API Session","operationId":"detailAPISessions","responses":{"200":{"description":"Retrieves a singular API Session by id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailApiSessionEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Deletes and API sesion by id. Requires admin access.","tags":["API Session"],"summary":"Deletes an API Sessions","operationId":"deleteAPISessions","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"403":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/auth-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of Auth Policies","tags":["Auth Policy"],"summary":"List Auth Policies","operationId":"listAuthPolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of Auth Policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthPoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Creates an Auth Policy. Requires admin access.","tags":["Auth Policy"],"summary":"Creates an Auth Policy","operationId":"createAuthPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authPolicyCreate"}}},"description":"An Auth Policy to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/auth-policies/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Retrieves a single Auth Policy","operationId":"detailAuthPolicy","responses":{"200":{"description":"A singular Auth Policy resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailAuthPolicyEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on an Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Update all fields on an Auth Policy","operationId":"updateAuthPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authPolicyUpdate"}}},"description":"An Auth Policy update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete an Auth Policy by id. Requires admin access.\\n","tags":["Auth Policy"],"summary":"Delete an Auth Policy","operationId":"deleteAuthPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update only the supplied fields on an Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Update the supplied fields on an Auth Policy","operationId":"patchAuthPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authPolicyPatch"}}},"description":"An Auth Policy patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/authenticate":{"post":{"security":[],"description":"Allowed authentication methods include \\"password\\", \\"cert\\", and \\"ext-jwt\\"\\n","tags":["Authentication"],"summary":"Authenticate via a method supplied via a query string parameter","operationId":"authenticate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticate"}}}},"responses":{"200":{"description":"The API session associated with the session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The authentication request could not be processed as the credentials are invalid","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"INVALID_AUTH","message":"The authentication request failed","requestId":"5952ed10-3091-474f-a691-47ebab6990dc"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"method","in":"query","required":true,"schema":{"type":"string","enum":["password","cert","ext-jwt"]}}]},"/authenticate/mfa":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA authentication by submitting a MFA time based one time token or backup code.","tags":["Authentication","MFA"],"summary":"Complete MFA authentication","operationId":"authenticateMfa","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}}}}},"/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of authenticators associated to identities. The resources can be sorted, filtered, and paginated.\\nThis endpoint requires admin access.\\n","tags":["Authenticator"],"summary":"List authenticators","operationId":"listAuthenticators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of authenticators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthenticatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Creates an authenticator for a specific identity. Requires admin access.\\n","tags":["Authenticator"],"summary":"Creates an authenticator","operationId":"createAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorCreate"}}},"description":"A Authenticator create object","required":true},"responses":{"201":{"description":"The create was successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorCreate"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/authenticators/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Retrieves a single authenticator","operationId":"detailAuthenticator","responses":{"200":{"description":"A singular authenticator resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailAuthenticatorEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on an authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Update all fields on an authenticator","operationId":"updateAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorUpdate"}}},"description":"An authenticator put object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete an authenticator by id. Deleting all authenticators for an identity will make it impossible to log in.\\nRequires admin access.\\n","tags":["Authenticator"],"summary":"Delete an Authenticator","operationId":"deleteAuthenticator","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on an authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Update the supplied fields on an authenticator","operationId":"patchAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorPatch"}}},"description":"An authenticator patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/authenticators/{id}/re-enroll":{"post":{"security":[{"ztSession":[]}],"description":"Allows an authenticator to be reverted to an enrollment and allows re-enrollment to occur. On success the \\ncreated enrollment record response is provided and the source authenticator record will be deleted. The \\nenrollment created depends on the authenticator. UPDB authenticators result in UPDB enrollments, CERT\\nauthenticators result in OTT enrollments, CERT + CA authenticators result in OTTCA enrollments.\\n","tags":["Authenticator"],"summary":"Reverts an authenticator to an enrollment","operationId":"reEnrollAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/reEnroll"}}},"description":"A reEnrollment request","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/cas":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of CA resources; supports filtering, sorting, and pagination. Requires admin access.","tags":["Certificate Authority"],"summary":"List CAs","operationId":"listCas","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of Certificate Authorities (CAs)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listCasEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Creates a CA in an unverified state. Requires admin access.","tags":["Certificate Authority"],"summary":"Creates a CA","operationId":"createCa","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/caCreate"}}},"description":"A CA to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/cas/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Retrieves a single CA","operationId":"detailCa","responses":{"200":{"description":"A singular Certificate Authority (CA) resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailCaEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on a CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Update all fields on a CA","operationId":"updateCa","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/caUpdate"}}},"description":"A CA update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete a CA by id. Deleting a CA will delete its associated certificate authenticators. This can make it\\nimpossible for identities to authenticate if they no longer have any valid authenticators. Requires admin access.\\n","tags":["Certificate Authority"],"summary":"Delete a CA","operationId":"deleteCa","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update only the supplied fields on a CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Update the supplied fields on a CA","operationId":"patchCa","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/caPatch"}}},"description":"A CA patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/cas/{id}/jwt":{"get":{"security":[{"ztSession":[]}],"description":"For CA auto enrollment, the enrollment JWT is static and provided on each CA resource. This endpoint provides\\nthe jwt as a text response.\\n","tags":["Certificate Authority"],"summary":"Retrieve the enrollment JWT for a CA","operationId":"getCaJwt","responses":{"200":{"description":"The result is the JWT text to validate the CA","content":{"application/jwt":{"schema":{"type":"string"},"examples":{"response":{"value":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImNhIiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MTI 4MC8ifQ.Ot6lhNBSOw8ygHytdI5l7WDf9EWadOj44UPvJ0c-8mJ54fClWM3uMZrAHSSfV6KmOSZOeBBJe4VlNyoD-_MOECP0BzYSnSQP3E zJb0VlM-fFmGcKNGW157icyZNISfO43JL_Lw2QPBzTgikqSIj9eZnocC3BeAmZCHsVznnLfHWqDldcmuxnu-5MNOSrWV1x9iVcgLFlLHXK 2PLA4qIiZmlQTrQjpHJmUaoJ07mnj8hMKzxB3wBG8kpazjEo7HDRCO06aBH4eqFgf_l0iT8Dzcb31jquWMGUoSXPhf4lVJh_FiNcR1wVx- UiHLbG5h23Aqf1UJF-F38rc1FElKz0Zg"}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/jwt":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/jwt":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/jwt":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/cas/{id}/verify":{"post":{"security":[{"ztSession":[]}],"description":"Allows a CA to become verified by submitting a certificate in PEM format that has been signed by the target CA.\\nThe common name on the certificate must match the verificationToken property of the CA. Unverfieid CAs can not\\nbe used for enrollment/authentication. Requires admin access.\\n","tags":["Certificate Authority"],"summary":"Verify a CA","operationId":"verifyCa","requestBody":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"A PEM formatted certificate signed by the target CA with the common name matching the CA\'s validationToken","required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/config-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config-type resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List config-types","operationId":"listConfigTypes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of config-types","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listConfigTypesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]}],"tags":["Config"],"summary":"Create a config-type. Requires admin access.","operationId":"createConfigType","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configTypeCreate"}}},"description":"A config-type to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/config-types/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single config-type by id. Requires admin access.","tags":["Config"],"summary":"Retrieves a single config-type","operationId":"detailConfigType","responses":{"200":{"description":"A singular config-type resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailConfigTypeEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on a config-type by id. Requires admin access.","tags":["Config"],"summary":"Update all fields on a config-type","operationId":"updateConfigType","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configTypeUpdate"}}},"description":"A config-type update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete a config-type by id. Removing a configuration type that are in use will result in a 409 conflict HTTP status code and error. All configurations of a type must be removed first.","tags":["Config"],"summary":"Delete a config-type","operationId":"deleteConfigType","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on a config-type. Requires admin access.","tags":["Config"],"summary":"Update the supplied fields on a config-type","operationId":"patchConfigType","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configTypePatch"}}},"description":"A config-type patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/config-types/{id}/configs":{"get":{"security":[{"ztSession":[]}],"description":"Lists the configs associated to a config-type. Requires admin access.","tags":["Config"],"summary":"Lists the configs of a specific config-type","operationId":"listConfigsForConfigType","responses":{"200":{"description":"A list of configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listConfigsEnvelope"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List configs","operationId":"listConfigs","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listConfigsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a config resource. Requires admin access.","tags":["Config"],"summary":"Create a config resource","operationId":"createConfig","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configCreate"}}},"description":"A config to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/configs/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single config by id. Requires admin access.","tags":["Config"],"summary":"Retrieves a single config","operationId":"detailConfig","responses":{"200":{"description":"A singular config resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailConfigEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a config by id. Requires admin access.","tags":["Config"],"summary":"Update all fields on a config","operationId":"updateConfig","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configUpdate"}}},"description":"A config update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a config by id. Requires admin access.","tags":["Config"],"summary":"Delete a config","operationId":"deleteConfig","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a config. Requires admin access.","tags":["Config"],"summary":"Update the supplied fields on a config","operationId":"patchConfig","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configPatch"}}},"description":"A config patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-api-session":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the API session that was used to issue the current request","tags":["Current API Session"],"summary":"Return the current API session","operationId":"getCurrentAPISession","responses":{"200":{"description":"The API session associated with the session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Terminates the current API session","tags":["Current API Session"],"summary":"Logout","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns the identity associated with the API sessions used to issue the current request","tags":["Current Identity"],"summary":"Return the current identity","operationId":"getCurrentIdentity","responses":{"200":{"description":"The identity associated with the API Session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentIdentityDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"edge-router-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers"},"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"},"service-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities"}},"authenticators":{"updb":{"username":"admin"}},"createdAt":"2020-01-13T16:38:13.6854788Z","enrollment":{},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","isAdmin":true,"isDefaultAdmin":true,"name":"Default Admin","roleAttributes":[],"tags":{},"type":{"_links":{"self":{"href":"./identity-types/User"}},"id":"User","name":"User","urlName":"identity-types"},"updatedAt":"2020-01-13T16:38:13.6854788Z"},"meta":{}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of authenticators assigned to the current API session\'s identity; supports filtering, sorting, and pagination.","tags":["Current API Session"],"summary":"List authenticators for the current identity","operationId":"listCurrentIdentityAuthenticators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of authenticators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthenticatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Will only show authenticators assigned to the API session\'s identity.","tags":["Current API Session"],"summary":"Retrieve an authenticator for the current identity","operationId":"detailCurrentIdentityAuthenticator","responses":{"200":{"description":"A singular authenticator resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailAuthenticatorEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session\'s\\nidentity.\\n","tags":["Current API Session"],"summary":"Update all fields on an authenticator of this identity","operationId":"updateCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorUpdateWithCurrent"}}},"description":"An authenticator put object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API\\nsession\'s identity.\\n","tags":["Current API Session"],"summary":"Update the supplied fields on an authenticator of this identity","operationId":"patchCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorPatchWithCurrent"}}},"description":"An authenticator patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/authenticators/{id}/extend":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.\\nAllows an identity to extend its certificate\'s expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.\\nThe response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.\\nAfter verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to recieve a new certificate associated with a certificate based authenticator","operationId":"extendCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"A response containg the identity\'s new certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendEnrollmentEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/authenticators/{id}/extend-verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.\\nAfter receipt, the new client certificate must be used for new authentication requests.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to validate reciept of a new client certificate","operationId":"extendVerifyCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendValidateEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/mfa":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.\\n","tags":["Current Identity","MFA"],"summary":"Returns the current status of MFA enrollment","operationId":"detailMfa","responses":{"200":{"description":"The details of an MFA enrollment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailMfaEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`\\n","tags":["Current Identity","MFA"],"summary":"Initiate MFA enrollment","operationId":"enrollMfa","responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The identity is already enrolled in MFA","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":null,"cause":null,"causeMessage":"","code":"ALREADY_MFA_ENROLLED","message":"The identity is already enrolled in MFA","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Disable MFA for the current identity","operationId":"deleteMfa","parameters":[{"name":"mfa-validation-code","in":"header","schema":{"type":"string"}}],"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa/qr-code":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.\\n","tags":["Current Identity","MFA"],"summary":"Show a QR code for unverified MFA enrollments","operationId":"detailMfaQrCode","responses":{"200":{"description":"OK"},"404":{"description":"No MFA enrollment or MFA enrollment is completed"}}}},"/current-identity/mfa/recovery-codes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment view the current recovery codes","operationId":"detailMfaRecoveryCodes","parameters":[{"name":"mfa-validation-code","in":"header","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/mfaCode"}}},"description":"An MFA validation request"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment regenerate the recovery codes","operationId":"createMfaRecoveryCodes","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"The recovery codes of an MFA enrollment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailMfaRecoveryCodesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Complete MFA enrollment by verifying a time based one time token","operationId":"verifyMfa","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/database/check-data-integrity":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Starts a data integrity scan on the datastore. Requires admin access. Only once instance may run at a time, including runs of fixDataIntegrity.","tags":["Database"],"summary":"Starts a data integrity scan on the datastore","operationId":"checkDataIntegrity","responses":{"202":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/database/data-integrity-results":{"get":{"security":[{"ztSession":[]}],"description":"Returns any results found from in-progress integrity checks. Requires admin access.","tags":["Database"],"summary":"Returns any results found from in-progress integrity checks","operationId":"dataIntegrityResults","responses":{"200":{"description":"A list of data integrity issues found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/dataIntegrityCheckResultEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/database/fix-data-integrity":{"post":{"security":[{"ztSession":[]}],"description":"Runs a data integrity scan on the datastore, attempts to fix any issues it can, and returns any found issues. Requires admin access. Only once instance may run at a time, including runs of checkDataIntegrity.","tags":["Database"],"summary":"Runs a data integrity scan on the datastore, attempts to fix any issues it can and returns any found issues","operationId":"fixDataIntegrity","responses":{"202":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/database/snapshot":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a new database snapshot. Requires admin access.","tags":["Database"],"summary":"Create a new database snapshot","operationId":"createDatabaseSnapshot","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List edge router policies","operationId":"listEdgeRouterPolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRouterPoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create an edge router policy resource. Requires admin access.","tags":["Edge Router Policy"],"summary":"Create an edge router policy resource","operationId":"createEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterPolicyCreate"}}},"description":"An edge router policy to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/edge-router-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Retrieves a single edge router policy","operationId":"detailEdgeRouterPolicy","responses":{"200":{"description":"A single edge router policy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailEdgeRouterPolicyEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Update all fields on an edge router policy","operationId":"updateEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterPolicyUpdate"}}},"description":"An edge router policy update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Delete an edge router policy","operationId":"deleteEdgeRouterPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an edge router policy. Requires admin access.","tags":["Edge Router Policy"],"summary":"Update the supplied fields on an edge router policy","operationId":"patchEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterPolicyPatch"}}},"description":"An edge router policy patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-router-policies/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge routers an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List edge routers a policy affects","operationId":"listEdgeRouterPolicyEdgeRouters","responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-router-policies/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List identities an edge router policy affects","operationId":"listEdgeRouterPolicyIdentities","responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-router-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by edge routers; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by edge routers","operationId":"listEdgeRouterRoleAttributes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of role attributes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoleAttributesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List edge routers","operationId":"listEdgeRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Create a edge router resource. Requires admin access.","tags":["Edge Router"],"summary":"Create an edge router","operationId":"createEdgeRouter","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterCreate"}}},"description":"A edge router to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/edge-routers/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Retrieves a single edge router","operationId":"detailEdgeRouter","responses":{"200":{"description":"A singular edge router resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailedEdgeRouterEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on an edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Update all fields on an edge router","operationId":"updateEdgeRouter","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterUpdate"}}},"description":"An edge router update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete an edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Delete an edge router","operationId":"deleteEdgeRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on an edge router. Requires admin access.","tags":["Edge Router"],"summary":"Update the supplied fields on an edge router","operationId":"patchEdgeRouter","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterPatch"}}},"description":"An edge router patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/edge-router-policies":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of edge router policies that apply to the specified edge router.","tags":["Edge Router"],"summary":"List the edge router policies that affect an edge router","operationId":"listEdgeRouterEdgeRouterPolicies","responses":{"200":{"description":"A list of edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRouterPoliciesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/identities":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of identities that may access services via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List associated identities","operationId":"listEdgeRouterIdentities","responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/re-enroll":{"post":{"security":[{"ztSession":[]}],"description":"Removes current certificate based authentication mechanisms and reverts the edge router into a state where enrollment must be performed.\\nThe router retains all other properties and associations. If the router is currently connected, it will be disconnected and any\\nattemps to reconnect will fail until the enrollment process is completed with the newly generated JWT.\\n\\nIf the edge router has an existing outstanding enrollment JWT it will be replaced. The previous JWT will no longer be usable to\\ncomplete the enrollment process.\\n","tags":["Edge Router"],"summary":"Re-enroll an edge router","operationId":"reEnrollEdgeRouter","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/service-edge-router-policies":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of service policies policies that apply to the specified edge router.","tags":["Edge Router"],"summary":"List the service policies that affect an edge router","operationId":"listEdgeRouterServiceEdgeRouterPolicies","responses":{"200":{"description":"A list of service policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicePoliciesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/services":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of services that may be accessed via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List associated services","operationId":"listEdgeRouterServices","responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/enrollments":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of outstanding enrollments; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Enrollment"],"summary":"List outstanding enrollments","operationId":"listEnrollments","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of enrollments","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEnrollmentsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a new OTT, OTTCA, or UPDB enrollment for a specific identity. If an enrollment of the same type is already outstanding the request will fail with a 409 conflict. If desired, an existing enrollment can be refreshed by `enrollments/:id/refresh` or deleted.","tags":["Enrollment"],"summary":"Create an outstanding enrollment for an identity","operationId":"createEnrollment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/enrollmentCreate"}}},"description":"An enrollment to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The request could not be completed due to a conflict of configuration or state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/enrollments/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single outstanding enrollment by id. Requires admin access.","tags":["Enrollment"],"summary":"Retrieves an outstanding enrollment","operationId":"detailEnrollment","responses":{"200":{"description":"A singular enrollment resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailEnrollmentEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an outstanding enrollment by id. Requires admin access.","tags":["Enrollment"],"summary":"Delete an outstanding enrollment","operationId":"deleteEnrollment","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/enrollments/{id}/refresh":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"For expired or unexpired enrollments, reset the expiration window. A new JWT will be generated and must be used for the enrollment.","tags":["Enrollment"],"summary":"Refreshes an enrollment record\'s expiration window","operationId":"refreshEnrollment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/enrollmentRefresh"}}},"description":"An enrollment refresh request","required":true},"responses":{"200":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/enumerated-capabiities":{"get":{"security":[],"tags":["Informational"],"summary":"Returns all capabilities this version of the controller is aware of, enabled or not.","operationId":"listEnumeratedCapabilities","responses":{"200":{"description":"A typed and enumerated list of capabilities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEnumeratedCapabilitiesEnvelope"}}}}}}},"/external-jwt-signers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of external JWT signers for authentication","tags":["External JWT Signer"],"summary":"List External JWT Signers","operationId":"listExternalJwtSigners","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of External JWT Signers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listExternalJwtSignersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an External JWT Signer. Requires admin access.","tags":["External JWT Signer"],"summary":"Creates an External JWT Signer","operationId":"createExternalJwtSigner","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/externalJwtSignerCreate"}}},"description":"An External JWT Signer to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/external-jwt-signers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Retrieves a single External JWT Signer","operationId":"detailExternalJwtSigner","responses":{"200":{"description":"A singular External JWT Signer resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailExternalJwtSignerEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Update all fields on an External JWT Signer","operationId":"updateExternalJwtSigner","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/externalJwtSignerUpdate"}}},"description":"An External JWT Signer update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an External JWT Signer by id. Requires admin access.\\n","tags":["External JWT Signer"],"summary":"Delete an External JWT Signer","operationId":"deleteExternalJwtSigner","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on an External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Update the supplied fields on an External JWT Signer","operationId":"patchExternalJwtSigner","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/externalJwtSignerPatch"}}},"description":"An External JWT Signer patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List identities","operationId":"listIdentities","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create an identity resource. Requires admin access.","tags":["Identity"],"summary":"Create an identity resource","operationId":"createIdentity","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityCreate"}}},"description":"An identity to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/identities/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single identity by id. Requires admin access.","tags":["Identity"],"summary":"Retrieves a single identity","operationId":"detailIdentity","responses":{"200":{"description":"A single identity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailIdentityEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an identity by id. Requires admin access.","tags":["Identity"],"summary":"Update all fields on an identity","operationId":"updateIdentity","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityUpdate"}}},"description":"An identity update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an identity by id. Requires admin access.","tags":["Identity"],"summary":"Delete an identity","operationId":"deleteIdentity","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an identity. Requires admin access.","tags":["Identity"],"summary":"Update the supplied fields on an identity","operationId":"patchIdentity","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityPatch"}}},"description":"An identity patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/authenticators":{"get":{"security":[{"ztSession":[]}],"description":"Returns a list of authenticators associated to the identity specified\\n","tags":["Identity"],"summary":"Retrieve the current authenticators of a specific identity","operationId":"getIdentityAuthenticators","responses":{"200":{"description":"A list of authenticators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthenticatorsEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/disable":{"post":{"security":[{"ztSession":[]}],"description":"Allows an admin disable an identity for a set amount of time or indefinitely.\\n","tags":["Identity"],"summary":"Set an identity as disabled","operationId":"disableIdentity","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/disableParams"}}},"description":"Disable parameters","required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policies that apply to the specified identity.","tags":["Identity"],"summary":"List the edge router policies that affect an identity","operationId":"listIdentitysEdgeRouterPolicies","responses":{"200":{"description":"A list of edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRouterPoliciesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge-routers that the given identity may use to access services. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List accessible edge-routers","operationId":"listIdentityEdgeRouters","responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/enable":{"post":{"security":[{"ztSession":[]}],"description":"Allows an admin to remove disabled statuses from an identity.\\n","tags":["Identity"],"summary":"Clears all disabled state from an identity","operationId":"enableIdentity","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/enrollments":{"get":{"security":[{"ztSession":[]}],"description":"Returns a list of enrollments associated to the identity specified\\n","tags":["Identity"],"summary":"Retrieve the current enrollments of a specific identity","operationId":"getIdentityEnrollments","responses":{"200":{"description":"A list of enrollments","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEnrollmentsEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/failed-service-requests":{"get":{"security":[{"ztSession":[]}],"description":"Returns a list of service session requests that failed due to posture checks. The entries will contain\\nevery policy that was verified against and every failed check in each policy. Each check will include\\nthe historical posture data and posture check configuration.\\n","tags":["Identity"],"summary":"Retrieve a list of the most recent service failure requests due to posture checks","operationId":"getIdentityFailedServiceRequests","responses":{"200":{"description":"Returns a list of service request failures","content":{"application/json":{"schema":{"$ref":"#/components/schemas/failedServiceRequestEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/mfa":{"delete":{"security":[{"ztSession":[]}],"description":"Allows an admin to remove MFA enrollment from a specific identity. Requires admin.\\n","tags":["Identity","MFA"],"summary":"Remove MFA from an identitity","operationId":"removeIdentityMfa","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/policy-advice/{serviceId}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Analyzes policies to see if the given identity should be able to dial or bind the given service. |\\nWill check services policies to see if the identity can access the service. Will check edge router policies |\\nto check if the identity and service have access to common edge routers so that a connnection can be made. |\\nWill also check if at least one edge router is on-line. Requires admin access.\\n","tags":["Identity"],"summary":"Analyze policies relating the given identity and service","operationId":"getIdentityPolicyAdvice","responses":{"200":{"description":"Returns the document that represents the policy advice","content":{"application/json":{"schema":{"$ref":"#/components/schemas/getIdentityPolicyAdviceEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}},{"description":"The id of a service","name":"serviceId","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/posture-data":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a nested map data represeting the posture data of the identity.\\nThis data should be considered volatile.\\n","tags":["Identity"],"summary":"Retrieve the curent posture data for a specific identity.","operationId":"getIdentityPostureData","responses":{"200":{"description":"Returns the document that represents posture data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureDataEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/service-configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service configs associated to a specific identity","tags":["Identity"],"summary":"List the service configs associated a specific identity","operationId":"listIdentitysServiceConfigs","responses":{"200":{"description":"A list of service configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServiceConfigsEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Associate service configs to a specific identity","tags":["Identity"],"summary":"Associate service configs for a specific identity","operationId":"associateIdentitysServiceConfigs","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceConfigsAssignList"}}},"description":"A service config patch object","required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Remove service configs from a specific identity","tags":["Identity"],"summary":"Remove associated service configs from a specific identity","operationId":"disassociateIdentitysServiceConfigs","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceConfigsAssignList"}}},"description":"An array of service and config id pairs to remove"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policies that apply to the specified identity.","tags":["Identity"],"summary":"List the service policies that affect an identity","operationId":"listIdentityServicePolicies","responses":{"200":{"description":"A list of service policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicePoliciesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of services that the given identity has access to. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List accessible services","operationId":"listIdentityServices","responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/trace":{"put":{"security":[{"ztSession":[]}],"description":"Allows an admin to enable/disable data flow tracing for an identity\\n","tags":["Identity","Tracing"],"summary":"Enable/disable data flow tracing for an identity","operationId":"updateIdentityTracing","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/traceSpec"}}},"description":"A traceSpec object","required":true},"responses":{"200":{"description":"Returns the document that represents the trace state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/traceDetailEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identity-role-attributes":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of role attributes in use by identities; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by identities","operationId":"listIdentityRoleAttributes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of role attributes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoleAttributesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/identity-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity types; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List available identity types","operationId":"listIdentityTypes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of identity types","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentityTypesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/identity-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single identity type by id. Requires admin access.","tags":["Identity"],"summary":"Retrieves a identity type","operationId":"detailIdentityType","responses":{"200":{"description":"A single identity type","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailIdentityTypeEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/posture-check-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture check types\\n","tags":["Posture Checks"],"summary":"List a subset of posture check types","operationId":"listPostureCheckTypes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of posture check types","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/listPostureCheckTypesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-check-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single posture check type by id","tags":["Posture Checks"],"summary":"Retrieves a single posture check type","operationId":"detailPostureCheckType","responses":{"200":{"description":"Retrieves a singular posture check type by id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailPostureCheckTypeEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/posture-checks":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture checks\\n","tags":["Posture Checks"],"summary":"List a subset of posture checks","operationId":"listPostureChecks","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of posture checks","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/listPostureCheckEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a Posture Checks","tags":["Posture Checks"],"summary":"Creates a Posture Checks","operationId":"createPostureCheck","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureCheckCreate"}}},"description":"A Posture Check to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-checks/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single Posture Checks by id","tags":["Posture Checks"],"summary":"Retrieves a single Posture Checks","operationId":"detailPostureCheck","responses":{"200":{"description":"Retrieves a singular posture check by id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailPostureCheckEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a Posture Checks by id","tags":["Posture Checks"],"summary":"Update all fields on a Posture Checks","operationId":"updatePostureCheck","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureCheckUpdate"}}},"description":"A Posture Check update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Deletes and Posture Checks by id","tags":["Posture Checks"],"summary":"Deletes an Posture Checks","operationId":"deletePostureCheck","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"403":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on a Posture Checks by id","tags":["Posture Checks"],"summary":"Update the supplied fields on a Posture Checks","operationId":"patchPostureCheck","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureCheckPatch"}}},"description":"A Posture Check patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Router"],"summary":"List routers","operationId":"listRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of specifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a router resource. Requires admin access.","tags":["Router"],"summary":"Create a router resource","operationId":"createRouter","requestBody":{"$ref":"#/components/requestBodies/routerCreate"},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single router by id. Requires admin access.","tags":["Router"],"summary":"Retrieves a single router","operationId":"detailRouter","responses":{"200":{"description":"A single router","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailRouterEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a router by id. Requires admin access.","tags":["Router"],"summary":"Update all fields on a router","operationId":"updateRouter","requestBody":{"$ref":"#/components/requestBodies/routerUpdate"},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a router by id. Requires admin access.","tags":["Router"],"summary":"Delete a router","operationId":"deleteRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a router. Requires admin access.","tags":["Router"],"summary":"Update the supplied fields on a router","operationId":"patchRouter","requestBody":{"$ref":"#/components/requestBodies/routerPatch"},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Edge Router Policy"],"summary":"List service edge router policies","operationId":"listServiceEdgeRouterPolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of service edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServiceEdgeRouterPoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a service edge router policy resource. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Create a service edge router policy resource","operationId":"createServiceEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyCreate"}}},"description":"A service edge router policy to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/service-edge-router-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Retrieves a single service edge policy","operationId":"detailServiceEdgeRouterPolicy","responses":{"200":{"description":"A single service edge router policy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailServiceEdgePolicyEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Update all fields on a service edge policy","operationId":"updateServiceEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyUpdate"}}},"description":"A service edge router policy update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Delete a service edge policy","operationId":"deleteServiceEdgeRouterPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service edge policy. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Update the supplied fields on a service edge policy","operationId":"patchServiceEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyPatch"}}},"description":"A service edge router policy patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-edge-router-policies/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"List the edge routers that a service edge router policy applies to","tags":["Service Edge Router Policy"],"summary":"List the edge routers that a service edge router policy applies to","operationId":"listServiceEdgeRouterPolicyEdgeRouters","responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-edge-router-policies/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"List the services that a service edge router policy applies to","tags":["Service Edge Router Policy"],"summary":"List the services that a service edge router policy applies to","operationId":"listServiceEdgeRouterPolicyServices","responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-policies":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of service policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List service policies","operationId":"listServicePolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of service policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicePoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Create a service policy resource. Requires admin access.","tags":["Service Policy"],"summary":"Create a service policy resource","operationId":"createServicePolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePolicyCreate"}}},"description":"A service policy to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/service-policies/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Retrieves a single service policy","operationId":"detailServicePolicy","responses":{"200":{"description":"A single service policy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailServicePolicyEnvelop"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on a service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Update all fields on a service policy","operationId":"updateServicePolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePolicyUpdate"}}},"description":"A service policy update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete a service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Delete a service policy","operationId":"deleteServicePolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on a service policy. Requires admin access.","tags":["Service Policy"],"summary":"Update the supplied fields on a service policy","operationId":"patchServicePolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePolicyPatch"}}},"description":"A service policy patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-policies/{id}/identities":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of identity resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List identities a service policy affects","operationId":"listServicePolicyIdentities","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"400":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-policies/{id}/posture-checks":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of posture check resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List posture check a service policy includes","operationId":"listServicePolicyPostureChecks","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of posture checks","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listPostureCheckEnvelope"}}}},"400":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-policies/{id}/services":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of service resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List services a service policy affects","operationId":"listServicePolicyServices","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"400":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-role-attributes":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of role attributes in use by services; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by services","operationId":"listServiceRoleAttributes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of role attributes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoleAttributesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List services","operationId":"listServices","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a services resource. Requires admin access.","tags":["Service"],"summary":"Create a services resource","operationId":"createService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceCreate"}}},"description":"A service to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/services/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service by id. Requires admin access.","tags":["Service"],"summary":"Retrieves a single service","operationId":"detailService","responses":{"200":{"description":"A single service","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailServiceEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service by id. Requires admin access.","tags":["Service"],"summary":"Update all fields on a service","operationId":"updateService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceUpdate"}}},"description":"A service update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service by id. Requires admin access.","tags":["Service"],"summary":"Delete a service","operationId":"deleteService","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service. Requires admin access.","tags":["Service"],"summary":"Update the supplied fields on a service","operationId":"patchService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePatch"}}},"description":"A service patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources associated to a specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List configs associated to a specific service","operationId":"listServiceConfig","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listConfigsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge-routers that may be used to access the given service. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List accessible edge-routers","operationId":"listServiceEdgeRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities that have access to this service. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List identities with access","operationId":"listServiceIdentities","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service edge router policy resources that affect a specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List service edge router policies that affect a specific service","operationId":"listServiceServiceEdgeRouterPolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of service edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServiceEdgeRouterPoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policy resources that affect specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List service policies that affect a specific service","operationId":"listServiceServicePolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of service policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicePoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.\\n","tags":["Service"],"summary":"List of terminators assigned to a service","operationId":"listServiceTerminators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of terminators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listTerminatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of active sessions resources; supports filtering, sorting, and pagination. Requires admin access.\\n\\nSessions are tied to an API session and are moved when an API session times out or logs out. Active sessions\\n(i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.\\n","tags":["Session"],"summary":"List sessions","operationId":"listSessions","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of sessions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSessionsManagementEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session by id. Requires admin access.","tags":["Session"],"summary":"Retrieves a single session","operationId":"detailSession","responses":{"200":{"description":"A single session","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSessionManagementEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a session by id. Requires admin access.","tags":["Session"],"summary":"Delete a session","operationId":"deleteSession","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/sessions/{id}/route-path":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session\'s route path by id. Requires admin access.","tags":["Session"],"summary":"Retrieves a single session\'s router path","operationId":"detailSessionRoutePath","responses":{"200":{"description":"A single session\'s route path","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSessionRoutePathEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/specs":{"get":{"security":[],"description":"Returns a list of spec files embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Returns a list of API specs","operationId":"listSpecs","responses":{"200":{"description":"A list of specifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSpecsEnvelope"}}}}}}},"/specs/{id}":{"get":{"security":[],"description":"Returns single spec resource embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Return a single spec resource","operationId":"detailSpec","responses":{"200":{"description":"A single specification","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSpecEnvelope"}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/specs/{id}/spec":{"get":{"security":[],"description":"Return the body of the specification (i.e. Swagger, OpenAPI 2.0, 3.0, etc).","tags":["Informational"],"summary":"Returns the spec\'s file","operationId":"detailSpecBody","responses":{"200":{"description":"Returns the document that represents the specification","content":{"text/yaml":{"schema":{"$ref":"#/components/schemas/detailSpecBodyEnvelope"}},"application/json":{"schema":{"$ref":"#/components/schemas/detailSpecBodyEnvelope"}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/summary":{"get":{"security":[{"ztSession":[]}],"description":"This endpoint is usefull for UIs that wish to display UI elements with counts.","tags":["Informational"],"summary":"Returns a list of accessible resource counts","operationId":"listSummary","responses":{"200":{"description":"Entity counts scopped to the current identitie\'s access","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSummaryCountsEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Terminator"],"summary":"List terminators","operationId":"listTerminators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of terminators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listTerminatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a terminator resource. Requires admin access.","tags":["Terminator"],"summary":"Create a terminator resource","operationId":"createTerminator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/terminatorCreate"}}},"description":"A terminator to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/terminators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Retrieves a single terminator","operationId":"detailTerminator","responses":{"200":{"description":"A single terminator","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailTerminatorEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on a terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Update all fields on a terminator","operationId":"updateTerminator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/terminatorUpdate"}}},"description":"A terminator update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete a terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Delete a terminator","operationId":"deleteTerminator","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on a terminator. Requires admin access.","tags":["Terminator"],"summary":"Update the supplied fields on a terminator","operationId":"patchTerminator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/terminatorPatch"}}},"description":"A terminator patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/transit-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Router"],"summary":"List routers","operationId":"listTransitRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of specifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a router resource. Requires admin access.","tags":["Router"],"summary":"Create a router resource","operationId":"createTransitRouter","requestBody":{"$ref":"#/components/requestBodies/routerCreate"},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/transit-routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single router by id. Requires admin access.","tags":["Router"],"summary":"Retrieves a single router","operationId":"detailTransitRouter","responses":{"200":{"description":"A single router","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailRouterEnvelope"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a router by id. Requires admin access.","tags":["Router"],"summary":"Update all fields on a router","operationId":"updateTransitRouter","requestBody":{"$ref":"#/components/requestBodies/routerUpdate"},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a router by id. Requires admin access.","tags":["Router"],"summary":"Delete a router","operationId":"deleteTransitRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a router. Requires admin access.","tags":["Router"],"summary":"Update the supplied fields on a router","operationId":"patchTransitRouter","requestBody":{"$ref":"#/components/requestBodies/routerPatch"},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/version":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listVersion","responses":{"200":{"description":"Version information for the controller","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listVersionEnvelope"}}}}}}}},"servers":[{"url":"https://demo.ziti.dev/edge/management/v1"}],"components":{"requestBodies":{"routerUpdate":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/routerUpdate"}}},"description":"A router update object","required":true},"routerCreate":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/routerCreate"}}},"description":"A router to create","required":true},"mfaCode":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/mfaCode"}}},"description":"An MFA validation request","required":true},"routerPatch":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/routerPatch"}}},"description":"A router patch object","required":true}},"securitySchemes":{"oauth2":{"type":"oauth2","flows":{"authorizationCode":{"authorizationUrl":"/oidc/authorize","tokenUrl":"/oidc/token","scopes":{"openid":"openid"}}}},"ztSession":{"description":"An API Key that is provided post authentication","type":"apiKey","name":"zt-session","in":"header"}},"schemas":{"apiError":{"type":"object","properties":{"args":{"$ref":"#/components/schemas/apiErrorArgs"},"cause":{"$ref":"#/components/schemas/apiErrorCause"},"causeMessage":{"type":"string"},"code":{"type":"string"},"data":{"type":"object","additionalProperties":true},"message":{"type":"string"},"requestId":{"type":"string"}}},"apiErrorArgs":{"type":"object","properties":{"urlVars":{"type":"object","additionalProperties":{"type":"string"}}}},"apiErrorCause":{"allOf":[{"$ref":"#/components/schemas/apiFieldError"},{"$ref":"#/components/schemas/apiError"}]},"apiErrorEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/components/schemas/apiError"},"meta":{"$ref":"#/components/schemas/meta"}}},"apiFieldError":{"type":"object","properties":{"field":{"type":"string"},"reason":{"type":"string"},"value":{"description":"can be any value - string, number, boolean, array or object"}}},"apiSessionDetail":{"description":"An API Session object","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["token","identity","identityId","configTypes","ipAddress","authQueries","cachedUpdatedAt","isMfaRequired","isMfaComplete","authenticatorId"],"properties":{"authQueries":{"$ref":"#/components/schemas/authQueryList"},"authenticatorId":{"type":"string"},"cachedLastActivityAt":{"type":"string","format":"date-time"},"configTypes":{"type":"array","items":{"type":"string"}},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"ipAddress":{"type":"string"},"isMfaComplete":{"type":"boolean"},"isMfaRequired":{"type":"boolean"},"lastActivityAt":{"type":"string","format":"date-time"},"token":{"type":"string"}}}]},"apiSessionList":{"type":"array","items":{"$ref":"#/components/schemas/apiSessionDetail"}},"apiSessionPostureData":{"type":"object","required":["mfa"],"properties":{"endpointState":{"$ref":"#/components/schemas/postureDataEndpointState"},"mfa":{"$ref":"#/components/schemas/postureDataMfa"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"}}},"apiVersion":{"type":"object","required":["path"],"properties":{"apiBaseUrls":{"type":"array","items":{"type":"string"}},"path":{"type":"string"},"version":{"type":"string"}}},"attributes":{"description":"A set of strings used to loosly couple this resource to policies","type":"array","items":{"type":"string"},"x-omitempty":true,"nullable":true},"authPolicyCreate":{"description":"A Auth Policy resource","type":"object","required":["name","primary","secondary"],"properties":{"name":{"type":"string"},"primary":{"$ref":"#/components/schemas/authPolicyPrimary"},"secondary":{"$ref":"#/components/schemas/authPolicySecondary"},"tags":{"$ref":"#/components/schemas/tags"}}},"authPolicyDetail":{"description":"A Auth Policy resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","primary","secondary"],"properties":{"name":{"type":"string"},"primary":{"$ref":"#/components/schemas/authPolicyPrimary"},"secondary":{"$ref":"#/components/schemas/authPolicySecondary"}}}]},"authPolicyList":{"description":"An array of Auth Policies resources","type":"array","items":{"$ref":"#/components/schemas/authPolicyDetail"}},"authPolicyPatch":{"description":"A Auth Policy resource","type":"object","properties":{"name":{"type":"string","nullable":true},"primary":{"$ref":"#/components/schemas/authPolicyPrimaryPatch"},"secondary":{"$ref":"#/components/schemas/authPolicySecondaryPatch"},"tags":{"$ref":"#/components/schemas/tags"}}},"authPolicyPrimary":{"type":"object","required":["updb","cert","extJwt"],"properties":{"cert":{"$ref":"#/components/schemas/authPolicyPrimaryCert"},"extJwt":{"$ref":"#/components/schemas/authPolicyPrimaryExtJwt"},"updb":{"$ref":"#/components/schemas/authPolicyPrimaryUpdb"}}},"authPolicyPrimaryCert":{"type":"object","required":["allowed","allowExpiredCerts"],"properties":{"allowExpiredCerts":{"type":"boolean"},"allowed":{"type":"boolean"}}},"authPolicyPrimaryCertPatch":{"type":"object","properties":{"allowExpiredCerts":{"type":"boolean","nullable":true},"allowed":{"type":"boolean","nullable":true}},"nullable":true},"authPolicyPrimaryExtJwt":{"type":"object","required":["allowed","allowedSigners"],"properties":{"allowed":{"type":"boolean"},"allowedSigners":{"type":"array","items":{"type":"string"}}}},"authPolicyPrimaryExtJwtPatch":{"type":"object","properties":{"allowed":{"type":"boolean","nullable":true},"allowedSigners":{"type":"array","items":{"type":"string"},"nullable":true}},"nullable":true},"authPolicyPrimaryPatch":{"type":"object","properties":{"cert":{"$ref":"#/components/schemas/authPolicyPrimaryCertPatch"},"extJwt":{"$ref":"#/components/schemas/authPolicyPrimaryExtJwtPatch"},"updb":{"$ref":"#/components/schemas/authPolicyPrimaryUpdbPatch"}}},"authPolicyPrimaryUpdb":{"type":"object","required":["allowed","minPasswordLength","requireSpecialChar","requireNumberChar","requireMixedCase","maxAttempts","lockoutDurationMinutes"],"properties":{"allowed":{"type":"boolean"},"lockoutDurationMinutes":{"type":"integer"},"maxAttempts":{"type":"integer"},"minPasswordLength":{"type":"integer"},"requireMixedCase":{"type":"boolean"},"requireNumberChar":{"type":"boolean"},"requireSpecialChar":{"type":"boolean"}}},"authPolicyPrimaryUpdbPatch":{"type":"object","properties":{"allowed":{"type":"boolean","nullable":true},"lockoutDurationMinutes":{"type":"integer","nullable":true},"maxAttempts":{"type":"integer","nullable":true},"minPasswordLength":{"type":"integer","nullable":true},"requireMixedCase":{"type":"boolean","nullable":true},"requireNumberChar":{"type":"boolean","nullable":true},"requireSpecialChar":{"type":"boolean","nullable":true}},"nullable":true},"authPolicySecondary":{"type":"object","required":["requireTotp"],"properties":{"requireExtJwtSigner":{"type":"string","x-omit-empty":false,"nullable":true},"requireTotp":{"type":"boolean"}}},"authPolicySecondaryPatch":{"type":"object","properties":{"requireExtJwtSigner":{"type":"string","nullable":true},"requireTotp":{"type":"boolean","nullable":true}},"nullable":true},"authPolicyUpdate":{"$ref":"#/components/schemas/authPolicyCreate"},"authQueryDetail":{"type":"object","required":["provider"],"properties":{"format":{"$ref":"#/components/schemas/mfaFormats"},"httpMethod":{"type":"string"},"httpUrl":{"type":"string"},"maxLength":{"type":"integer"},"minLength":{"type":"integer"},"provider":{"$ref":"#/components/schemas/mfaProviders"},"typeId":{"type":"string"}}},"authQueryList":{"type":"array","items":{"$ref":"#/components/schemas/authQueryDetail"}},"authenticate":{"description":"A generic authenticate object meant for use with the /authenticate path. Required fields depend on authentication method.","type":"object","properties":{"configTypes":{"$ref":"#/components/schemas/configTypes"},"envInfo":{"$ref":"#/components/schemas/envInfo"},"password":{"$ref":"#/components/schemas/password"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"},"username":{"$ref":"#/components/schemas/username"}}},"authenticatorCreate":{"description":"Creates an authenticator for a specific identity which can be used for API authentication","type":"object","required":["method","identityId"],"properties":{"certPem":{"description":"The client certificate the identity will login with. Used only for method=\'cert\'","type":"string"},"identityId":{"description":"The id of an existing identity that will be assigned this authenticator","type":"string"},"method":{"description":"The type of authenticator to create; which will dictate which properties on this object are required.","type":"string"},"password":{"description":"The password the identity will login with. Used only for method=\'updb\'","type":"string"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"description":"The username that the identity will login with. Used only for method=\'updb\'","type":"string"}}},"authenticatorDetail":{"description":"A singular authenticator resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["method","identityId","identity"],"properties":{"certPem":{"type":"string"},"fingerprint":{"type":"string"},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"method":{"type":"string"},"username":{"type":"string"}}}]},"authenticatorList":{"description":"An array of authenticator resources","type":"array","items":{"$ref":"#/components/schemas/authenticatorDetail"}},"authenticatorPatch":{"description":"All of the fields on an authenticator that may be updated","type":"object","properties":{"password":{"$ref":"#/components/schemas/passwordNullable"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"$ref":"#/components/schemas/usernameNullable"}}},"authenticatorPatchWithCurrent":{"description":"All of the fields on an authenticator that may be updated","type":"object","allOf":[{"$ref":"#/components/schemas/authenticatorPatch"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/components/schemas/password"}}}]},"authenticatorUpdate":{"description":"All of the fields on an authenticator that will be updated","type":"object","required":["username","password"],"properties":{"password":{"$ref":"#/components/schemas/password"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"$ref":"#/components/schemas/username"}}},"authenticatorUpdateWithCurrent":{"description":"All of the fields on an authenticator that will be updated","type":"object","allOf":[{"$ref":"#/components/schemas/authenticatorUpdate"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/components/schemas/password"}}}]},"baseEntity":{"description":"Fields shared by all Edge API entities","type":"object","required":["id","createdAt","updatedAt","_links"],"properties":{"_links":{"$ref":"#/components/schemas/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"},"updatedAt":{"type":"string","format":"date-time"}}},"caCreate":{"description":"A create Certificate Authority (CA) object","type":"object","required":["name","certPem","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles"],"properties":{"certPem":{"type":"string","example":"-----BEGIN CERTIFICATE-----\\nMIICUjCCAdmgAwIBAgIJANooo7NB+dZZMAoGCCqGSM49BAMCMF4xCzAJBgNVBAYT\\nAlVTMQswCQYDVQQIDAJOQzETMBEGA1UECgwKTmV0Rm91bmRyeTEtMCsGA1UEAwwk\\nTmV0Rm91bmRyeSBaaXRpIEV4dGVybmFsIEFQSSBSb290IENBMB4XDTE4MTExNTEy\\nNTcwOVoXDTM4MTExMDEyNTcwOVowXjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk5D\\nMRMwEQYDVQQKDApOZXRGb3VuZHJ5MS0wKwYDVQQDDCROZXRGb3VuZHJ5IFppdGkg\\nRXh0ZXJuYWwgQVBJIFJvb3QgQ0EwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARwq61Z\\nIaqbaw0PDt3frJZaHjkxfZhwYrykI1GlbRNd/jix03lVG9qvpN5Og9fQfFFcFmD/\\n3vCE9S6O0npm0mADQxcBcxbMRAH5dtBuCuiJW6qAAbPgiM32vqSxBiFt0KejYzBh\\nMB0GA1UdDgQWBBRx1OVGuc/jdltDc8YBtkw8Tbr4fjAfBgNVHSMEGDAWgBRx1OVG\\nuc/jdltDc8YBtkw8Tbr4fjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB\\nhjAKBggqhkjOPQQDAgNnADBkAjBDRxNZUaIVpkQKnAgJukl3ysd3/i7Z6hDyIEms\\nkllz/+ZvmdBp9iedV5o5BvJUggACMCv+UBFlJH7pmsOCo/F45Kk178YsCC7gaMxE\\n1ZG1zveyMvsYsH04C9FndE6w2MLvlA==\\n-----END CERTIFICATE-----\\n"},"externalIdClaim":{"$ref":"#/components/schemas/externalIdClaim"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/components/schemas/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"name":{"type":"string","example":"Test 3rd Party External CA"},"tags":{"$ref":"#/components/schemas/tags"}}},"caDetail":{"description":"A Certificate Authority (CA) resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","fingerprint","certPem","isVerified","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles","identityNameFormat"],"properties":{"certPem":{"type":"string"},"externalIdClaim":{"$ref":"#/components/schemas/externalIdClaim"},"fingerprint":{"type":"string"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/components/schemas/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"isVerified":{"type":"boolean","example":false},"name":{"type":"string"},"verificationToken":{"type":"string","format":"uuid"}}}]},"caList":{"description":"An array of Certificate Authority (CA) resources","type":"array","items":{"$ref":"#/components/schemas/caDetail"}},"caPatch":{"type":"object","properties":{"externalIdClaim":{"$ref":"#/components/schemas/externalIdClaimPatch"},"identityNameFormat":{"type":"string","nullable":true},"identityRoles":{"$ref":"#/components/schemas/roles"},"isAuthEnabled":{"type":"boolean","example":true,"nullable":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true,"nullable":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true,"nullable":true},"name":{"type":"string","example":"My CA","nullable":true},"tags":{"$ref":"#/components/schemas/tags"}}},"caUpdate":{"type":"object","required":["name","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles","identityNameFormat"],"properties":{"externalIdClaim":{"$ref":"#/components/schemas/externalIdClaim"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/components/schemas/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"name":{"type":"string","example":"My CA"},"tags":{"$ref":"#/components/schemas/tags"}}},"capabilities":{"type":"string","enum":["OIDC_AUTH","HA_CONTROLLER"]},"commonEdgeRouterProperties":{"type":"object","required":["hostname","name","supportedProtocols","syncStatus","isOnline","cost","noTraversal","disabled"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean"},"hostname":{"type":"string"},"isOnline":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"supportedProtocols":{"type":"object","additionalProperties":{"type":"string"}},"syncStatus":{"type":"string"}}},"configCreate":{"description":"A config create object","type":"object","required":["name","configTypeId","data"],"properties":{"configTypeId":{"description":"The id of a config-type that the data section will match","type":"string"},"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true,"nullable":false},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/components/schemas/tags"}},"example":{"configTypeId":"cea49285-6c07-42cf-9f52-09a9b115c783","data":{"hostname":"example.com","port":80},"name":"test-config"}},"configDetail":{"description":"A config resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","configTypeId","configType","data"],"properties":{"configType":{"$ref":"#/components/schemas/entityRef"},"configTypeId":{"type":"string"},"data":{"description":"The data section of a config is based on the schema of its type","type":"object"},"name":{"type":"string"}}}]},"configList":{"description":"An array of config resources","type":"array","items":{"$ref":"#/components/schemas/configDetail"}},"configPatch":{"description":"A config patch object","type":"object","properties":{"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/components/schemas/tags"}},"example":{"data":{"hostname":"example.com","port":80},"name":"example-config-name"}},"configTypeCreate":{"description":"A config-type create object","type":"object","required":["name"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/components/schemas/tags"}}},"configTypeDetail":{"description":"A config-type resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","schema"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true}}}]},"configTypeList":{"description":"An array of config-type resources","type":"array","items":{"$ref":"#/components/schemas/configTypeDetail"}},"configTypePatch":{"description":"A config-type patch object","type":"object","properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/components/schemas/tags"}}},"configTypeUpdate":{"description":"A config-type update object","type":"object","required":["name"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/components/schemas/tags"}}},"configTypes":{"description":"Specific configuration types that should be returned","type":"array","items":{"type":"string"}},"configUpdate":{"description":"A config update object","type":"object","required":["name","data"],"properties":{"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true,"nullable":false},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/components/schemas/tags"}},"example":{"data":{"hostname":"example.com","port":80},"name":"example-config-name"}},"createEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/createLocation"},"meta":{"$ref":"#/components/schemas/meta"}}},"createLocation":{"type":"object","properties":{"_links":{"$ref":"#/components/schemas/links"},"id":{"type":"string"}}},"currentApiSessionDetail":{"description":"An API Session object for the current API session","type":"object","allOf":[{"$ref":"#/components/schemas/apiSessionDetail"},{"type":"object","required":["expiresAt","expirationSeconds"],"properties":{"expirationSeconds":{"type":"integer"},"expiresAt":{"type":"string","format":"date-time"}}}]},"currentApiSessionDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"currentIdentityDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"dataIntegrityCheckDetail":{"type":"object","required":["description","fixed"],"properties":{"description":{"type":"string"},"fixed":{"type":"boolean"}}},"dataIntegrityCheckDetailList":{"type":"array","items":{"$ref":"#/components/schemas/dataIntegrityCheckDetail"}},"dataIntegrityCheckDetails":{"type":"object","required":["inProgress","fixingErrors","tooManyErrors","startTime","endTime","error","results"],"properties":{"endTime":{"type":"string","format":"date-time"},"error":{"type":"string"},"fixingErrors":{"type":"boolean"},"inProgress":{"type":"boolean"},"results":{"$ref":"#/components/schemas/dataIntegrityCheckDetailList"},"startTime":{"type":"string","format":"date-time"},"tooManyErrors":{"type":"boolean"}}},"dataIntegrityCheckResultEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/dataIntegrityCheckDetails"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailApiSessionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/apiSessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailAuthPolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/authPolicyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailAuthenticatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/authenticatorDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailCaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/caDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailConfigEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/configDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailConfigTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/configTypeDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailEdgeRouterPolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/edgeRouterPolicyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailEnrollmentEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/enrollmentDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailExternalJwtSignerEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/externalJwtSignerDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailIdentityEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailIdentityTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityTypeDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailMfa":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"required":["isVerified"],"properties":{"isVerified":{"type":"boolean"},"provisioningUrl":{"description":"Not provided if MFA verification has been completed","type":"string"},"recoveryCodes":{"description":"Not provided if MFA verification has been completed","type":"array","items":{"type":"string"}}}}]},"detailMfaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/detailMfa"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailMfaRecoveryCodes":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"required":["recoveryCodes"],"properties":{"recoveryCodes":{"type":"array","items":{"type":"string"}}}}]},"detailMfaRecoveryCodesEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/components/schemas/detailMfaRecoveryCodes"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailPostureCheckEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureCheckDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailPostureCheckTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureCheckTypeDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailRouterEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/routerDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailServiceEdgePolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailServiceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailServicePolicyEnvelop":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/servicePolicyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSessionManagementEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionManagementDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSessionRoutePathEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionRoutePathDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSpecBodyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specBodyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSpecEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailTerminatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/terminatorDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailedEdgeRouterEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/edgeRouterDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"dialBind":{"type":"string","enum":["Dial","Bind"]},"dialBindArray":{"type":"array","items":{"$ref":"#/components/schemas/dialBind"}},"disableParams":{"type":"object","required":["durationMinutes"],"properties":{"durationMinutes":{"type":"integer"}}},"edgeRouterCreate":{"description":"An edge router create object","type":"object","required":["name"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterDetail":{"description":"A detail edge router resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"$ref":"#/components/schemas/commonEdgeRouterProperties"},{"type":"object","required":["isVerified","roleAttributes","os","version","arch","buildDate","revision","isTunnelerEnabled"],"properties":{"certPem":{"type":"string","x-omitempty":false,"nullable":true},"enrollmentCreatedAt":{"type":"string","format":"date-time","nullable":true},"enrollmentExpiresAt":{"type":"string","format":"date-time","nullable":true},"enrollmentJwt":{"type":"string","nullable":true},"enrollmentToken":{"type":"string","nullable":true},"fingerprint":{"type":"string"},"isTunnelerEnabled":{"type":"boolean"},"isVerified":{"type":"boolean"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"unverifiedCertPem":{"type":"string","x-omitempty":false,"nullable":true},"unverifiedFingerprint":{"type":"string","x-omitempty":false,"nullable":true},"versionInfo":{"$ref":"#/components/schemas/versionInfo"}}}],"example":{"_links":{"edge-router-policies":{"href":"./edge-routers/b0766b8d-bd1a-4d28-8415-639b29d3c83d/edge-routers"},"self":{"href":"./edge-routers/b0766b8d-bd1a-4d28-8415-639b29d3c83d"}},"cost":0,"createdAt":"2020-03-16T17:13:31.5807454Z","enrollmentCreatedAt":"2020-03-16T17:13:31.5777637Z","enrollmentExpiresAt":"2020-03-16T17:18:31.5777637Z","enrollmentJwt":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImVyb3R0IiwiZXhwIjoxNTg0Mzc5MTExLCJpc3MiOiJodHRwczovL 2xvY2FsaG9zdDoxMjgwIiwianRpIjoiMzBhMWYwZWEtZDM5Yi00YWFlLWI4NTItMzA0Y2YxYzMwZDFmIiwic3ViIjoiYjA3NjZiOGQtYmQxYS00ZDI 4LTg0MTUtNjM5YjI5ZDNjODNkIn0.UsyQhCPORQ5tQnYWY7S88LNvV9iFS5Hy-P4aJaClZzEICobKgnQoyQblJcdMvk3cGKwyFqAnQtt0tDZkb8tHz Vqyv6bilHcAFuMRrdwXRqdXquabSN5geu2qBUnyzL7Mf2X85if8sbMida6snB4oLZsVRF3CRn4ODBJdeiVJ_Z4rgD-zW2IwtXPApT7ALyiiw2cN4EH 8pqQ7tpZKqztE0PGEbBQFPGKUFnm7oXyvSUo17EsFJUv5gUlBzfKKGolh5io4ptp22HZrqsqSnqDSOnYEZHonr5Yljuwiktrlh-JKiK6GGns5OAJMP dO9lgM4yHSpF2ILbqhWMV93Y3zMOg","enrollmentToken":"30a1f0ea-d39b-4aae-b852-304cf1c30d1f","fingerprint":null,"hostname":"","id":"b0766b8d-bd1a-4d28-8415-639b29d3c83d","isOnline":false,"isTunnelerEnabled":false,"isVerified":false,"name":"TestRouter-e33c837f-3222-4b40-bcd6-b3458fd5156e","noTraversal":false,"roleAttributes":["eastCoast","sales","test"],"supportedProtocols":{},"tags":{},"updatedAt":"2020-03-16T17:13:31.5807454Z"}},"edgeRouterList":{"description":"A list of edge router resources","type":"array","items":{"$ref":"#/components/schemas/edgeRouterDetail"}},"edgeRouterPatch":{"description":"An edge router patch object","type":"object","properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string","nullable":true},"noTraversal":{"type":"boolean","nullable":true},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterPolicyCreate":{"required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterPolicyDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","semantic","edgeRouterRoles","edgeRouterRolesDisplay","identityRoles","identityRolesDisplay","isSystem"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"edgeRouterRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"identityRoles":{"$ref":"#/components/schemas/roles"},"identityRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"isSystem":{"type":"boolean"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"}}}]},"edgeRouterPolicyList":{"type":"array","items":{"$ref":"#/components/schemas/edgeRouterPolicyDetail"}},"edgeRouterPolicyPatch":{"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterPolicyUpdate":{"required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterUpdate":{"description":"An edge router update object","type":"object","required":["name"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"}}},"empty":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"object","example":{}},"meta":{"$ref":"#/components/schemas/meta"}}},"enrollmentCreate":{"type":"object","required":["method","expiresAt","identityId"],"properties":{"caId":{"type":"string","nullable":true},"expiresAt":{"type":"string","format":"date-time"},"identityId":{"type":"string"},"method":{"type":"string","enum":["ott","ottca","updb"]},"username":{"type":"string","nullable":true}}},"enrollmentDetail":{"description":"An enrollment object. Enrollments are tied to identities and potentially a CA. Depending on the\\nmethod, different fields are utilized. For example ottca enrollments use the `ca` field and updb enrollments\\nuse the username field, but not vice versa.\\n","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["token","method","expiresAt","details"],"properties":{"caId":{"type":"string","nullable":true},"edgeRouter":{"$ref":"#/components/schemas/entityRef"},"edgeRouterId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"jwt":{"type":"string"},"method":{"type":"string"},"token":{"type":"string"},"transitRouter":{"$ref":"#/components/schemas/entityRef"},"transitRouterId":{"type":"string"},"username":{"type":"string"}}}],"example":{"_links":{"self":{"href":"./enrollments/624fa53f-7629-4a7a-9e38-c1f4ce322c1d"}},"ca":null,"createdAt":"0001-01-01T00:00:00Z","expiresAt":"2020-03-11T20:20:24.0055543Z","id":"624fa53f-7629-4a7a-9e38-c1f4ce322c1d","identity":{"_links":{"self":{"href":"./identities/f047ac96-dc3a-408a-a6f2-0ba487c08ef9"}},"id":"f047ac96-dc3a-408a-a6f2-0ba487c08ef9","name":"updb--0f245140-7f2e-4326-badf-6aba55e52475","urlName":"identities"},"method":"updb","tags":null,"token":"1e727c8f-07e4-4a1d-a8b0-da0c7a01c6e1","updatedAt":"0001-01-01T00:00:00Z","username":"example-username"}},"enrollmentList":{"description":"An array of enrollment resources","type":"array","items":{"$ref":"#/components/schemas/enrollmentDetail"}},"enrollmentRefresh":{"type":"object","required":["expiresAt"],"properties":{"expiresAt":{"type":"string","format":"date-time"}}},"entityRef":{"description":"A reference to another resource and links to interact with it","type":"object","properties":{"_links":{"$ref":"#/components/schemas/links"},"entity":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"}}},"envInfo":{"description":"Environment information an authenticating client may provide","type":"object","properties":{"arch":{"type":"string"},"os":{"type":"string"},"osRelease":{"type":"string"},"osVersion":{"type":"string"}}},"externalIdClaim":{"type":"object","required":["location","matcher","matcherCriteria","parser","parserCriteria","index"],"properties":{"index":{"type":"integer","nullable":true},"location":{"type":"string","enum":["COMMON_NAME","SAN_URI","SAN_EMAIL"],"nullable":true},"matcher":{"type":"string","enum":["ALL","PREFIX","SUFFIX","SCHEME"],"nullable":true},"matcherCriteria":{"type":"string","nullable":true},"parser":{"type":"string","enum":["NONE","SPLIT"],"nullable":true},"parserCriteria":{"type":"string","nullable":true}}},"externalIdClaimPatch":{"type":"object","properties":{"index":{"type":"integer","nullable":true},"location":{"type":"string","enum":["COMMON_NAME","SAN_URI","SAN_EMAIL"],"nullable":true},"matcher":{"type":"string","enum":["ALL","PREFIX","SUFFIX","SCHEME"],"nullable":true},"matcherCriteria":{"type":"string","nullable":true},"parser":{"type":"string","enum":["NONE","SPLIT"],"nullable":true},"parserCriteria":{"type":"string","nullable":true}}},"externalJwtSignerCreate":{"description":"A create Certificate Authority (CA) object","type":"object","required":["name","enabled","issuer","audience"],"properties":{"audience":{"type":"string","nullable":true},"certPem":{"type":"string","nullable":true},"claimsProperty":{"type":"string","nullable":true},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url","nullable":true},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","nullable":true},"kid":{"type":"string","nullable":true},"name":{"type":"string","example":"MyApps Signer"},"tags":{"$ref":"#/components/schemas/tags"},"useExternalId":{"type":"boolean","nullable":true}}},"externalJwtSignerDetail":{"description":"A External JWT Signer resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","certPem","jwksEndpoint","enabled","fingerprint","commonName","notAfter","notBefore","externalAuthUrl","claimsProperty","useExternalId","kid","issuer","audience"],"properties":{"audience":{"type":"string"},"certPem":{"type":"string","nullable":true},"claimsProperty":{"type":"string"},"commonName":{"type":"string"},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url"},"fingerprint":{"type":"string"},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","nullable":true},"kid":{"type":"string"},"name":{"type":"string","example":"MyApps Signer"},"notAfter":{"type":"string","format":"date-time"},"notBefore":{"type":"string","format":"date-time"},"useExternalId":{"type":"boolean"}}}]},"externalJwtSignerList":{"description":"An array of External JWT Signers resources","type":"array","items":{"$ref":"#/components/schemas/externalJwtSignerDetail"}},"externalJwtSignerPatch":{"type":"object","properties":{"audience":{"type":"string","nullable":true},"certPem":{"type":"string","nullable":true},"claimsProperty":{"type":"string","nullable":true},"enabled":{"type":"boolean","nullable":true},"externalAuthUrl":{"type":"string","format":"url","nullable":true},"issuer":{"type":"string","nullable":true},"jwksEndpoint":{"type":"string","format":"uri","nullable":true},"kid":{"type":"string","nullable":true},"name":{"type":"string","example":"MyApps Signer","nullable":true},"tags":{"$ref":"#/components/schemas/tags"},"useExternalId":{"type":"boolean","nullable":true}}},"externalJwtSignerUpdate":{"type":"object","required":["name","enabled","issuer","audience"],"properties":{"audience":{"type":"string","nullable":true},"certPem":{"type":"string","nullable":true},"claimsProperty":{"type":"string","nullable":true},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url","nullable":true},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","nullable":true},"kid":{"type":"string","nullable":true},"name":{"type":"string","example":"MyApps Signer"},"tags":{"$ref":"#/components/schemas/tags"},"useExternalId":{"type":"boolean","nullable":true}}},"failedServiceRequest":{"type":"object","properties":{"apiSessionId":{"type":"string"},"policyFailures":{"type":"array","items":{"$ref":"#/components/schemas/policyFailure"}},"serviceId":{"type":"string"},"serviceName":{"type":"string"},"sessionType":{"$ref":"#/components/schemas/dialBind"},"when":{"type":"string","format":"date-time"}}},"failedServiceRequestEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/failedServiceRequestList"},"meta":{"$ref":"#/components/schemas/meta"}}},"failedServiceRequestList":{"type":"array","items":{"$ref":"#/components/schemas/failedServiceRequest"}},"getIdentityPolicyAdviceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/policyAdvice"},"meta":{"$ref":"#/components/schemas/meta"}}},"identityAuthenticators":{"type":"object","properties":{"cert":{"type":"object","properties":{"fingerprint":{"type":"string"},"id":{"type":"string"}}},"updb":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"}}}}},"identityCreate":{"description":"An identity to create","type":"object","required":["name","type","isAdmin"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicyId":{"type":"string","nullable":true},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"enrollment":{"type":"object","properties":{"ott":{"type":"boolean"},"ottca":{"type":"string"},"updb":{"type":"string"}}},"externalId":{"type":"string","nullable":true},"isAdmin":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/identityType"}}},"identityDetail":{"description":"Detail of a specific identity","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","type","typeId","isDefaultAdmin","isAdmin","authenticators","enrollment","envInfo","sdkInfo","roleAttributes","hasEdgeRouterConnection","hasApiSession","isMfaEnabled","serviceHostingPrecedences","serviceHostingCosts","defaultHostingCost","authPolicyId","authPolicy","externalId","disabled"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicy":{"$ref":"#/components/schemas/entityRef"},"authPolicyId":{"type":"string"},"authenticators":{"$ref":"#/components/schemas/identityAuthenticators"},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"disabled":{"type":"boolean"},"disabledAt":{"type":"string","format":"date-time","nullable":true},"disabledUntil":{"type":"string","format":"date-time","nullable":true},"enrollment":{"$ref":"#/components/schemas/identityEnrollments"},"envInfo":{"$ref":"#/components/schemas/envInfo"},"externalId":{"type":"string","nullable":true},"hasApiSession":{"type":"boolean"},"hasEdgeRouterConnection":{"type":"boolean"},"isAdmin":{"type":"boolean"},"isDefaultAdmin":{"type":"boolean"},"isMfaEnabled":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"type":{"$ref":"#/components/schemas/entityRef"},"typeId":{"type":"string"}}}]},"identityEnrollments":{"type":"object","properties":{"ott":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"ottca":{"type":"object","properties":{"ca":{"$ref":"#/components/schemas/entityRef"},"caId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"updb":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}}}},"identityExtendCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates","type":"string"},"clientCert":{"description":"A PEM encoded client certificate","type":"string"}}},"identityExtendEnrollmentEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/identityExtendCerts"},"meta":{"$ref":"#/components/schemas/meta"}}},"identityExtendEnrollmentRequest":{"type":"object","required":["clientCertCsr"],"properties":{"clientCertCsr":{"type":"string"}}},"identityExtendValidateEnrollmentRequest":{"type":"object","required":["clientCert"],"properties":{"clientCert":{"description":"A PEM encoded client certificate previously returned after an extension request","type":"string"}}},"identityList":{"description":"A list of identities","type":"array","items":{"$ref":"#/components/schemas/identityDetail"}},"identityPatch":{"type":"object","properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicyId":{"type":"string","nullable":true},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"externalId":{"type":"string","nullable":true},"isAdmin":{"type":"boolean","nullable":true},"name":{"type":"string","nullable":true},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/identityType"}}},"identityType":{"type":"string","enum":["User","Device","Service","Router","Default"]},"identityTypeDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","properties":{"name":{"type":"string"}}}]},"identityTypeList":{"type":"array","items":{"$ref":"#/components/schemas/identityTypeDetail"}},"identityUpdate":{"type":"object","required":["type","name","isAdmin"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicyId":{"type":"string","nullable":true},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"externalId":{"type":"string","nullable":true},"isAdmin":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/identityType"}}},"link":{"description":"A link to another resource","type":"object","required":["href"],"properties":{"comment":{"type":"string"},"href":{"type":"string","format":"uri"},"method":{"type":"string"}}},"links":{"description":"A map of named links","type":"object","additionalProperties":{"$ref":"#/components/schemas/link"},"x-omitempty":false},"listApiSessionsEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/apiSessionList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listAuthPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/authPolicyList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listAuthenticatorsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/authenticatorList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listCasEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/caList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listConfigTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/configTypeList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listConfigsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/configList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEdgeRouterPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/edgeRouterPolicyList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/edgeRouterList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEnrollmentsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/enrollmentList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEnumeratedCapabilitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/capabilities"}},"meta":{"$ref":"#/components/schemas/meta"}}},"listExternalJwtSignersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/externalJwtSignerList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listIdentitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listIdentityTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityTypeList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listPostureCheckEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/postureCheckDetail"}},"meta":{"$ref":"#/components/schemas/meta"}}},"listPostureCheckTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureCheckTypeList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listRoleAttributesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/roleAttributesList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/routerList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServiceConfigsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceConfigList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServiceEdgeRouterPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServicePoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/servicePolicyList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServicesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSessionsManagementEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionManagementList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSpecsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSummaryCounts":{"type":"object","additionalProperties":{"type":"integer"}},"listSummaryCountsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/listSummaryCounts"},"meta":{"$ref":"#/components/schemas/meta"}}},"listTerminatorsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/terminatorList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listVersionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/version"},"meta":{"$ref":"#/components/schemas/meta"}}},"meta":{"type":"object","properties":{"apiEnrollmentVersion":{"type":"string"},"apiVersion":{"type":"string"},"filterableFields":{"type":"array","items":{"type":"string"},"x-omitempty":true},"pagination":{"$ref":"#/components/schemas/pagination"}}},"mfaCode":{"type":"object","required":["code"],"properties":{"code":{"type":"string"}}},"mfaFormats":{"type":"string","enum":["numeric","alpha","alphaNumeric"]},"mfaProviders":{"type":"string","enum":["ziti","url"]},"namedRole":{"type":"object","properties":{"name":{"type":"string"},"role":{"type":"string"}}},"namedRoles":{"type":"array","items":{"$ref":"#/components/schemas/namedRole"},"x-omitempty":false},"operatingSystem":{"type":"object","required":["type","versions"],"properties":{"type":{"$ref":"#/components/schemas/osType"},"versions":{"type":"array","items":{"type":"string"}}}},"osType":{"type":"string","enum":["Windows","WindowsServer","Android","iOS","Linux","macOS"]},"pagination":{"type":"object","required":["limit","offset","totalCount"],"properties":{"limit":{"type":"number","format":"int64"},"offset":{"type":"number","format":"int64"},"totalCount":{"type":"number","format":"int64"}}},"password":{"type":"string","maxLength":100,"minLength":5},"passwordNullable":{"type":"string","maxLength":100,"minLength":5,"nullable":true},"policyAdvice":{"type":"object","properties":{"commonRouters":{"type":"array","items":{"$ref":"#/components/schemas/routerEntityRef"}},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"identityRouterCount":{"type":"number","format":"int32"},"isBindAllowed":{"type":"boolean"},"isDialAllowed":{"type":"boolean"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"},"serviceRouterCount":{"type":"number","format":"int32"}}},"policyFailure":{"type":"object","properties":{"checks":{"type":"array","items":{"$ref":"#/components/schemas/postureCheckFailure"}},"policyId":{"type":"string"},"policyName":{"type":"string"}}},"postureCheckCreate":{"type":"object","required":["name","typeId"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"},"typeId":{"$ref":"#/components/schemas/postureCheckType"}},"discriminator":{"propertyName":"typeId"}},"postureCheckDetail":{"type":"object","required":["name","typeId","version","roleAttributes","id","createdAt","updatedAt","_links","tags"],"properties":{"_links":{"$ref":"#/components/schemas/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"},"typeId":{"type":"string"},"updatedAt":{"type":"string","format":"date-time"},"version":{"type":"integer"}},"discriminator":{"propertyName":"typeId"}},"postureCheckDomainCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckFailure":{"type":"object","required":["postureCheckId","postureCheckName","postureCheckType"],"properties":{"postureCheckId":{"type":"string"},"postureCheckName":{"type":"string"},"postureCheckType":{"type":"string"}},"discriminator":{"propertyName":"postureCheckType"}},"postureCheckFailureDomain":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"type":"string"},"expectedValue":{"type":"array","items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckFailureMacAddress":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"type":"array","items":{"type":"string"}},"expectedValue":{"type":"array","items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckFailureMfa":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue","criteria"],"properties":{"actualValue":{"$ref":"#/components/schemas/postureChecksFailureMfaValues"},"criteria":{"$ref":"#/components/schemas/postureChecksFailureMfaCriteria"},"expectedValue":{"$ref":"#/components/schemas/postureChecksFailureMfaValues"}}}],"x-class":"MFA"},"postureCheckFailureOperatingSystem":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"$ref":"#/components/schemas/postureCheckFailureOperatingSystemActual"},"expectedValue":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckFailureOperatingSystemActual":{"type":"object","required":["type","version"],"properties":{"type":{"type":"string"},"version":{"type":"string"}}},"postureCheckFailureProcess":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"$ref":"#/components/schemas/postureCheckFailureProcessActual"},"expectedValue":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckFailureProcessActual":{"type":"object","required":["isRunning","hash","signerFingerprints"],"properties":{"hash":{"type":"string"},"isRunning":{"type":"boolean"},"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}},"postureCheckFailureProcessMulti":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue","semantic"],"properties":{"actualValue":{"type":"array","items":{"$ref":"#/components/schemas/postureCheckFailureProcessActual"}},"expectedValue":{"type":"array","items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckMacAddressCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMfaCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"$ref":"#/components/schemas/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckMfaDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"$ref":"#/components/schemas/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckMfaPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"$ref":"#/components/schemas/postureCheckMfaPropertiesPatch"}],"x-class":"MFA"},"postureCheckMfaProperties":{"type":"object","properties":{"ignoreLegacyEndpoints":{"type":"boolean"},"promptOnUnlock":{"type":"boolean"},"promptOnWake":{"type":"boolean"},"timeoutSeconds":{"type":"integer"}}},"postureCheckMfaPropertiesPatch":{"type":"object","properties":{"ignoreLegacyEndpoints":{"type":"boolean","nullable":true},"promptOnUnlock":{"type":"boolean","nullable":true},"promptOnWake":{"type":"boolean","nullable":true},"timeoutSeconds":{"type":"integer","nullable":true}}},"postureCheckMfaUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"$ref":"#/components/schemas/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckOperatingSystemCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckPatch":{"type":"object","required":["typeId"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"},"typeId":{"$ref":"#/components/schemas/postureCheckType"}},"discriminator":{"propertyName":"typeId"}},"postureCheckProcessCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckProcessDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckProcessMultiCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"process":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckProcessUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckType":{"type":"string","enum":["OS","PROCESS","DOMAIN","MAC","MFA","PROCESS_MULTI"]},"postureCheckTypeDetail":{"allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","operatingSystems","version"],"properties":{"name":{"type":"string"},"operatingSystems":{"type":"array","items":{"$ref":"#/components/schemas/operatingSystem"}},"version":{"type":"string"}}}]},"postureCheckTypeList":{"type":"array","items":{"$ref":"#/components/schemas/postureCheckTypeDetail"}},"postureCheckUpdate":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"},"typeId":{"$ref":"#/components/schemas/postureCheckType"}},"discriminator":{"propertyName":"typeId"}},"postureChecksFailureMfaCriteria":{"type":"object","required":["passedMfaAt","wokenAt","unlockedAt","timeoutSeconds","timeoutRemainingSeconds"],"properties":{"passedMfaAt":{"type":"string","format":"date-time"},"timeoutRemainingSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"},"unlockedAt":{"type":"string","format":"date-time"},"wokenAt":{"type":"string","format":"date-time"}}},"postureChecksFailureMfaValues":{"type":"object","properties":{"passedMfa":{"type":"boolean","x-omitempty":false},"passedOnUnlock":{"type":"boolean","x-omitempty":false},"passedOnWake":{"type":"boolean","x-omitempty":false},"timedOut":{"type":"boolean","x-omitempty":false}}},"postureData":{"type":"object","required":["mac","domain","os","processes","apiSessionPostureData"],"properties":{"apiSessionPostureData":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/apiSessionPostureData"}},"domain":{"$ref":"#/components/schemas/postureDataDomain"},"mac":{"$ref":"#/components/schemas/postureDataMac"},"os":{"$ref":"#/components/schemas/postureDataOs"},"processes":{"type":"array","items":{"$ref":"#/components/schemas/postureDataProcess"}}}},"postureDataBase":{"type":"object","required":["postureCheckId","timedOut","lastUpdatedAt"],"properties":{"lastUpdatedAt":{"type":"string","format":"date-time"},"postureCheckId":{"type":"string"},"timedOut":{"type":"boolean"}}},"postureDataDomain":{"type":"object","allOf":[{"$ref":"#/components/schemas/postureDataBase"},{"type":"object","required":["domain"],"properties":{"domain":{"type":"string"}}}]},"postureDataEndpointState":{"type":"object","required":["wokenAt","unlockedAt"],"properties":{"unlockedAt":{"type":"string","format":"date-time"},"wokenAt":{"type":"string","format":"date-time"}}},"postureDataEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureData"},"meta":{"$ref":"#/components/schemas/meta"}}},"postureDataMac":{"type":"object","allOf":[{"$ref":"#/components/schemas/postureDataBase"},{"type":"object","required":["addresses"],"properties":{"addresses":{"type":"array","items":{"type":"string"}}}}]},"postureDataMfa":{"type":"object","required":["apiSessionId","passedMfa","passedOnWake","passedOnUnlock","passedAt"],"properties":{"apiSessionId":{"type":"string"},"passedAt":{"type":"string","format":"date-time","x-omitempty":false},"passedMfa":{"type":"boolean","x-omitempty":false},"passedOnUnlock":{"type":"boolean","x-omitempty":false},"passedOnWake":{"type":"boolean","x-omitempty":false}}},"postureDataOs":{"type":"object","allOf":[{"$ref":"#/components/schemas/postureDataBase"},{"type":"object","required":["type","version","build"],"properties":{"build":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}}]},"postureDataProcess":{"type":"object","allOf":[{"$ref":"#/components/schemas/postureDataBase"},{"type":"object","properties":{"binaryHash":{"type":"string"},"isRunning":{"type":"boolean"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}}]},"postureQueries":{"type":"object","required":["policyId","isPassing","postureQueries"],"properties":{"isPassing":{"type":"boolean"},"policyId":{"type":"string"},"policyType":{"$ref":"#/components/schemas/dialBind"},"postureQueries":{"type":"array","items":{"$ref":"#/components/schemas/postureQuery"}}}},"postureQuery":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["queryType","isPassing","timeout","timeoutRemaining"],"properties":{"isPassing":{"type":"boolean"},"process":{"$ref":"#/components/schemas/postureQueryProcess"},"processes":{"type":"array","items":{"$ref":"#/components/schemas/postureQueryProcess"}},"queryType":{"$ref":"#/components/schemas/postureCheckType"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}}]},"postureQueryProcess":{"type":"object","properties":{"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"}}},"process":{"type":"object","required":["osType","path"],"properties":{"hashes":{"type":"array","items":{"type":"string"}},"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"},"signerFingerprint":{"type":"string"}}},"processMulti":{"type":"object","required":["osType","path"],"properties":{"hashes":{"type":"array","items":{"type":"string"}},"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}},"reEnroll":{"type":"object","required":["expiresAt"],"properties":{"expiresAt":{"type":"string","format":"date-time"}}},"roleAttributesList":{"description":"An array of role attributes","type":"array","items":{"type":"string"}},"roles":{"type":"array","items":{"type":"string"},"x-omitempty":false},"routerCreate":{"type":"object","required":["name"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"tags":{"$ref":"#/components/schemas/tags"}}},"routerDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","isVerified","isOnline","fingerprint","cost","noTraversal","disabled"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0},"disabled":{"type":"boolean"},"enrollmentCreatedAt":{"type":"string","format":"date-time","nullable":true},"enrollmentExpiresAt":{"type":"string","format":"date-time","nullable":true},"enrollmentJwt":{"type":"string","nullable":true},"enrollmentToken":{"type":"string","nullable":true},"fingerprint":{"type":"string"},"isOnline":{"type":"boolean"},"isVerified":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean"},"unverifiedCertPem":{"type":"string","x-omitempty":false,"nullable":true},"unverifiedFingerprint":{"type":"string","x-omitempty":false,"nullable":true}}}]},"routerEntityRef":{"type":"object","allOf":[{"$ref":"#/components/schemas/entityRef"},{"type":"object","required":["isOnline"],"properties":{"isOnline":{"type":"boolean"}}}]},"routerList":{"type":"array","items":{"$ref":"#/components/schemas/routerDetail"}},"routerPatch":{"type":"object","properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"tags":{"$ref":"#/components/schemas/tags"}}},"routerUpdate":{"type":"object","required":["name"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"tags":{"$ref":"#/components/schemas/tags"}}},"sdkInfo":{"description":"SDK information an authenticating client may provide","type":"object","properties":{"appId":{"type":"string"},"appVersion":{"type":"string"},"branch":{"type":"string"},"revision":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}},"semantic":{"type":"string","enum":["AllOf","AnyOf"]},"serviceConfigAssign":{"type":"object","required":["serviceId","configId"],"properties":{"configId":{"type":"string"},"serviceId":{"type":"string"}}},"serviceConfigDetail":{"type":"object","required":["serviceId","service","configId","config"],"properties":{"config":{"$ref":"#/components/schemas/entityRef"},"configId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"}},"example":{"config":{"_links":{"self":{"href":"./identities/13347602-ba34-4ff7-8082-e533ba945744"}},"id":"13347602-ba34-4ff7-8082-e533ba945744","name":"test-config-02fade09-fcc3-426c-854e-18539726bdc6","urlName":"configs"},"service":{"_links":{"self":{"href":"./services/913a8c63-17a6-44d7-82b3-9f6eb997cf8e"}},"id":"913a8c63-17a6-44d7-82b3-9f6eb997cf8e","name":"netcat4545-egress-r2","urlName":"services"}}},"serviceConfigList":{"type":"array","items":{"$ref":"#/components/schemas/serviceConfigDetail"}},"serviceConfigsAssignList":{"type":"array","items":{"$ref":"#/components/schemas/serviceConfigAssign"}},"serviceCreate":{"type":"object","required":["name","encryptionRequired"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"serviceDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","terminatorStrategy","roleAttributes","permissions","configs","config","encryptionRequired","postureQueries"],"properties":{"config":{"description":"map of config data for this service keyed by the config type name. Only configs of the types requested will be returned.","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"permissions":{"$ref":"#/components/schemas/dialBindArray"},"postureQueries":{"type":"array","items":{"$ref":"#/components/schemas/postureQueries"}},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"terminatorStrategy":{"type":"string"}}}]},"serviceEdgeRouterPolicyCreate":{"type":"object","required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"}}},"serviceEdgeRouterPolicyDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","semantic","edgeRouterRoles","edgeRouterRolesDisplay","serviceRoles","serviceRolesDisplay"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"edgeRouterRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"serviceRolesDisplay":{"$ref":"#/components/schemas/namedRoles"}}}]},"serviceEdgeRouterPolicyList":{"type":"array","items":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyDetail"}},"serviceEdgeRouterPolicyPatch":{"type":"object","properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"}}},"serviceEdgeRouterPolicyUpdate":{"type":"object","required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"}}},"serviceList":{"type":"array","items":{"$ref":"#/components/schemas/serviceDetail"}},"servicePatch":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"servicePolicyCreate":{"type":"object","required":["name","type","semantic"],"properties":{"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/components/schemas/roles"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/dialBind"}}},"servicePolicyDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","type","semantic","serviceRoles","serviceRolesDisplay","identityRoles","identityRolesDisplay","postureCheckRoles","postureCheckRolesDisplay"],"properties":{"identityRoles":{"$ref":"#/components/schemas/roles"},"identityRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/components/schemas/roles"},"postureCheckRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"serviceRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"type":{"$ref":"#/components/schemas/dialBind"}}}]},"servicePolicyList":{"type":"array","items":{"$ref":"#/components/schemas/servicePolicyDetail"}},"servicePolicyPatch":{"type":"object","properties":{"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/components/schemas/roles"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/dialBind"}}},"servicePolicyUpdate":{"type":"object","required":["name","type","semantic"],"properties":{"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/components/schemas/roles"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/dialBind"}}},"serviceUpdate":{"type":"object","required":["name"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"sessionDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["type","apiSessionId","apiSession","serviceId","service","token","edgeRouters","identityId"],"properties":{"apiSession":{"$ref":"#/components/schemas/entityRef"},"apiSessionId":{"type":"string"},"edgeRouters":{"type":"array","items":{"$ref":"#/components/schemas/sessionEdgeRouter"}},"identityId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"},"token":{"type":"string"},"type":{"$ref":"#/components/schemas/dialBind"}}}]},"sessionEdgeRouter":{"allOf":[{"$ref":"#/components/schemas/commonEdgeRouterProperties"},{"type":"object","required":["urls"],"properties":{"urls":{"type":"object","additionalProperties":{"type":"string"}}}}]},"sessionManagementDetail":{"allOf":[{"$ref":"#/components/schemas/sessionDetail"},{"type":"object","properties":{"servicePolicies":{"type":"array","items":{"$ref":"#/components/schemas/entityRef"}}}}]},"sessionManagementList":{"type":"array","items":{"$ref":"#/components/schemas/sessionManagementDetail"}},"sessionRoutePathDetail":{"type":"object","properties":{"routePath":{"type":"array","items":{"type":"string"}}}},"specBodyDetail":{"type":"string"},"specDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}]},"specList":{"type":"array","items":{"$ref":"#/components/schemas/specDetail"}},"subTags":{"type":"object","additionalProperties":{"type":"object"}},"tags":{"description":"A map of user defined fields and values. The values are limited to the following types/values: null, string, boolean","allOf":[{"$ref":"#/components/schemas/subTags"}],"nullable":true},"terminatorCost":{"type":"integer","maximum":65535,"minimum":0},"terminatorCostMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/terminatorCost"}},"terminatorCreate":{"type":"object","required":["service","router","address","binding"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/components/schemas/terminatorCost"},"identity":{"type":"string"},"identitySecret":{"type":"string","format":"byte"},"precedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"}}},"terminatorDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["serviceId","service","routerId","router","binding","address","identity","cost","precedence","dynamicCost"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/components/schemas/terminatorCost"},"dynamicCost":{"$ref":"#/components/schemas/terminatorCost"},"identity":{"type":"string"},"precedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"router":{"$ref":"#/components/schemas/entityRef"},"routerId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"}}}]},"terminatorList":{"type":"array","items":{"$ref":"#/components/schemas/terminatorDetail"}},"terminatorPatch":{"type":"object","properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/components/schemas/terminatorCost"},"precedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"}}},"terminatorPrecedence":{"type":"string","enum":["default","required","failed"]},"terminatorPrecedenceMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/terminatorPrecedence"}},"terminatorUpdate":{"type":"object","required":["service","router","address","binding"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/components/schemas/terminatorCost"},"precedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"}}},"traceDetail":{"type":"object","properties":{"enabled":{"type":"boolean"},"traceId":{"type":"string"},"until":{"type":"string","format":"date-time"}}},"traceDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/traceDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"traceSpec":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"string"}},"duration":{"type":"string"},"enabled":{"type":"boolean"},"traceId":{"type":"string"}}},"username":{"type":"string","maxLength":100,"minLength":4},"usernameNullable":{"type":"string","maxLength":100,"minLength":4,"nullable":true},"version":{"type":"object","properties":{"apiVersions":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/apiVersion"}}},"buildDate":{"type":"string","example":"2020-02-11 16:09:08"},"capabilities":{"type":"array","items":{"type":"string"}},"revision":{"type":"string","example":"ea556fc18740"},"runtimeVersion":{"type":"string","example":"go1.13.5"},"version":{"type":"string","example":"v0.9.0"}}},"versionInfo":{"type":"object","required":["os","version","arch","buildDate","revision"],"properties":{"arch":{"type":"string"},"buildDate":{"type":"string"},"os":{"type":"string"},"revision":{"type":"string"},"version":{"type":"string"}}}}}},"bundle":{"consumes":["application/json"],"produces":["application/json"],"schemes":["https"],"swagger":"2.0","info":{"description":"OpenZiti Edge Management API","title":"Ziti Edge Management","contact":{"name":"OpenZiti","url":"https://openziti.discourse.group","email":"help@openziti.org"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.26.1"},"host":"demo.ziti.dev","basePath":"/edge/management/v1","paths":{"/":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listRoot","responses":{"200":{"description":"Version information for the controller","schema":{"$ref":"#/definitions/listVersionEnvelope"}}}}},"/.well-known/est/cacerts":{"get":{"security":[],"description":"This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.\\nThis endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library\\nthat supports parsing PKCS7 stores.\\n","produces":["application/pkcs7-mime"],"tags":["Well Known"],"summary":"Get CA Cert Store","operationId":"listWellKnownCas","responses":{"200":{"description":"A base64 encoded PKCS7 store","schema":{"type":"string","example":"MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG\\nBjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw\\nFQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD\\nVQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl\\nIEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx\\nODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI\\nDA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg\\nTmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv\\ndW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z\\nKIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ\\nNJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa\\nVK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl\\n7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s\\n6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb\\nQGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010\\nXdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU\\nHe16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW\\nghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb\\nryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw\\nHQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu\\nOuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD\\nAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE\\ngRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS\\nCpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7\\nKOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+\\nrMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X\\n6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI\\nFximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN\\n8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw\\nBHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2\\nYSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo\\nLLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq\\ndH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB\\nlzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH\\nDAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv\\ndW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5\\nIFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG\\nA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy\\nbG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg\\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg\\nQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD\\nDIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw\\nHDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f\\nWsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV\\nXO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv\\npnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD\\nw2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI\\nKyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo\\n783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm\\npQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE\\nWFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F\\n6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa\\nbADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD\\nVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB\\nACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy\\n3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY\\nuEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn\\ncCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS\\nWI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg\\nAX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO\\nwEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y\\nqQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m\\nfGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh\\ndprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8\\n3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==\\n"}}}}},"/api-sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of active API sessions. The resources can be sorted, filtered, and paginated. This endpoint\\nrequires admin access.\\n","produces":["application/json; charset=utf-8"],"tags":["API Session"],"summary":"List active API sessions","operationId":"listAPISessions","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of active API Sessions","schema":{"$ref":"#/definitions/listApiSessionsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/api-sessions/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single API Session by id. Requires admin access.","tags":["API Session"],"summary":"Retrieves a single API Session","operationId":"detailAPISessions","responses":{"200":{"description":"Retrieves a singular API Session by id","schema":{"$ref":"#/definitions/detailApiSessionEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Deletes and API sesion by id. Requires admin access.","tags":["API Session"],"summary":"Deletes an API Sessions","operationId":"deleteAPISessions","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"403":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/auth-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of Auth Policies","tags":["Auth Policy"],"summary":"List Auth Policies","operationId":"listAuthPolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of Auth Policies","schema":{"$ref":"#/definitions/listAuthPoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Creates an Auth Policy. Requires admin access.","tags":["Auth Policy"],"summary":"Creates an Auth Policy","operationId":"createAuthPolicy","parameters":[{"description":"An Auth Policy to create","name":"authPolicy","in":"body","required":true,"schema":{"$ref":"#/definitions/authPolicyCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/auth-policies/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Retrieves a single Auth Policy","operationId":"detailAuthPolicy","responses":{"200":{"description":"A singular Auth Policy resource","schema":{"$ref":"#/definitions/detailAuthPolicyEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on an Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Update all fields on an Auth Policy","operationId":"updateAuthPolicy","parameters":[{"description":"An Auth Policy update object","name":"authPolicy","in":"body","required":true,"schema":{"$ref":"#/definitions/authPolicyUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete an Auth Policy by id. Requires admin access.\\n","tags":["Auth Policy"],"summary":"Delete an Auth Policy","operationId":"deleteAuthPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update only the supplied fields on an Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Update the supplied fields on an Auth Policy","operationId":"patchAuthPolicy","parameters":[{"description":"An Auth Policy patch object","name":"authPolicy","in":"body","required":true,"schema":{"$ref":"#/definitions/authPolicyPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/authenticate":{"post":{"security":[],"description":"Allowed authentication methods include \\"password\\", \\"cert\\", and \\"ext-jwt\\"\\n","tags":["Authentication"],"summary":"Authenticate via a method supplied via a query string parameter","operationId":"authenticate","parameters":[{"name":"auth","in":"body","schema":{"$ref":"#/definitions/authenticate"}}],"responses":{"200":{"description":"The API session associated with the session used to issue the request","schema":{"$ref":"#/definitions/currentApiSessionDetailEnvelope"},"examples":{"default":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The authentication request could not be processed as the credentials are invalid","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"INVALID_AUTH","message":"The authentication request failed","requestId":"5952ed10-3091-474f-a691-47ebab6990dc"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"enum":["password","cert","ext-jwt"],"type":"string","name":"method","in":"query","required":true}]},"/authenticate/mfa":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA authentication by submitting a MFA time based one time token or backup code.","tags":["Authentication","MFA"],"summary":"Complete MFA authentication","operationId":"authenticateMfa","parameters":[{"description":"An MFA validation request","name":"mfaAuth","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}}}}},"/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of authenticators associated to identities. The resources can be sorted, filtered, and paginated.\\nThis endpoint requires admin access.\\n","tags":["Authenticator"],"summary":"List authenticators","operationId":"listAuthenticators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of authenticators","schema":{"$ref":"#/definitions/listAuthenticatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Creates an authenticator for a specific identity. Requires admin access.\\n","tags":["Authenticator"],"summary":"Creates an authenticator","operationId":"createAuthenticator","parameters":[{"description":"A Authenticator create object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorCreate"}}],"responses":{"201":{"description":"The create was successful","schema":{"$ref":"#/definitions/authenticatorCreate"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/authenticators/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Retrieves a single authenticator","operationId":"detailAuthenticator","responses":{"200":{"description":"A singular authenticator resource","schema":{"$ref":"#/definitions/detailAuthenticatorEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on an authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Update all fields on an authenticator","operationId":"updateAuthenticator","parameters":[{"description":"An authenticator put object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete an authenticator by id. Deleting all authenticators for an identity will make it impossible to log in.\\nRequires admin access.\\n","tags":["Authenticator"],"summary":"Delete an Authenticator","operationId":"deleteAuthenticator","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on an authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Update the supplied fields on an authenticator","operationId":"patchAuthenticator","parameters":[{"description":"An authenticator patch object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/authenticators/{id}/re-enroll":{"post":{"security":[{"ztSession":[]}],"description":"Allows an authenticator to be reverted to an enrollment and allows re-enrollment to occur. On success the \\ncreated enrollment record response is provided and the source authenticator record will be deleted. The \\nenrollment created depends on the authenticator. UPDB authenticators result in UPDB enrollments, CERT\\nauthenticators result in OTT enrollments, CERT + CA authenticators result in OTTCA enrollments.\\n","tags":["Authenticator"],"summary":"Reverts an authenticator to an enrollment","operationId":"reEnrollAuthenticator","parameters":[{"description":"A reEnrollment request","name":"reEnroll","in":"body","required":true,"schema":{"$ref":"#/definitions/reEnroll"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/cas":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of CA resources; supports filtering, sorting, and pagination. Requires admin access.","tags":["Certificate Authority"],"summary":"List CAs","operationId":"listCas","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of Certificate Authorities (CAs)","schema":{"$ref":"#/definitions/listCasEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Creates a CA in an unverified state. Requires admin access.","tags":["Certificate Authority"],"summary":"Creates a CA","operationId":"createCa","parameters":[{"description":"A CA to create","name":"ca","in":"body","required":true,"schema":{"$ref":"#/definitions/caCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/cas/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Retrieves a single CA","operationId":"detailCa","responses":{"200":{"description":"A singular Certificate Authority (CA) resource","schema":{"$ref":"#/definitions/detailCaEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on a CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Update all fields on a CA","operationId":"updateCa","parameters":[{"description":"A CA update object","name":"ca","in":"body","required":true,"schema":{"$ref":"#/definitions/caUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete a CA by id. Deleting a CA will delete its associated certificate authenticators. This can make it\\nimpossible for identities to authenticate if they no longer have any valid authenticators. Requires admin access.\\n","tags":["Certificate Authority"],"summary":"Delete a CA","operationId":"deleteCa","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update only the supplied fields on a CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Update the supplied fields on a CA","operationId":"patchCa","parameters":[{"description":"A CA patch object","name":"ca","in":"body","required":true,"schema":{"$ref":"#/definitions/caPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/cas/{id}/jwt":{"get":{"security":[{"ztSession":[]}],"description":"For CA auto enrollment, the enrollment JWT is static and provided on each CA resource. This endpoint provides\\nthe jwt as a text response.\\n","produces":["application/jwt"],"tags":["Certificate Authority"],"summary":"Retrieve the enrollment JWT for a CA","operationId":"getCaJwt","responses":{"200":{"description":"The result is the JWT text to validate the CA","schema":{"type":"string"},"examples":{"application/jwt":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImNhIiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MTI 4MC8ifQ.Ot6lhNBSOw8ygHytdI5l7WDf9EWadOj44UPvJ0c-8mJ54fClWM3uMZrAHSSfV6KmOSZOeBBJe4VlNyoD-_MOECP0BzYSnSQP3E zJb0VlM-fFmGcKNGW157icyZNISfO43JL_Lw2QPBzTgikqSIj9eZnocC3BeAmZCHsVznnLfHWqDldcmuxnu-5MNOSrWV1x9iVcgLFlLHXK 2PLA4qIiZmlQTrQjpHJmUaoJ07mnj8hMKzxB3wBG8kpazjEo7HDRCO06aBH4eqFgf_l0iT8Dzcb31jquWMGUoSXPhf4lVJh_FiNcR1wVx- UiHLbG5h23Aqf1UJF-F38rc1FElKz0Zg"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/cas/{id}/verify":{"post":{"security":[{"ztSession":[]}],"description":"Allows a CA to become verified by submitting a certificate in PEM format that has been signed by the target CA.\\nThe common name on the certificate must match the verificationToken property of the CA. Unverfieid CAs can not\\nbe used for enrollment/authentication. Requires admin access.\\n","consumes":["text/plain"],"tags":["Certificate Authority"],"summary":"Verify a CA","operationId":"verifyCa","parameters":[{"description":"A PEM formatted certificate signed by the target CA with the common name matching the CA\'s validationToken","name":"certificate","in":"body","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/config-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config-type resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List config-types","operationId":"listConfigTypes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of config-types","schema":{"$ref":"#/definitions/listConfigTypesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]}],"tags":["Config"],"summary":"Create a config-type. Requires admin access.","operationId":"createConfigType","parameters":[{"description":"A config-type to create","name":"configType","in":"body","required":true,"schema":{"$ref":"#/definitions/configTypeCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/config-types/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single config-type by id. Requires admin access.","tags":["Config"],"summary":"Retrieves a single config-type","operationId":"detailConfigType","responses":{"200":{"description":"A singular config-type resource","schema":{"$ref":"#/definitions/detailConfigTypeEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on a config-type by id. Requires admin access.","tags":["Config"],"summary":"Update all fields on a config-type","operationId":"updateConfigType","parameters":[{"description":"A config-type update object","name":"configType","in":"body","required":true,"schema":{"$ref":"#/definitions/configTypeUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete a config-type by id. Removing a configuration type that are in use will result in a 409 conflict HTTP status code and error. All configurations of a type must be removed first.","tags":["Config"],"summary":"Delete a config-type","operationId":"deleteConfigType","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on a config-type. Requires admin access.","tags":["Config"],"summary":"Update the supplied fields on a config-type","operationId":"patchConfigType","parameters":[{"description":"A config-type patch object","name":"configType","in":"body","required":true,"schema":{"$ref":"#/definitions/configTypePatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/config-types/{id}/configs":{"get":{"security":[{"ztSession":[]}],"description":"Lists the configs associated to a config-type. Requires admin access.","tags":["Config"],"summary":"Lists the configs of a specific config-type","operationId":"listConfigsForConfigType","responses":{"200":{"description":"A list of configs","schema":{"$ref":"#/definitions/listConfigsEnvelope"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List configs","operationId":"listConfigs","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of configs","schema":{"$ref":"#/definitions/listConfigsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a config resource. Requires admin access.","tags":["Config"],"summary":"Create a config resource","operationId":"createConfig","parameters":[{"description":"A config to create","name":"config","in":"body","required":true,"schema":{"$ref":"#/definitions/configCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/configs/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single config by id. Requires admin access.","tags":["Config"],"summary":"Retrieves a single config","operationId":"detailConfig","responses":{"200":{"description":"A singular config resource","schema":{"$ref":"#/definitions/detailConfigEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a config by id. Requires admin access.","tags":["Config"],"summary":"Update all fields on a config","operationId":"updateConfig","parameters":[{"description":"A config update object","name":"config","in":"body","required":true,"schema":{"$ref":"#/definitions/configUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a config by id. Requires admin access.","tags":["Config"],"summary":"Delete a config","operationId":"deleteConfig","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a config. Requires admin access.","tags":["Config"],"summary":"Update the supplied fields on a config","operationId":"patchConfig","parameters":[{"description":"A config patch object","name":"config","in":"body","required":true,"schema":{"$ref":"#/definitions/configPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-api-session":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the API session that was used to issue the current request","tags":["Current API Session"],"summary":"Return the current API session","operationId":"getCurrentAPISession","responses":{"200":{"description":"The API session associated with the session used to issue the request","schema":{"$ref":"#/definitions/currentApiSessionDetailEnvelope"},"examples":{"default":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Terminates the current API session","tags":["Current API Session"],"summary":"Logout","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns the identity associated with the API sessions used to issue the current request","tags":["Current Identity"],"summary":"Return the current identity","operationId":"getCurrentIdentity","responses":{"200":{"description":"The identity associated with the API Session used to issue the request","schema":{"$ref":"#/definitions/currentIdentityDetailEnvelope"},"examples":{"default":{"data":{"_links":{"edge-router-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers"},"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"},"service-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities"}},"authenticators":{"updb":{"username":"admin"}},"createdAt":"2020-01-13T16:38:13.6854788Z","enrollment":{},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","isAdmin":true,"isDefaultAdmin":true,"name":"Default Admin","roleAttributes":[],"tags":{},"type":{"_links":{"self":{"href":"./identity-types/User"}},"id":"User","name":"User","urlName":"identity-types"},"updatedAt":"2020-01-13T16:38:13.6854788Z"},"meta":{}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of authenticators assigned to the current API session\'s identity; supports filtering, sorting, and pagination.","tags":["Current API Session"],"summary":"List authenticators for the current identity","operationId":"listCurrentIdentityAuthenticators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of authenticators","schema":{"$ref":"#/definitions/listAuthenticatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Will only show authenticators assigned to the API session\'s identity.","tags":["Current API Session"],"summary":"Retrieve an authenticator for the current identity","operationId":"detailCurrentIdentityAuthenticator","responses":{"200":{"description":"A singular authenticator resource","schema":{"$ref":"#/definitions/detailAuthenticatorEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session\'s\\nidentity.\\n","tags":["Current API Session"],"summary":"Update all fields on an authenticator of this identity","operationId":"updateCurrentIdentityAuthenticator","parameters":[{"description":"An authenticator put object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorUpdateWithCurrent"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API\\nsession\'s identity.\\n","tags":["Current API Session"],"summary":"Update the supplied fields on an authenticator of this identity","operationId":"patchCurrentIdentityAuthenticator","parameters":[{"description":"An authenticator patch object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorPatchWithCurrent"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/authenticators/{id}/extend":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.\\nAllows an identity to extend its certificate\'s expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.\\nThe response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.\\nAfter verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to recieve a new certificate associated with a certificate based authenticator","operationId":"extendCurrentIdentityAuthenticator","parameters":[{"name":"extend","in":"body","required":true,"schema":{"$ref":"#/definitions/identityExtendEnrollmentRequest"}}],"responses":{"200":{"description":"A response containg the identity\'s new certificate","schema":{"$ref":"#/definitions/identityExtendEnrollmentEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/authenticators/{id}/extend-verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.\\nAfter receipt, the new client certificate must be used for new authentication requests.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to validate reciept of a new client certificate","operationId":"extendVerifyCurrentIdentityAuthenticator","parameters":[{"name":"extend","in":"body","required":true,"schema":{"$ref":"#/definitions/identityExtendValidateEnrollmentRequest"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/mfa":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.\\n","tags":["Current Identity","MFA"],"summary":"Returns the current status of MFA enrollment","operationId":"detailMfa","responses":{"200":{"description":"The details of an MFA enrollment","schema":{"$ref":"#/definitions/detailMfaEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`\\n","tags":["Current Identity","MFA"],"summary":"Initiate MFA enrollment","operationId":"enrollMfa","responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The identity is already enrolled in MFA","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":null,"cause":null,"causeMessage":"","code":"ALREADY_MFA_ENROLLED","message":"The identity is already enrolled in MFA","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Disable MFA for the current identity","operationId":"deleteMfa","parameters":[{"type":"string","name":"mfa-validation-code","in":"header"}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa/qr-code":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.\\n","produces":["image/png","application/json"],"tags":["Current Identity","MFA"],"summary":"Show a QR code for unverified MFA enrollments","operationId":"detailMfaQrCode","responses":{"200":{"description":"OK"},"404":{"description":"No MFA enrollment or MFA enrollment is completed"}}}},"/current-identity/mfa/recovery-codes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment view the current recovery codes","operationId":"detailMfaRecoveryCodes","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","schema":{"$ref":"#/definitions/mfaCode"}},{"type":"string","name":"mfa-validation-code","in":"header"}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment regenerate the recovery codes","operationId":"createMfaRecoveryCodes","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"The recovery codes of an MFA enrollment","schema":{"$ref":"#/definitions/detailMfaRecoveryCodesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Complete MFA enrollment by verifying a time based one time token","operationId":"verifyMfa","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/database/check-data-integrity":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Starts a data integrity scan on the datastore. Requires admin access. Only once instance may run at a time, including runs of fixDataIntegrity.","tags":["Database"],"summary":"Starts a data integrity scan on the datastore","operationId":"checkDataIntegrity","responses":{"202":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/database/data-integrity-results":{"get":{"security":[{"ztSession":[]}],"description":"Returns any results found from in-progress integrity checks. Requires admin access.","tags":["Database"],"summary":"Returns any results found from in-progress integrity checks","operationId":"dataIntegrityResults","responses":{"200":{"description":"A list of data integrity issues found","schema":{"$ref":"#/definitions/dataIntegrityCheckResultEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/database/fix-data-integrity":{"post":{"security":[{"ztSession":[]}],"description":"Runs a data integrity scan on the datastore, attempts to fix any issues it can, and returns any found issues. Requires admin access. Only once instance may run at a time, including runs of checkDataIntegrity.","tags":["Database"],"summary":"Runs a data integrity scan on the datastore, attempts to fix any issues it can and returns any found issues","operationId":"fixDataIntegrity","responses":{"202":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/database/snapshot":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a new database snapshot. Requires admin access.","tags":["Database"],"summary":"Create a new database snapshot","operationId":"createDatabaseSnapshot","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List edge router policies","operationId":"listEdgeRouterPolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of edge router policies","schema":{"$ref":"#/definitions/listEdgeRouterPoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create an edge router policy resource. Requires admin access.","tags":["Edge Router Policy"],"summary":"Create an edge router policy resource","operationId":"createEdgeRouterPolicy","parameters":[{"description":"An edge router policy to create","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterPolicyCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/edge-router-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Retrieves a single edge router policy","operationId":"detailEdgeRouterPolicy","responses":{"200":{"description":"A single edge router policy","schema":{"$ref":"#/definitions/detailEdgeRouterPolicyEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Update all fields on an edge router policy","operationId":"updateEdgeRouterPolicy","parameters":[{"description":"An edge router policy update object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterPolicyUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Delete an edge router policy","operationId":"deleteEdgeRouterPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an edge router policy. Requires admin access.","tags":["Edge Router Policy"],"summary":"Update the supplied fields on an edge router policy","operationId":"patchEdgeRouterPolicy","parameters":[{"description":"An edge router policy patch object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterPolicyPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-router-policies/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge routers an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List edge routers a policy affects","operationId":"listEdgeRouterPolicyEdgeRouters","responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-router-policies/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List identities an edge router policy affects","operationId":"listEdgeRouterPolicyIdentities","responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-router-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by edge routers; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by edge routers","operationId":"listEdgeRouterRoleAttributes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of role attributes","schema":{"$ref":"#/definitions/listRoleAttributesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List edge routers","operationId":"listEdgeRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Create a edge router resource. Requires admin access.","tags":["Edge Router"],"summary":"Create an edge router","operationId":"createEdgeRouter","parameters":[{"description":"A edge router to create","name":"edgeRouter","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/edge-routers/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Retrieves a single edge router","operationId":"detailEdgeRouter","responses":{"200":{"description":"A singular edge router resource","schema":{"$ref":"#/definitions/detailedEdgeRouterEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on an edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Update all fields on an edge router","operationId":"updateEdgeRouter","parameters":[{"description":"An edge router update object","name":"edgeRouter","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete an edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Delete an edge router","operationId":"deleteEdgeRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on an edge router. Requires admin access.","tags":["Edge Router"],"summary":"Update the supplied fields on an edge router","operationId":"patchEdgeRouter","parameters":[{"description":"An edge router patch object","name":"edgeRouter","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/edge-router-policies":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of edge router policies that apply to the specified edge router.","tags":["Edge Router"],"summary":"List the edge router policies that affect an edge router","operationId":"listEdgeRouterEdgeRouterPolicies","responses":{"200":{"description":"A list of edge router policies","schema":{"$ref":"#/definitions/listEdgeRouterPoliciesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/identities":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of identities that may access services via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List associated identities","operationId":"listEdgeRouterIdentities","responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/re-enroll":{"post":{"security":[{"ztSession":[]}],"description":"Removes current certificate based authentication mechanisms and reverts the edge router into a state where enrollment must be performed.\\nThe router retains all other properties and associations. If the router is currently connected, it will be disconnected and any\\nattemps to reconnect will fail until the enrollment process is completed with the newly generated JWT.\\n\\nIf the edge router has an existing outstanding enrollment JWT it will be replaced. The previous JWT will no longer be usable to\\ncomplete the enrollment process.\\n","tags":["Edge Router"],"summary":"Re-enroll an edge router","operationId":"reEnrollEdgeRouter","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/service-edge-router-policies":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of service policies policies that apply to the specified edge router.","tags":["Edge Router"],"summary":"List the service policies that affect an edge router","operationId":"listEdgeRouterServiceEdgeRouterPolicies","responses":{"200":{"description":"A list of service policies","schema":{"$ref":"#/definitions/listServicePoliciesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/services":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of services that may be accessed via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List associated services","operationId":"listEdgeRouterServices","responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/enrollments":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of outstanding enrollments; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Enrollment"],"summary":"List outstanding enrollments","operationId":"listEnrollments","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of enrollments","schema":{"$ref":"#/definitions/listEnrollmentsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a new OTT, OTTCA, or UPDB enrollment for a specific identity. If an enrollment of the same type is already outstanding the request will fail with a 409 conflict. If desired, an existing enrollment can be refreshed by `enrollments/:id/refresh` or deleted.","tags":["Enrollment"],"summary":"Create an outstanding enrollment for an identity","operationId":"createEnrollment","parameters":[{"description":"An enrollment to create","name":"enrollment","in":"body","required":true,"schema":{"$ref":"#/definitions/enrollmentCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The request could not be completed due to a conflict of configuration or state","schema":{"$ref":"#/definitions/apiErrorEnvelope"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/enrollments/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single outstanding enrollment by id. Requires admin access.","tags":["Enrollment"],"summary":"Retrieves an outstanding enrollment","operationId":"detailEnrollment","responses":{"200":{"description":"A singular enrollment resource","schema":{"$ref":"#/definitions/detailEnrollmentEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an outstanding enrollment by id. Requires admin access.","tags":["Enrollment"],"summary":"Delete an outstanding enrollment","operationId":"deleteEnrollment","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/enrollments/{id}/refresh":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"For expired or unexpired enrollments, reset the expiration window. A new JWT will be generated and must be used for the enrollment.","tags":["Enrollment"],"summary":"Refreshes an enrollment record\'s expiration window","operationId":"refreshEnrollment","parameters":[{"description":"An enrollment refresh request","name":"refresh","in":"body","required":true,"schema":{"$ref":"#/definitions/enrollmentRefresh"}}],"responses":{"200":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/enumerated-capabiities":{"get":{"security":[],"tags":["Informational"],"summary":"Returns all capabilities this version of the controller is aware of, enabled or not.","operationId":"listEnumeratedCapabilities","responses":{"200":{"description":"A typed and enumerated list of capabilities","schema":{"$ref":"#/definitions/listEnumeratedCapabilitiesEnvelope"}}}}},"/external-jwt-signers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of external JWT signers for authentication","tags":["External JWT Signer"],"summary":"List External JWT Signers","operationId":"listExternalJwtSigners","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of External JWT Signers","schema":{"$ref":"#/definitions/listExternalJwtSignersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an External JWT Signer. Requires admin access.","tags":["External JWT Signer"],"summary":"Creates an External JWT Signer","operationId":"createExternalJwtSigner","parameters":[{"description":"An External JWT Signer to create","name":"externalJwtSigner","in":"body","required":true,"schema":{"$ref":"#/definitions/externalJwtSignerCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/external-jwt-signers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Retrieves a single External JWT Signer","operationId":"detailExternalJwtSigner","responses":{"200":{"description":"A singular External JWT Signer resource","schema":{"$ref":"#/definitions/detailExternalJwtSignerEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Update all fields on an External JWT Signer","operationId":"updateExternalJwtSigner","parameters":[{"description":"An External JWT Signer update object","name":"externalJwtSigner","in":"body","required":true,"schema":{"$ref":"#/definitions/externalJwtSignerUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an External JWT Signer by id. Requires admin access.\\n","tags":["External JWT Signer"],"summary":"Delete an External JWT Signer","operationId":"deleteExternalJwtSigner","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on an External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Update the supplied fields on an External JWT Signer","operationId":"patchExternalJwtSigner","parameters":[{"description":"An External JWT Signer patch object","name":"externalJwtSigner","in":"body","required":true,"schema":{"$ref":"#/definitions/externalJwtSignerPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List identities","operationId":"listIdentities","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create an identity resource. Requires admin access.","tags":["Identity"],"summary":"Create an identity resource","operationId":"createIdentity","parameters":[{"description":"An identity to create","name":"identity","in":"body","required":true,"schema":{"$ref":"#/definitions/identityCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/identities/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single identity by id. Requires admin access.","tags":["Identity"],"summary":"Retrieves a single identity","operationId":"detailIdentity","responses":{"200":{"description":"A single identity","schema":{"$ref":"#/definitions/detailIdentityEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an identity by id. Requires admin access.","tags":["Identity"],"summary":"Update all fields on an identity","operationId":"updateIdentity","parameters":[{"description":"An identity update object","name":"identity","in":"body","required":true,"schema":{"$ref":"#/definitions/identityUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an identity by id. Requires admin access.","tags":["Identity"],"summary":"Delete an identity","operationId":"deleteIdentity","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an identity. Requires admin access.","tags":["Identity"],"summary":"Update the supplied fields on an identity","operationId":"patchIdentity","parameters":[{"description":"An identity patch object","name":"identity","in":"body","required":true,"schema":{"$ref":"#/definitions/identityPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/authenticators":{"get":{"security":[{"ztSession":[]}],"description":"Returns a list of authenticators associated to the identity specified\\n","tags":["Identity"],"summary":"Retrieve the current authenticators of a specific identity","operationId":"getIdentityAuthenticators","responses":{"200":{"description":"A list of authenticators","schema":{"$ref":"#/definitions/listAuthenticatorsEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/disable":{"post":{"security":[{"ztSession":[]}],"description":"Allows an admin disable an identity for a set amount of time or indefinitely.\\n","tags":["Identity"],"summary":"Set an identity as disabled","operationId":"disableIdentity","parameters":[{"description":"Disable parameters","name":"disable","in":"body","required":true,"schema":{"$ref":"#/definitions/disableParams"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policies that apply to the specified identity.","tags":["Identity"],"summary":"List the edge router policies that affect an identity","operationId":"listIdentitysEdgeRouterPolicies","responses":{"200":{"description":"A list of edge router policies","schema":{"$ref":"#/definitions/listEdgeRouterPoliciesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge-routers that the given identity may use to access services. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List accessible edge-routers","operationId":"listIdentityEdgeRouters","responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/enable":{"post":{"security":[{"ztSession":[]}],"description":"Allows an admin to remove disabled statuses from an identity.\\n","tags":["Identity"],"summary":"Clears all disabled state from an identity","operationId":"enableIdentity","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/enrollments":{"get":{"security":[{"ztSession":[]}],"description":"Returns a list of enrollments associated to the identity specified\\n","tags":["Identity"],"summary":"Retrieve the current enrollments of a specific identity","operationId":"getIdentityEnrollments","responses":{"200":{"description":"A list of enrollments","schema":{"$ref":"#/definitions/listEnrollmentsEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/failed-service-requests":{"get":{"security":[{"ztSession":[]}],"description":"Returns a list of service session requests that failed due to posture checks. The entries will contain\\nevery policy that was verified against and every failed check in each policy. Each check will include\\nthe historical posture data and posture check configuration.\\n","tags":["Identity"],"summary":"Retrieve a list of the most recent service failure requests due to posture checks","operationId":"getIdentityFailedServiceRequests","responses":{"200":{"description":"Returns a list of service request failures","schema":{"$ref":"#/definitions/failedServiceRequestEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/mfa":{"delete":{"security":[{"ztSession":[]}],"description":"Allows an admin to remove MFA enrollment from a specific identity. Requires admin.\\n","tags":["Identity","MFA"],"summary":"Remove MFA from an identitity","operationId":"removeIdentityMfa","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/policy-advice/{serviceId}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Analyzes policies to see if the given identity should be able to dial or bind the given service. |\\nWill check services policies to see if the identity can access the service. Will check edge router policies |\\nto check if the identity and service have access to common edge routers so that a connnection can be made. |\\nWill also check if at least one edge router is on-line. Requires admin access.\\n","tags":["Identity"],"summary":"Analyze policies relating the given identity and service","operationId":"getIdentityPolicyAdvice","responses":{"200":{"description":"Returns the document that represents the policy advice","schema":{"$ref":"#/definitions/getIdentityPolicyAdviceEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true},{"type":"string","description":"The id of a service","name":"serviceId","in":"path","required":true}]},"/identities/{id}/posture-data":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a nested map data represeting the posture data of the identity.\\nThis data should be considered volatile.\\n","tags":["Identity"],"summary":"Retrieve the curent posture data for a specific identity.","operationId":"getIdentityPostureData","responses":{"200":{"description":"Returns the document that represents posture data","schema":{"$ref":"#/definitions/postureDataEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/service-configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service configs associated to a specific identity","tags":["Identity"],"summary":"List the service configs associated a specific identity","operationId":"listIdentitysServiceConfigs","responses":{"200":{"description":"A list of service configs","schema":{"$ref":"#/definitions/listServiceConfigsEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Associate service configs to a specific identity","tags":["Identity"],"summary":"Associate service configs for a specific identity","operationId":"associateIdentitysServiceConfigs","parameters":[{"description":"A service config patch object","name":"serviceConfigs","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceConfigsAssignList"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Remove service configs from a specific identity","tags":["Identity"],"summary":"Remove associated service configs from a specific identity","operationId":"disassociateIdentitysServiceConfigs","parameters":[{"description":"An array of service and config id pairs to remove","name":"serviceConfigIdPairs","in":"body","schema":{"$ref":"#/definitions/serviceConfigsAssignList"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policies that apply to the specified identity.","tags":["Identity"],"summary":"List the service policies that affect an identity","operationId":"listIdentityServicePolicies","responses":{"200":{"description":"A list of service policies","schema":{"$ref":"#/definitions/listServicePoliciesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of services that the given identity has access to. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List accessible services","operationId":"listIdentityServices","responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/trace":{"put":{"security":[{"ztSession":[]}],"description":"Allows an admin to enable/disable data flow tracing for an identity\\n","tags":["Identity","Tracing"],"summary":"Enable/disable data flow tracing for an identity","operationId":"updateIdentityTracing","parameters":[{"description":"A traceSpec object","name":"traceSpec","in":"body","required":true,"schema":{"$ref":"#/definitions/traceSpec"}}],"responses":{"200":{"description":"Returns the document that represents the trace state","schema":{"$ref":"#/definitions/traceDetailEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identity-role-attributes":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of role attributes in use by identities; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by identities","operationId":"listIdentityRoleAttributes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of role attributes","schema":{"$ref":"#/definitions/listRoleAttributesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/identity-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity types; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List available identity types","operationId":"listIdentityTypes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of identity types","schema":{"$ref":"#/definitions/listIdentityTypesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/identity-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single identity type by id. Requires admin access.","tags":["Identity"],"summary":"Retrieves a identity type","operationId":"detailIdentityType","responses":{"200":{"description":"A single identity type","schema":{"$ref":"#/definitions/detailIdentityTypeEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/posture-check-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture check types\\n","produces":["application/json; charset=utf-8"],"tags":["Posture Checks"],"summary":"List a subset of posture check types","operationId":"listPostureCheckTypes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of posture check types","schema":{"$ref":"#/definitions/listPostureCheckTypesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-check-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single posture check type by id","tags":["Posture Checks"],"summary":"Retrieves a single posture check type","operationId":"detailPostureCheckType","responses":{"200":{"description":"Retrieves a singular posture check type by id","schema":{"$ref":"#/definitions/detailPostureCheckTypeEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/posture-checks":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture checks\\n","produces":["application/json; charset=utf-8"],"tags":["Posture Checks"],"summary":"List a subset of posture checks","operationId":"listPostureChecks","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of posture checks","schema":{"$ref":"#/definitions/listPostureCheckEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a Posture Checks","tags":["Posture Checks"],"summary":"Creates a Posture Checks","operationId":"createPostureCheck","parameters":[{"description":"A Posture Check to create","name":"postureCheck","in":"body","required":true,"schema":{"$ref":"#/definitions/postureCheckCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-checks/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single Posture Checks by id","tags":["Posture Checks"],"summary":"Retrieves a single Posture Checks","operationId":"detailPostureCheck","responses":{"200":{"description":"Retrieves a singular posture check by id","schema":{"$ref":"#/definitions/detailPostureCheckEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a Posture Checks by id","tags":["Posture Checks"],"summary":"Update all fields on a Posture Checks","operationId":"updatePostureCheck","parameters":[{"description":"A Posture Check update object","name":"postureCheck","in":"body","required":true,"schema":{"$ref":"#/definitions/postureCheckUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Deletes and Posture Checks by id","tags":["Posture Checks"],"summary":"Deletes an Posture Checks","operationId":"deletePostureCheck","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"403":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on a Posture Checks by id","tags":["Posture Checks"],"summary":"Update the supplied fields on a Posture Checks","operationId":"patchPostureCheck","parameters":[{"description":"A Posture Check patch object","name":"postureCheck","in":"body","required":true,"schema":{"$ref":"#/definitions/postureCheckPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Router"],"summary":"List routers","operationId":"listRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of specifications","schema":{"$ref":"#/definitions/listRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a router resource. Requires admin access.","tags":["Router"],"summary":"Create a router resource","operationId":"createRouter","parameters":[{"description":"A router to create","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single router by id. Requires admin access.","tags":["Router"],"summary":"Retrieves a single router","operationId":"detailRouter","responses":{"200":{"description":"A single router","schema":{"$ref":"#/definitions/detailRouterEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a router by id. Requires admin access.","tags":["Router"],"summary":"Update all fields on a router","operationId":"updateRouter","parameters":[{"description":"A router update object","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a router by id. Requires admin access.","tags":["Router"],"summary":"Delete a router","operationId":"deleteRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a router. Requires admin access.","tags":["Router"],"summary":"Update the supplied fields on a router","operationId":"patchRouter","parameters":[{"description":"A router patch object","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Edge Router Policy"],"summary":"List service edge router policies","operationId":"listServiceEdgeRouterPolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of service edge router policies","schema":{"$ref":"#/definitions/listServiceEdgeRouterPoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a service edge router policy resource. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Create a service edge router policy resource","operationId":"createServiceEdgeRouterPolicy","parameters":[{"description":"A service edge router policy to create","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceEdgeRouterPolicyCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/service-edge-router-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Retrieves a single service edge policy","operationId":"detailServiceEdgeRouterPolicy","responses":{"200":{"description":"A single service edge router policy","schema":{"$ref":"#/definitions/detailServiceEdgePolicyEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Update all fields on a service edge policy","operationId":"updateServiceEdgeRouterPolicy","parameters":[{"description":"A service edge router policy update object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceEdgeRouterPolicyUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Delete a service edge policy","operationId":"deleteServiceEdgeRouterPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service edge policy. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Update the supplied fields on a service edge policy","operationId":"patchServiceEdgeRouterPolicy","parameters":[{"description":"A service edge router policy patch object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceEdgeRouterPolicyPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-edge-router-policies/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"List the edge routers that a service edge router policy applies to","tags":["Service Edge Router Policy"],"summary":"List the edge routers that a service edge router policy applies to","operationId":"listServiceEdgeRouterPolicyEdgeRouters","responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-edge-router-policies/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"List the services that a service edge router policy applies to","tags":["Service Edge Router Policy"],"summary":"List the services that a service edge router policy applies to","operationId":"listServiceEdgeRouterPolicyServices","responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-policies":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of service policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List service policies","operationId":"listServicePolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of service policies","schema":{"$ref":"#/definitions/listServicePoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]}],"description":"Create a service policy resource. Requires admin access.","tags":["Service Policy"],"summary":"Create a service policy resource","operationId":"createServicePolicy","parameters":[{"description":"A service policy to create","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePolicyCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/service-policies/{id}":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a single service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Retrieves a single service policy","operationId":"detailServicePolicy","responses":{"200":{"description":"A single service policy","schema":{"$ref":"#/definitions/detailServicePolicyEnvelop"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on a service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Update all fields on a service policy","operationId":"updateServicePolicy","parameters":[{"description":"A service policy update object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePolicyUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete a service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Delete a service policy","operationId":"deleteServicePolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on a service policy. Requires admin access.","tags":["Service Policy"],"summary":"Update the supplied fields on a service policy","operationId":"patchServicePolicy","parameters":[{"description":"A service policy patch object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePolicyPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-policies/{id}/identities":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of identity resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List identities a service policy affects","operationId":"listServicePolicyIdentities","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"400":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-policies/{id}/posture-checks":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of posture check resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List posture check a service policy includes","operationId":"listServicePolicyPostureChecks","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of posture checks","schema":{"$ref":"#/definitions/listPostureCheckEnvelope"}},"400":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-policies/{id}/services":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of service resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List services a service policy affects","operationId":"listServicePolicyServices","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"400":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-role-attributes":{"get":{"security":[{"ztSession":[]}],"description":"Retrieves a list of role attributes in use by services; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by services","operationId":"listServiceRoleAttributes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of role attributes","schema":{"$ref":"#/definitions/listRoleAttributesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List services","operationId":"listServices","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a services resource. Requires admin access.","tags":["Service"],"summary":"Create a services resource","operationId":"createService","parameters":[{"description":"A service to create","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/services/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service by id. Requires admin access.","tags":["Service"],"summary":"Retrieves a single service","operationId":"detailService","responses":{"200":{"description":"A single service","schema":{"$ref":"#/definitions/detailServiceEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service by id. Requires admin access.","tags":["Service"],"summary":"Update all fields on a service","operationId":"updateService","parameters":[{"description":"A service update object","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service by id. Requires admin access.","tags":["Service"],"summary":"Delete a service","operationId":"deleteService","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service. Requires admin access.","tags":["Service"],"summary":"Update the supplied fields on a service","operationId":"patchService","parameters":[{"description":"A service patch object","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources associated to a specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List configs associated to a specific service","operationId":"listServiceConfig","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of configs","schema":{"$ref":"#/definitions/listConfigsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge-routers that may be used to access the given service. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List accessible edge-routers","operationId":"listServiceEdgeRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities that have access to this service. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List identities with access","operationId":"listServiceIdentities","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service edge router policy resources that affect a specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List service edge router policies that affect a specific service","operationId":"listServiceServiceEdgeRouterPolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of service edge router policies","schema":{"$ref":"#/definitions/listServiceEdgeRouterPoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policy resources that affect specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List service policies that affect a specific service","operationId":"listServiceServicePolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of service policies","schema":{"$ref":"#/definitions/listServicePoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.\\n","tags":["Service"],"summary":"List of terminators assigned to a service","operationId":"listServiceTerminators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of terminators","schema":{"$ref":"#/definitions/listTerminatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of active sessions resources; supports filtering, sorting, and pagination. Requires admin access.\\n\\nSessions are tied to an API session and are moved when an API session times out or logs out. Active sessions\\n(i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.\\n","tags":["Session"],"summary":"List sessions","operationId":"listSessions","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of sessions","schema":{"$ref":"#/definitions/listSessionsManagementEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session by id. Requires admin access.","tags":["Session"],"summary":"Retrieves a single session","operationId":"detailSession","responses":{"200":{"description":"A single session","schema":{"$ref":"#/definitions/detailSessionManagementEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a session by id. Requires admin access.","tags":["Session"],"summary":"Delete a session","operationId":"deleteSession","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/sessions/{id}/route-path":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session\'s route path by id. Requires admin access.","tags":["Session"],"summary":"Retrieves a single session\'s router path","operationId":"detailSessionRoutePath","responses":{"200":{"description":"A single session\'s route path","schema":{"$ref":"#/definitions/detailSessionRoutePathEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/specs":{"get":{"security":[],"description":"Returns a list of spec files embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Returns a list of API specs","operationId":"listSpecs","responses":{"200":{"description":"A list of specifications","schema":{"$ref":"#/definitions/listSpecsEnvelope"}}}}},"/specs/{id}":{"get":{"security":[],"description":"Returns single spec resource embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Return a single spec resource","operationId":"detailSpec","responses":{"200":{"description":"A single specification","schema":{"$ref":"#/definitions/detailSpecEnvelope"}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/specs/{id}/spec":{"get":{"security":[],"description":"Return the body of the specification (i.e. Swagger, OpenAPI 2.0, 3.0, etc).","produces":["text/yaml","application/json"],"tags":["Informational"],"summary":"Returns the spec\'s file","operationId":"detailSpecBody","responses":{"200":{"description":"Returns the document that represents the specification","schema":{"$ref":"#/definitions/detailSpecBodyEnvelope"}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/summary":{"get":{"security":[{"ztSession":[]}],"description":"This endpoint is usefull for UIs that wish to display UI elements with counts.","tags":["Informational"],"summary":"Returns a list of accessible resource counts","operationId":"listSummary","responses":{"200":{"description":"Entity counts scopped to the current identitie\'s access","schema":{"$ref":"#/definitions/listSummaryCountsEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Terminator"],"summary":"List terminators","operationId":"listTerminators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of terminators","schema":{"$ref":"#/definitions/listTerminatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a terminator resource. Requires admin access.","tags":["Terminator"],"summary":"Create a terminator resource","operationId":"createTerminator","parameters":[{"description":"A terminator to create","name":"terminator","in":"body","required":true,"schema":{"$ref":"#/definitions/terminatorCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/terminators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Retrieves a single terminator","operationId":"detailTerminator","responses":{"200":{"description":"A single terminator","schema":{"$ref":"#/definitions/detailTerminatorEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]}],"description":"Update all fields on a terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Update all fields on a terminator","operationId":"updateTerminator","parameters":[{"description":"A terminator update object","name":"terminator","in":"body","required":true,"schema":{"$ref":"#/definitions/terminatorUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Delete a terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Delete a terminator","operationId":"deleteTerminator","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]}],"description":"Update the supplied fields on a terminator. Requires admin access.","tags":["Terminator"],"summary":"Update the supplied fields on a terminator","operationId":"patchTerminator","parameters":[{"description":"A terminator patch object","name":"terminator","in":"body","required":true,"schema":{"$ref":"#/definitions/terminatorPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/transit-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Router"],"summary":"List routers","operationId":"listTransitRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of specifications","schema":{"$ref":"#/definitions/listRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a router resource. Requires admin access.","tags":["Router"],"summary":"Create a router resource","operationId":"createTransitRouter","parameters":[{"description":"A router to create","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/transit-routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single router by id. Requires admin access.","tags":["Router"],"summary":"Retrieves a single router","operationId":"detailTransitRouter","responses":{"200":{"description":"A single router","schema":{"$ref":"#/definitions/detailRouterEnvelope"}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a router by id. Requires admin access.","tags":["Router"],"summary":"Update all fields on a router","operationId":"updateTransitRouter","parameters":[{"description":"A router update object","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a router by id. Requires admin access.","tags":["Router"],"summary":"Delete a router","operationId":"deleteTransitRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a router. Requires admin access.","tags":["Router"],"summary":"Update the supplied fields on a router","operationId":"patchTransitRouter","parameters":[{"description":"A router patch object","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The currently supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/version":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listVersion","responses":{"200":{"description":"Version information for the controller","schema":{"$ref":"#/definitions/listVersionEnvelope"}}}}}},"definitions":{"apiError":{"type":"object","properties":{"args":{"$ref":"#/definitions/apiErrorArgs"},"cause":{"$ref":"#/definitions/apiErrorCause"},"causeMessage":{"type":"string"},"code":{"type":"string"},"data":{"type":"object","additionalProperties":true},"message":{"type":"string"},"requestId":{"type":"string"}}},"apiErrorArgs":{"type":"object","properties":{"urlVars":{"type":"object","additionalProperties":{"type":"string"}}}},"apiErrorCause":{"allOf":[{"$ref":"#/definitions/apiFieldError"},{"$ref":"#/definitions/apiError"}]},"apiErrorEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/definitions/apiError"},"meta":{"$ref":"#/definitions/meta"}}},"apiFieldError":{"type":"object","properties":{"field":{"type":"string"},"reason":{"type":"string"},"value":{"description":"can be any value - string, number, boolean, array or object"}}},"apiSessionDetail":{"description":"An API Session object","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["token","identity","identityId","configTypes","ipAddress","authQueries","cachedUpdatedAt","isMfaRequired","isMfaComplete","authenticatorId"],"properties":{"authQueries":{"$ref":"#/definitions/authQueryList"},"authenticatorId":{"type":"string"},"cachedLastActivityAt":{"type":"string","format":"date-time"},"configTypes":{"type":"array","items":{"type":"string"}},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"ipAddress":{"type":"string"},"isMfaComplete":{"type":"boolean"},"isMfaRequired":{"type":"boolean"},"lastActivityAt":{"type":"string","format":"date-time"},"token":{"type":"string"}}}]},"apiSessionList":{"type":"array","items":{"$ref":"#/definitions/apiSessionDetail"}},"apiSessionPostureData":{"type":"object","required":["mfa"],"properties":{"endpointState":{"$ref":"#/definitions/postureDataEndpointState"},"mfa":{"$ref":"#/definitions/postureDataMfa"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"}}},"apiVersion":{"type":"object","required":["path"],"properties":{"apiBaseUrls":{"type":"array","items":{"type":"string"}},"path":{"type":"string"},"version":{"type":"string"}}},"attributes":{"description":"A set of strings used to loosly couple this resource to policies","type":"array","items":{"type":"string"},"x-nullable":true,"x-omitempty":true},"authPolicyCreate":{"description":"A Auth Policy resource","type":"object","required":["name","primary","secondary"],"properties":{"name":{"type":"string"},"primary":{"$ref":"#/definitions/authPolicyPrimary"},"secondary":{"$ref":"#/definitions/authPolicySecondary"},"tags":{"$ref":"#/definitions/tags"}}},"authPolicyDetail":{"description":"A Auth Policy resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","primary","secondary"],"properties":{"name":{"type":"string"},"primary":{"$ref":"#/definitions/authPolicyPrimary"},"secondary":{"$ref":"#/definitions/authPolicySecondary"}}}]},"authPolicyList":{"description":"An array of Auth Policies resources","type":"array","items":{"$ref":"#/definitions/authPolicyDetail"}},"authPolicyPatch":{"description":"A Auth Policy resource","type":"object","properties":{"name":{"type":"string","x-nullable":true},"primary":{"$ref":"#/definitions/authPolicyPrimaryPatch"},"secondary":{"$ref":"#/definitions/authPolicySecondaryPatch"},"tags":{"$ref":"#/definitions/tags"}}},"authPolicyPrimary":{"type":"object","required":["updb","cert","extJwt"],"properties":{"cert":{"$ref":"#/definitions/authPolicyPrimaryCert"},"extJwt":{"$ref":"#/definitions/authPolicyPrimaryExtJwt"},"updb":{"$ref":"#/definitions/authPolicyPrimaryUpdb"}}},"authPolicyPrimaryCert":{"type":"object","required":["allowed","allowExpiredCerts"],"properties":{"allowExpiredCerts":{"type":"boolean"},"allowed":{"type":"boolean"}}},"authPolicyPrimaryCertPatch":{"type":"object","properties":{"allowExpiredCerts":{"type":"boolean","x-nullable":true},"allowed":{"type":"boolean","x-nullable":true}},"x-nullable":true},"authPolicyPrimaryExtJwt":{"type":"object","required":["allowed","allowedSigners"],"properties":{"allowed":{"type":"boolean"},"allowedSigners":{"type":"array","items":{"type":"string"}}}},"authPolicyPrimaryExtJwtPatch":{"type":"object","properties":{"allowed":{"type":"boolean","x-nullable":true},"allowedSigners":{"type":"array","items":{"type":"string"},"x-nullable":true}},"x-nullable":true},"authPolicyPrimaryPatch":{"type":"object","properties":{"cert":{"$ref":"#/definitions/authPolicyPrimaryCertPatch"},"extJwt":{"$ref":"#/definitions/authPolicyPrimaryExtJwtPatch"},"updb":{"$ref":"#/definitions/authPolicyPrimaryUpdbPatch"}}},"authPolicyPrimaryUpdb":{"type":"object","required":["allowed","minPasswordLength","requireSpecialChar","requireNumberChar","requireMixedCase","maxAttempts","lockoutDurationMinutes"],"properties":{"allowed":{"type":"boolean"},"lockoutDurationMinutes":{"type":"integer"},"maxAttempts":{"type":"integer"},"minPasswordLength":{"type":"integer"},"requireMixedCase":{"type":"boolean"},"requireNumberChar":{"type":"boolean"},"requireSpecialChar":{"type":"boolean"}}},"authPolicyPrimaryUpdbPatch":{"type":"object","properties":{"allowed":{"type":"boolean","x-nullable":true},"lockoutDurationMinutes":{"type":"integer","x-nullable":true},"maxAttempts":{"type":"integer","x-nullable":true},"minPasswordLength":{"type":"integer","x-nullable":true},"requireMixedCase":{"type":"boolean","x-nullable":true},"requireNumberChar":{"type":"boolean","x-nullable":true},"requireSpecialChar":{"type":"boolean","x-nullable":true}},"x-nullable":true},"authPolicySecondary":{"type":"object","required":["requireTotp"],"properties":{"requireExtJwtSigner":{"type":"string","x-nullable":true,"x-omit-empty":false},"requireTotp":{"type":"boolean"}}},"authPolicySecondaryPatch":{"type":"object","properties":{"requireExtJwtSigner":{"type":"string","x-nullable":true},"requireTotp":{"type":"boolean","x-nullable":true}},"x-nullable":true},"authPolicyUpdate":{"$ref":"#/definitions/authPolicyCreate"},"authQueryDetail":{"type":"object","required":["provider"],"properties":{"format":{"$ref":"#/definitions/mfaFormats"},"httpMethod":{"type":"string"},"httpUrl":{"type":"string"},"maxLength":{"type":"integer"},"minLength":{"type":"integer"},"provider":{"$ref":"#/definitions/mfaProviders"},"typeId":{"type":"string"}}},"authQueryList":{"type":"array","items":{"$ref":"#/definitions/authQueryDetail"}},"authenticate":{"description":"A generic authenticate object meant for use with the /authenticate path. Required fields depend on authentication method.","type":"object","properties":{"configTypes":{"$ref":"#/definitions/configTypes"},"envInfo":{"$ref":"#/definitions/envInfo"},"password":{"$ref":"#/definitions/password"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"},"username":{"$ref":"#/definitions/username"}}},"authenticatorCreate":{"description":"Creates an authenticator for a specific identity which can be used for API authentication","type":"object","required":["method","identityId"],"properties":{"certPem":{"description":"The client certificate the identity will login with. Used only for method=\'cert\'","type":"string"},"identityId":{"description":"The id of an existing identity that will be assigned this authenticator","type":"string"},"method":{"description":"The type of authenticator to create; which will dictate which properties on this object are required.","type":"string"},"password":{"description":"The password the identity will login with. Used only for method=\'updb\'","type":"string"},"tags":{"$ref":"#/definitions/tags"},"username":{"description":"The username that the identity will login with. Used only for method=\'updb\'","type":"string"}}},"authenticatorDetail":{"description":"A singular authenticator resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["method","identityId","identity"],"properties":{"certPem":{"type":"string"},"fingerprint":{"type":"string"},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"method":{"type":"string"},"username":{"type":"string"}}}]},"authenticatorList":{"description":"An array of authenticator resources","type":"array","items":{"$ref":"#/definitions/authenticatorDetail"}},"authenticatorPatch":{"description":"All of the fields on an authenticator that may be updated","type":"object","properties":{"password":{"$ref":"#/definitions/passwordNullable"},"tags":{"$ref":"#/definitions/tags"},"username":{"$ref":"#/definitions/usernameNullable"}}},"authenticatorPatchWithCurrent":{"description":"All of the fields on an authenticator that may be updated","type":"object","allOf":[{"$ref":"#/definitions/authenticatorPatch"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/definitions/password"}}}]},"authenticatorUpdate":{"description":"All of the fields on an authenticator that will be updated","type":"object","required":["username","password"],"properties":{"password":{"$ref":"#/definitions/password"},"tags":{"$ref":"#/definitions/tags"},"username":{"$ref":"#/definitions/username"}}},"authenticatorUpdateWithCurrent":{"description":"All of the fields on an authenticator that will be updated","type":"object","allOf":[{"$ref":"#/definitions/authenticatorUpdate"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/definitions/password"}}}]},"baseEntity":{"description":"Fields shared by all Edge API entities","type":"object","required":["id","createdAt","updatedAt","_links"],"properties":{"_links":{"$ref":"#/definitions/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"tags":{"$ref":"#/definitions/tags"},"updatedAt":{"type":"string","format":"date-time"}}},"caCreate":{"description":"A create Certificate Authority (CA) object","type":"object","required":["name","certPem","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles"],"properties":{"certPem":{"type":"string","example":"-----BEGIN CERTIFICATE-----\\nMIICUjCCAdmgAwIBAgIJANooo7NB+dZZMAoGCCqGSM49BAMCMF4xCzAJBgNVBAYT\\nAlVTMQswCQYDVQQIDAJOQzETMBEGA1UECgwKTmV0Rm91bmRyeTEtMCsGA1UEAwwk\\nTmV0Rm91bmRyeSBaaXRpIEV4dGVybmFsIEFQSSBSb290IENBMB4XDTE4MTExNTEy\\nNTcwOVoXDTM4MTExMDEyNTcwOVowXjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk5D\\nMRMwEQYDVQQKDApOZXRGb3VuZHJ5MS0wKwYDVQQDDCROZXRGb3VuZHJ5IFppdGkg\\nRXh0ZXJuYWwgQVBJIFJvb3QgQ0EwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARwq61Z\\nIaqbaw0PDt3frJZaHjkxfZhwYrykI1GlbRNd/jix03lVG9qvpN5Og9fQfFFcFmD/\\n3vCE9S6O0npm0mADQxcBcxbMRAH5dtBuCuiJW6qAAbPgiM32vqSxBiFt0KejYzBh\\nMB0GA1UdDgQWBBRx1OVGuc/jdltDc8YBtkw8Tbr4fjAfBgNVHSMEGDAWgBRx1OVG\\nuc/jdltDc8YBtkw8Tbr4fjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB\\nhjAKBggqhkjOPQQDAgNnADBkAjBDRxNZUaIVpkQKnAgJukl3ysd3/i7Z6hDyIEms\\nkllz/+ZvmdBp9iedV5o5BvJUggACMCv+UBFlJH7pmsOCo/F45Kk178YsCC7gaMxE\\n1ZG1zveyMvsYsH04C9FndE6w2MLvlA==\\n-----END CERTIFICATE-----\\n"},"externalIdClaim":{"$ref":"#/definitions/externalIdClaim"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/definitions/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"name":{"type":"string","example":"Test 3rd Party External CA"},"tags":{"$ref":"#/definitions/tags"}}},"caDetail":{"description":"A Certificate Authority (CA) resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","fingerprint","certPem","isVerified","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles","identityNameFormat"],"properties":{"certPem":{"type":"string"},"externalIdClaim":{"$ref":"#/definitions/externalIdClaim"},"fingerprint":{"type":"string"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/definitions/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"isVerified":{"type":"boolean","example":false},"name":{"type":"string"},"verificationToken":{"type":"string","format":"uuid"}}}]},"caList":{"description":"An array of Certificate Authority (CA) resources","type":"array","items":{"$ref":"#/definitions/caDetail"}},"caPatch":{"type":"object","properties":{"externalIdClaim":{"$ref":"#/definitions/externalIdClaimPatch"},"identityNameFormat":{"type":"string","x-nullable":true},"identityRoles":{"$ref":"#/definitions/roles"},"isAuthEnabled":{"type":"boolean","x-nullable":true,"example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","x-nullable":true,"example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","x-nullable":true,"example":true},"name":{"type":"string","x-nullable":true,"example":"My CA"},"tags":{"$ref":"#/definitions/tags"}}},"caUpdate":{"type":"object","required":["name","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles","identityNameFormat"],"properties":{"externalIdClaim":{"$ref":"#/definitions/externalIdClaim"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/definitions/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"name":{"type":"string","example":"My CA"},"tags":{"$ref":"#/definitions/tags"}}},"capabilities":{"type":"string","enum":["OIDC_AUTH","HA_CONTROLLER"]},"commonEdgeRouterProperties":{"type":"object","required":["hostname","name","supportedProtocols","syncStatus","isOnline","cost","noTraversal","disabled"],"properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean"},"hostname":{"type":"string"},"isOnline":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"supportedProtocols":{"type":"object","additionalProperties":{"type":"string"}},"syncStatus":{"type":"string"}}},"configCreate":{"description":"A config create object","type":"object","required":["name","configTypeId","data"],"properties":{"configTypeId":{"description":"The id of a config-type that the data section will match","type":"string"},"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true,"x-nullable":false},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/definitions/tags"}},"example":{"configTypeId":"cea49285-6c07-42cf-9f52-09a9b115c783","data":{"hostname":"example.com","port":80},"name":"test-config"}},"configDetail":{"description":"A config resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","configTypeId","configType","data"],"properties":{"configType":{"$ref":"#/definitions/entityRef"},"configTypeId":{"type":"string"},"data":{"description":"The data section of a config is based on the schema of its type","type":"object"},"name":{"type":"string"}}}]},"configList":{"description":"An array of config resources","type":"array","items":{"$ref":"#/definitions/configDetail"}},"configPatch":{"description":"A config patch object","type":"object","properties":{"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/definitions/tags"}},"example":{"data":{"hostname":"example.com","port":80},"name":"example-config-name"}},"configTypeCreate":{"description":"A config-type create object","type":"object","required":["name"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/definitions/tags"}}},"configTypeDetail":{"description":"A config-type resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","schema"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true}}}]},"configTypeList":{"description":"An array of config-type resources","type":"array","items":{"$ref":"#/definitions/configTypeDetail"}},"configTypePatch":{"description":"A config-type patch object","type":"object","properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/definitions/tags"}}},"configTypeUpdate":{"description":"A config-type update object","type":"object","required":["name"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/definitions/tags"}}},"configTypes":{"description":"Specific configuration types that should be returned","type":"array","items":{"type":"string"}},"configUpdate":{"description":"A config update object","type":"object","required":["name","data"],"properties":{"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true,"x-nullable":false},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/definitions/tags"}},"example":{"data":{"hostname":"example.com","port":80},"name":"example-config-name"}},"createEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/createLocation"},"meta":{"$ref":"#/definitions/meta"}}},"createLocation":{"type":"object","properties":{"_links":{"$ref":"#/definitions/links"},"id":{"type":"string"}}},"currentApiSessionDetail":{"description":"An API Session object for the current API session","type":"object","allOf":[{"$ref":"#/definitions/apiSessionDetail"},{"type":"object","required":["expiresAt","expirationSeconds"],"properties":{"expirationSeconds":{"type":"integer"},"expiresAt":{"type":"string","format":"date-time"}}}]},"currentApiSessionDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"currentIdentityDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityDetail"},"meta":{"$ref":"#/definitions/meta"}}},"dataIntegrityCheckDetail":{"type":"object","required":["description","fixed"],"properties":{"description":{"type":"string"},"fixed":{"type":"boolean"}}},"dataIntegrityCheckDetailList":{"type":"array","items":{"$ref":"#/definitions/dataIntegrityCheckDetail"}},"dataIntegrityCheckDetails":{"type":"object","required":["inProgress","fixingErrors","tooManyErrors","startTime","endTime","error","results"],"properties":{"endTime":{"type":"string","format":"date-time"},"error":{"type":"string"},"fixingErrors":{"type":"boolean"},"inProgress":{"type":"boolean"},"results":{"$ref":"#/definitions/dataIntegrityCheckDetailList"},"startTime":{"type":"string","format":"date-time"},"tooManyErrors":{"type":"boolean"}}},"dataIntegrityCheckResultEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/dataIntegrityCheckDetails"},"meta":{"$ref":"#/definitions/meta"}}},"detailApiSessionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/apiSessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailAuthPolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/authPolicyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailAuthenticatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/authenticatorDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailCaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/caDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailConfigEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/configDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailConfigTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/configTypeDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailEdgeRouterPolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/edgeRouterPolicyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailEnrollmentEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/enrollmentDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailExternalJwtSignerEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/externalJwtSignerDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailIdentityEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailIdentityTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityTypeDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailMfa":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"required":["isVerified"],"properties":{"isVerified":{"type":"boolean"},"provisioningUrl":{"description":"Not provided if MFA verification has been completed","type":"string"},"recoveryCodes":{"description":"Not provided if MFA verification has been completed","type":"array","items":{"type":"string"}}}}]},"detailMfaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/detailMfa"},"meta":{"$ref":"#/definitions/meta"}}},"detailMfaRecoveryCodes":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"required":["recoveryCodes"],"properties":{"recoveryCodes":{"type":"array","items":{"type":"string"}}}}]},"detailMfaRecoveryCodesEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/definitions/detailMfaRecoveryCodes"},"meta":{"$ref":"#/definitions/meta"}}},"detailPostureCheckEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureCheckDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailPostureCheckTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureCheckTypeDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailRouterEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/routerDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailServiceEdgePolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceEdgeRouterPolicyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailServiceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailServicePolicyEnvelop":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/servicePolicyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSessionManagementEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionManagementDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSessionRoutePathEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionRoutePathDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSpecBodyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specBodyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSpecEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailTerminatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/terminatorDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailedEdgeRouterEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/edgeRouterDetail"},"meta":{"$ref":"#/definitions/meta"}}},"dialBind":{"type":"string","enum":["Dial","Bind"]},"dialBindArray":{"type":"array","items":{"$ref":"#/definitions/dialBind"}},"disableParams":{"type":"object","required":["durationMinutes"],"properties":{"durationMinutes":{"type":"integer"}}},"edgeRouterCreate":{"description":"An edge router create object","type":"object","required":["name"],"properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterDetail":{"description":"A detail edge router resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"$ref":"#/definitions/commonEdgeRouterProperties"},{"type":"object","required":["isVerified","roleAttributes","os","version","arch","buildDate","revision","isTunnelerEnabled"],"properties":{"certPem":{"type":"string","x-nullable":true,"x-omitempty":false},"enrollmentCreatedAt":{"type":"string","format":"date-time","x-nullable":true},"enrollmentExpiresAt":{"type":"string","format":"date-time","x-nullable":true},"enrollmentJwt":{"type":"string","x-nullable":true},"enrollmentToken":{"type":"string","x-nullable":true},"fingerprint":{"type":"string"},"isTunnelerEnabled":{"type":"boolean"},"isVerified":{"type":"boolean"},"roleAttributes":{"$ref":"#/definitions/attributes"},"unverifiedCertPem":{"type":"string","x-nullable":true,"x-omitempty":false},"unverifiedFingerprint":{"type":"string","x-nullable":true,"x-omitempty":false},"versionInfo":{"$ref":"#/definitions/versionInfo"}}}],"example":{"_links":{"edge-router-policies":{"href":"./edge-routers/b0766b8d-bd1a-4d28-8415-639b29d3c83d/edge-routers"},"self":{"href":"./edge-routers/b0766b8d-bd1a-4d28-8415-639b29d3c83d"}},"cost":0,"createdAt":"2020-03-16T17:13:31.5807454Z","enrollmentCreatedAt":"2020-03-16T17:13:31.5777637Z","enrollmentExpiresAt":"2020-03-16T17:18:31.5777637Z","enrollmentJwt":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImVyb3R0IiwiZXhwIjoxNTg0Mzc5MTExLCJpc3MiOiJodHRwczovL 2xvY2FsaG9zdDoxMjgwIiwianRpIjoiMzBhMWYwZWEtZDM5Yi00YWFlLWI4NTItMzA0Y2YxYzMwZDFmIiwic3ViIjoiYjA3NjZiOGQtYmQxYS00ZDI 4LTg0MTUtNjM5YjI5ZDNjODNkIn0.UsyQhCPORQ5tQnYWY7S88LNvV9iFS5Hy-P4aJaClZzEICobKgnQoyQblJcdMvk3cGKwyFqAnQtt0tDZkb8tHz Vqyv6bilHcAFuMRrdwXRqdXquabSN5geu2qBUnyzL7Mf2X85if8sbMida6snB4oLZsVRF3CRn4ODBJdeiVJ_Z4rgD-zW2IwtXPApT7ALyiiw2cN4EH 8pqQ7tpZKqztE0PGEbBQFPGKUFnm7oXyvSUo17EsFJUv5gUlBzfKKGolh5io4ptp22HZrqsqSnqDSOnYEZHonr5Yljuwiktrlh-JKiK6GGns5OAJMP dO9lgM4yHSpF2ILbqhWMV93Y3zMOg","enrollmentToken":"30a1f0ea-d39b-4aae-b852-304cf1c30d1f","fingerprint":null,"hostname":"","id":"b0766b8d-bd1a-4d28-8415-639b29d3c83d","isOnline":false,"isTunnelerEnabled":false,"isVerified":false,"name":"TestRouter-e33c837f-3222-4b40-bcd6-b3458fd5156e","noTraversal":false,"roleAttributes":["eastCoast","sales","test"],"supportedProtocols":{},"tags":{},"updatedAt":"2020-03-16T17:13:31.5807454Z"}},"edgeRouterList":{"description":"A list of edge router resources","type":"array","items":{"$ref":"#/definitions/edgeRouterDetail"}},"edgeRouterPatch":{"description":"An edge router patch object","type":"object","properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string","x-nullable":true},"noTraversal":{"type":"boolean","x-nullable":true},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterPolicyCreate":{"required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterPolicyDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","semantic","edgeRouterRoles","edgeRouterRolesDisplay","identityRoles","identityRolesDisplay","isSystem"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"edgeRouterRolesDisplay":{"$ref":"#/definitions/namedRoles"},"identityRoles":{"$ref":"#/definitions/roles"},"identityRolesDisplay":{"$ref":"#/definitions/namedRoles"},"isSystem":{"type":"boolean"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"}}}]},"edgeRouterPolicyList":{"type":"array","items":{"$ref":"#/definitions/edgeRouterPolicyDetail"}},"edgeRouterPolicyPatch":{"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterPolicyUpdate":{"required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterUpdate":{"description":"An edge router update object","type":"object","required":["name"],"properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"}}},"empty":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"object","example":{}},"meta":{"$ref":"#/definitions/meta"}}},"enrollmentCreate":{"type":"object","required":["method","expiresAt","identityId"],"properties":{"caId":{"type":"string","x-nullable":true},"expiresAt":{"type":"string","format":"date-time"},"identityId":{"type":"string"},"method":{"type":"string","enum":["ott","ottca","updb"]},"username":{"type":"string","x-nullable":true}}},"enrollmentDetail":{"description":"An enrollment object. Enrollments are tied to identities and potentially a CA. Depending on the\\nmethod, different fields are utilized. For example ottca enrollments use the `ca` field and updb enrollments\\nuse the username field, but not vice versa.\\n","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["token","method","expiresAt","details"],"properties":{"caId":{"type":"string","x-nullable":true},"edgeRouter":{"$ref":"#/definitions/entityRef"},"edgeRouterId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"jwt":{"type":"string"},"method":{"type":"string"},"token":{"type":"string"},"transitRouter":{"$ref":"#/definitions/entityRef"},"transitRouterId":{"type":"string"},"username":{"type":"string"}}}],"example":{"_links":{"self":{"href":"./enrollments/624fa53f-7629-4a7a-9e38-c1f4ce322c1d"}},"ca":null,"createdAt":"0001-01-01T00:00:00Z","expiresAt":"2020-03-11T20:20:24.0055543Z","id":"624fa53f-7629-4a7a-9e38-c1f4ce322c1d","identity":{"_links":{"self":{"href":"./identities/f047ac96-dc3a-408a-a6f2-0ba487c08ef9"}},"id":"f047ac96-dc3a-408a-a6f2-0ba487c08ef9","name":"updb--0f245140-7f2e-4326-badf-6aba55e52475","urlName":"identities"},"method":"updb","tags":null,"token":"1e727c8f-07e4-4a1d-a8b0-da0c7a01c6e1","updatedAt":"0001-01-01T00:00:00Z","username":"example-username"}},"enrollmentList":{"description":"An array of enrollment resources","type":"array","items":{"$ref":"#/definitions/enrollmentDetail"}},"enrollmentRefresh":{"type":"object","required":["expiresAt"],"properties":{"expiresAt":{"type":"string","format":"date-time"}}},"entityRef":{"description":"A reference to another resource and links to interact with it","type":"object","properties":{"_links":{"$ref":"#/definitions/links"},"entity":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"}}},"envInfo":{"description":"Environment information an authenticating client may provide","type":"object","properties":{"arch":{"type":"string"},"os":{"type":"string"},"osRelease":{"type":"string"},"osVersion":{"type":"string"}}},"externalIdClaim":{"type":"object","required":["location","matcher","matcherCriteria","parser","parserCriteria","index"],"properties":{"index":{"type":"integer","x-nullable":true},"location":{"type":"string","enum":["COMMON_NAME","SAN_URI","SAN_EMAIL"],"x-nullable":true},"matcher":{"type":"string","enum":["ALL","PREFIX","SUFFIX","SCHEME"],"x-nullable":true},"matcherCriteria":{"type":"string","x-nullable":true},"parser":{"type":"string","enum":["NONE","SPLIT"],"x-nullable":true},"parserCriteria":{"type":"string","x-nullable":true}}},"externalIdClaimPatch":{"type":"object","properties":{"index":{"type":"integer","x-nullable":true},"location":{"type":"string","enum":["COMMON_NAME","SAN_URI","SAN_EMAIL"],"x-nullable":true},"matcher":{"type":"string","enum":["ALL","PREFIX","SUFFIX","SCHEME"],"x-nullable":true},"matcherCriteria":{"type":"string","x-nullable":true},"parser":{"type":"string","enum":["NONE","SPLIT"],"x-nullable":true},"parserCriteria":{"type":"string","x-nullable":true}}},"externalJwtSignerCreate":{"description":"A create Certificate Authority (CA) object","type":"object","required":["name","enabled","issuer","audience"],"properties":{"audience":{"type":"string","x-nullable":true},"certPem":{"type":"string","x-nullable":true},"claimsProperty":{"type":"string","x-nullable":true},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url","x-nullable":true},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","x-nullable":true},"kid":{"type":"string","x-nullable":true},"name":{"type":"string","example":"MyApps Signer"},"tags":{"$ref":"#/definitions/tags"},"useExternalId":{"type":"boolean","x-nullable":true}}},"externalJwtSignerDetail":{"description":"A External JWT Signer resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","certPem","jwksEndpoint","enabled","fingerprint","commonName","notAfter","notBefore","externalAuthUrl","claimsProperty","useExternalId","kid","issuer","audience"],"properties":{"audience":{"type":"string"},"certPem":{"type":"string","x-nullable":true},"claimsProperty":{"type":"string"},"commonName":{"type":"string"},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url"},"fingerprint":{"type":"string"},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","x-nullable":true},"kid":{"type":"string"},"name":{"type":"string","example":"MyApps Signer"},"notAfter":{"type":"string","format":"date-time"},"notBefore":{"type":"string","format":"date-time"},"useExternalId":{"type":"boolean"}}}]},"externalJwtSignerList":{"description":"An array of External JWT Signers resources","type":"array","items":{"$ref":"#/definitions/externalJwtSignerDetail"}},"externalJwtSignerPatch":{"type":"object","properties":{"audience":{"type":"string","x-nullable":true},"certPem":{"type":"string","x-nullable":true},"claimsProperty":{"type":"string","x-nullable":true},"enabled":{"type":"boolean","x-nullable":true},"externalAuthUrl":{"type":"string","format":"url","x-nullable":true},"issuer":{"type":"string","x-nullable":true},"jwksEndpoint":{"type":"string","format":"uri","x-nullable":true},"kid":{"type":"string","x-nullable":true},"name":{"type":"string","x-nullable":true,"example":"MyApps Signer"},"tags":{"$ref":"#/definitions/tags"},"useExternalId":{"type":"boolean","x-nullable":true}}},"externalJwtSignerUpdate":{"type":"object","required":["name","enabled","issuer","audience"],"properties":{"audience":{"type":"string","x-nullable":true},"certPem":{"type":"string","x-nullable":true},"claimsProperty":{"type":"string","x-nullable":true},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url","x-nullable":true},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","x-nullable":true},"kid":{"type":"string","x-nullable":true},"name":{"type":"string","example":"MyApps Signer"},"tags":{"$ref":"#/definitions/tags"},"useExternalId":{"type":"boolean","x-nullable":true}}},"failedServiceRequest":{"type":"object","properties":{"apiSessionId":{"type":"string"},"policyFailures":{"type":"array","items":{"$ref":"#/definitions/policyFailure"}},"serviceId":{"type":"string"},"serviceName":{"type":"string"},"sessionType":{"$ref":"#/definitions/dialBind"},"when":{"type":"string","format":"date-time"}}},"failedServiceRequestEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/failedServiceRequestList"},"meta":{"$ref":"#/definitions/meta"}}},"failedServiceRequestList":{"type":"array","items":{"$ref":"#/definitions/failedServiceRequest"}},"getIdentityPolicyAdviceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/policyAdvice"},"meta":{"$ref":"#/definitions/meta"}}},"identityAuthenticators":{"type":"object","properties":{"cert":{"type":"object","properties":{"fingerprint":{"type":"string"},"id":{"type":"string"}}},"updb":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"}}}}},"identityCreate":{"description":"An identity to create","type":"object","required":["name","type","isAdmin"],"properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicyId":{"type":"string","x-nullable":true},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"enrollment":{"type":"object","properties":{"ott":{"type":"boolean"},"ottca":{"type":"string"},"updb":{"type":"string"}}},"externalId":{"type":"string","x-nullable":true},"isAdmin":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/identityType"}}},"identityDetail":{"description":"Detail of a specific identity","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","type","typeId","isDefaultAdmin","isAdmin","authenticators","enrollment","envInfo","sdkInfo","roleAttributes","hasEdgeRouterConnection","hasApiSession","isMfaEnabled","serviceHostingPrecedences","serviceHostingCosts","defaultHostingCost","authPolicyId","authPolicy","externalId","disabled"],"properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicy":{"$ref":"#/definitions/entityRef"},"authPolicyId":{"type":"string"},"authenticators":{"$ref":"#/definitions/identityAuthenticators"},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"disabled":{"type":"boolean"},"disabledAt":{"type":"string","format":"date-time","x-nullable":true},"disabledUntil":{"type":"string","format":"date-time","x-nullable":true},"enrollment":{"$ref":"#/definitions/identityEnrollments"},"envInfo":{"$ref":"#/definitions/envInfo"},"externalId":{"type":"string","x-nullable":true},"hasApiSession":{"type":"boolean"},"hasEdgeRouterConnection":{"type":"boolean"},"isAdmin":{"type":"boolean"},"isDefaultAdmin":{"type":"boolean"},"isMfaEnabled":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"type":{"$ref":"#/definitions/entityRef"},"typeId":{"type":"string"}}}]},"identityEnrollments":{"type":"object","properties":{"ott":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"ottca":{"type":"object","properties":{"ca":{"$ref":"#/definitions/entityRef"},"caId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"updb":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}}}},"identityExtendCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates","type":"string"},"clientCert":{"description":"A PEM encoded client certificate","type":"string"}}},"identityExtendEnrollmentEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/identityExtendCerts"},"meta":{"$ref":"#/definitions/meta"}}},"identityExtendEnrollmentRequest":{"type":"object","required":["clientCertCsr"],"properties":{"clientCertCsr":{"type":"string"}}},"identityExtendValidateEnrollmentRequest":{"type":"object","required":["clientCert"],"properties":{"clientCert":{"description":"A PEM encoded client certificate previously returned after an extension request","type":"string"}}},"identityList":{"description":"A list of identities","type":"array","items":{"$ref":"#/definitions/identityDetail"}},"identityPatch":{"type":"object","properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicyId":{"type":"string","x-nullable":true},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"externalId":{"type":"string","x-nullable":true},"isAdmin":{"type":"boolean","x-nullable":true},"name":{"type":"string","x-nullable":true},"roleAttributes":{"$ref":"#/definitions/attributes"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/identityType"}}},"identityType":{"type":"string","enum":["User","Device","Service","Router","Default"]},"identityTypeDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","properties":{"name":{"type":"string"}}}]},"identityTypeList":{"type":"array","items":{"$ref":"#/definitions/identityTypeDetail"}},"identityUpdate":{"type":"object","required":["type","name","isAdmin"],"properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicyId":{"type":"string","x-nullable":true},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"externalId":{"type":"string","x-nullable":true},"isAdmin":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/identityType"}}},"link":{"description":"A link to another resource","type":"object","required":["href"],"properties":{"comment":{"type":"string"},"href":{"type":"string","format":"uri"},"method":{"type":"string"}}},"links":{"description":"A map of named links","type":"object","additionalProperties":{"$ref":"#/definitions/link"},"x-omitempty":false},"listApiSessionsEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/apiSessionList"},"meta":{"$ref":"#/definitions/meta"}}},"listAuthPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/authPolicyList"},"meta":{"$ref":"#/definitions/meta"}}},"listAuthenticatorsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/authenticatorList"},"meta":{"$ref":"#/definitions/meta"}}},"listCasEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/caList"},"meta":{"$ref":"#/definitions/meta"}}},"listConfigTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/configTypeList"},"meta":{"$ref":"#/definitions/meta"}}},"listConfigsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/configList"},"meta":{"$ref":"#/definitions/meta"}}},"listEdgeRouterPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/edgeRouterPolicyList"},"meta":{"$ref":"#/definitions/meta"}}},"listEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/edgeRouterList"},"meta":{"$ref":"#/definitions/meta"}}},"listEnrollmentsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/enrollmentList"},"meta":{"$ref":"#/definitions/meta"}}},"listEnumeratedCapabilitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/definitions/capabilities"}},"meta":{"$ref":"#/definitions/meta"}}},"listExternalJwtSignersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/externalJwtSignerList"},"meta":{"$ref":"#/definitions/meta"}}},"listIdentitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityList"},"meta":{"$ref":"#/definitions/meta"}}},"listIdentityTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityTypeList"},"meta":{"$ref":"#/definitions/meta"}}},"listPostureCheckEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/definitions/postureCheckDetail"}},"meta":{"$ref":"#/definitions/meta"}}},"listPostureCheckTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureCheckTypeList"},"meta":{"$ref":"#/definitions/meta"}}},"listRoleAttributesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/roleAttributesList"},"meta":{"$ref":"#/definitions/meta"}}},"listRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/routerList"},"meta":{"$ref":"#/definitions/meta"}}},"listServiceConfigsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceConfigList"},"meta":{"$ref":"#/definitions/meta"}}},"listServiceEdgeRouterPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceEdgeRouterPolicyList"},"meta":{"$ref":"#/definitions/meta"}}},"listServicePoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/servicePolicyList"},"meta":{"$ref":"#/definitions/meta"}}},"listServicesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceList"},"meta":{"$ref":"#/definitions/meta"}}},"listSessionsManagementEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionManagementList"},"meta":{"$ref":"#/definitions/meta"}}},"listSpecsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specList"},"meta":{"$ref":"#/definitions/meta"}}},"listSummaryCounts":{"type":"object","additionalProperties":{"type":"integer"}},"listSummaryCountsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/listSummaryCounts"},"meta":{"$ref":"#/definitions/meta"}}},"listTerminatorsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/terminatorList"},"meta":{"$ref":"#/definitions/meta"}}},"listVersionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/version"},"meta":{"$ref":"#/definitions/meta"}}},"meta":{"type":"object","properties":{"apiEnrollmentVersion":{"type":"string"},"apiVersion":{"type":"string"},"filterableFields":{"type":"array","items":{"type":"string"},"x-omitempty":true},"pagination":{"$ref":"#/definitions/pagination"}}},"mfaCode":{"type":"object","required":["code"],"properties":{"code":{"type":"string"}}},"mfaFormats":{"type":"string","enum":["numeric","alpha","alphaNumeric"]},"mfaProviders":{"type":"string","enum":["ziti","url"]},"namedRole":{"type":"object","properties":{"name":{"type":"string"},"role":{"type":"string"}}},"namedRoles":{"type":"array","items":{"$ref":"#/definitions/namedRole"},"x-omitempty":false},"operatingSystem":{"type":"object","required":["type","versions"],"properties":{"type":{"$ref":"#/definitions/osType"},"versions":{"type":"array","items":{"type":"string"}}}},"osType":{"type":"string","enum":["Windows","WindowsServer","Android","iOS","Linux","macOS"]},"pagination":{"type":"object","required":["limit","offset","totalCount"],"properties":{"limit":{"type":"number","format":"int64"},"offset":{"type":"number","format":"int64"},"totalCount":{"type":"number","format":"int64"}}},"password":{"type":"string","maxLength":100,"minLength":5},"passwordNullable":{"type":"string","maxLength":100,"minLength":5,"x-nullable":true},"policyAdvice":{"type":"object","properties":{"commonRouters":{"type":"array","items":{"$ref":"#/definitions/routerEntityRef"}},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"identityRouterCount":{"type":"number","format":"int32"},"isBindAllowed":{"type":"boolean"},"isDialAllowed":{"type":"boolean"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"},"serviceRouterCount":{"type":"number","format":"int32"}}},"policyFailure":{"type":"object","properties":{"checks":{"type":"array","items":{"$ref":"#/definitions/postureCheckFailure"}},"policyId":{"type":"string"},"policyName":{"type":"string"}}},"postureCheckCreate":{"type":"object","required":["name","typeId"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"},"typeId":{"$ref":"#/definitions/postureCheckType"}},"discriminator":"typeId"},"postureCheckDetail":{"type":"object","required":["name","typeId","version","roleAttributes","id","createdAt","updatedAt","_links","tags"],"properties":{"_links":{"$ref":"#/definitions/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"},"typeId":{"type":"string"},"updatedAt":{"type":"string","format":"date-time"},"version":{"type":"integer"}},"discriminator":"typeId"},"postureCheckDomainCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckFailure":{"type":"object","required":["postureCheckId","postureCheckName","postureCheckType"],"properties":{"postureCheckId":{"type":"string"},"postureCheckName":{"type":"string"},"postureCheckType":{"type":"string"}},"discriminator":"postureCheckType"},"postureCheckFailureDomain":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"type":"string"},"expectedValue":{"type":"array","items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckFailureMacAddress":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"type":"array","items":{"type":"string"}},"expectedValue":{"type":"array","items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckFailureMfa":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue","criteria"],"properties":{"actualValue":{"$ref":"#/definitions/postureChecksFailureMfaValues"},"criteria":{"$ref":"#/definitions/postureChecksFailureMfaCriteria"},"expectedValue":{"$ref":"#/definitions/postureChecksFailureMfaValues"}}}],"x-class":"MFA"},"postureCheckFailureOperatingSystem":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"$ref":"#/definitions/postureCheckFailureOperatingSystemActual"},"expectedValue":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckFailureOperatingSystemActual":{"type":"object","required":["type","version"],"properties":{"type":{"type":"string"},"version":{"type":"string"}}},"postureCheckFailureProcess":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"$ref":"#/definitions/postureCheckFailureProcessActual"},"expectedValue":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckFailureProcessActual":{"type":"object","required":["isRunning","hash","signerFingerprints"],"properties":{"hash":{"type":"string"},"isRunning":{"type":"boolean"},"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}},"postureCheckFailureProcessMulti":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue","semantic"],"properties":{"actualValue":{"type":"array","items":{"$ref":"#/definitions/postureCheckFailureProcessActual"}},"expectedValue":{"type":"array","items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckMacAddressCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMfaCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"$ref":"#/definitions/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckMfaDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"$ref":"#/definitions/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckMfaPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"$ref":"#/definitions/postureCheckMfaPropertiesPatch"}],"x-class":"MFA"},"postureCheckMfaProperties":{"type":"object","properties":{"ignoreLegacyEndpoints":{"type":"boolean"},"promptOnUnlock":{"type":"boolean"},"promptOnWake":{"type":"boolean"},"timeoutSeconds":{"type":"integer"}}},"postureCheckMfaPropertiesPatch":{"type":"object","properties":{"ignoreLegacyEndpoints":{"type":"boolean","x-nullable":true},"promptOnUnlock":{"type":"boolean","x-nullable":true},"promptOnWake":{"type":"boolean","x-nullable":true},"timeoutSeconds":{"type":"integer","x-nullable":true}}},"postureCheckMfaUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"$ref":"#/definitions/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckOperatingSystemCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckPatch":{"type":"object","required":["typeId"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"},"typeId":{"$ref":"#/definitions/postureCheckType"}},"discriminator":"typeId"},"postureCheckProcessCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckProcessDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckProcessMultiCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"process":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckProcessUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckType":{"type":"string","enum":["OS","PROCESS","DOMAIN","MAC","MFA","PROCESS_MULTI"]},"postureCheckTypeDetail":{"allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","operatingSystems","version"],"properties":{"name":{"type":"string"},"operatingSystems":{"type":"array","items":{"$ref":"#/definitions/operatingSystem"}},"version":{"type":"string"}}}]},"postureCheckTypeList":{"type":"array","items":{"$ref":"#/definitions/postureCheckTypeDetail"}},"postureCheckUpdate":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"},"typeId":{"$ref":"#/definitions/postureCheckType"}},"discriminator":"typeId"},"postureChecksFailureMfaCriteria":{"type":"object","required":["passedMfaAt","wokenAt","unlockedAt","timeoutSeconds","timeoutRemainingSeconds"],"properties":{"passedMfaAt":{"type":"string","format":"date-time"},"timeoutRemainingSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"},"unlockedAt":{"type":"string","format":"date-time"},"wokenAt":{"type":"string","format":"date-time"}}},"postureChecksFailureMfaValues":{"type":"object","properties":{"passedMfa":{"type":"boolean","x-omitempty":false},"passedOnUnlock":{"type":"boolean","x-omitempty":false},"passedOnWake":{"type":"boolean","x-omitempty":false},"timedOut":{"type":"boolean","x-omitempty":false}}},"postureData":{"type":"object","required":["mac","domain","os","processes","apiSessionPostureData"],"properties":{"apiSessionPostureData":{"type":"object","additionalProperties":{"$ref":"#/definitions/apiSessionPostureData"}},"domain":{"$ref":"#/definitions/postureDataDomain"},"mac":{"$ref":"#/definitions/postureDataMac"},"os":{"$ref":"#/definitions/postureDataOs"},"processes":{"type":"array","items":{"$ref":"#/definitions/postureDataProcess"}}}},"postureDataBase":{"type":"object","required":["postureCheckId","timedOut","lastUpdatedAt"],"properties":{"lastUpdatedAt":{"type":"string","format":"date-time"},"postureCheckId":{"type":"string"},"timedOut":{"type":"boolean"}}},"postureDataDomain":{"type":"object","allOf":[{"$ref":"#/definitions/postureDataBase"},{"type":"object","required":["domain"],"properties":{"domain":{"type":"string"}}}]},"postureDataEndpointState":{"type":"object","required":["wokenAt","unlockedAt"],"properties":{"unlockedAt":{"type":"string","format":"date-time"},"wokenAt":{"type":"string","format":"date-time"}}},"postureDataEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureData"},"meta":{"$ref":"#/definitions/meta"}}},"postureDataMac":{"type":"object","allOf":[{"$ref":"#/definitions/postureDataBase"},{"type":"object","required":["addresses"],"properties":{"addresses":{"type":"array","items":{"type":"string"}}}}]},"postureDataMfa":{"type":"object","required":["apiSessionId","passedMfa","passedOnWake","passedOnUnlock","passedAt"],"properties":{"apiSessionId":{"type":"string"},"passedAt":{"type":"string","format":"date-time","x-omitempty":false},"passedMfa":{"type":"boolean","x-omitempty":false},"passedOnUnlock":{"type":"boolean","x-omitempty":false},"passedOnWake":{"type":"boolean","x-omitempty":false}}},"postureDataOs":{"type":"object","allOf":[{"$ref":"#/definitions/postureDataBase"},{"type":"object","required":["type","version","build"],"properties":{"build":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}}]},"postureDataProcess":{"type":"object","allOf":[{"$ref":"#/definitions/postureDataBase"},{"type":"object","properties":{"binaryHash":{"type":"string"},"isRunning":{"type":"boolean"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}}]},"postureQueries":{"type":"object","required":["policyId","isPassing","postureQueries"],"properties":{"isPassing":{"type":"boolean"},"policyId":{"type":"string"},"policyType":{"$ref":"#/definitions/dialBind"},"postureQueries":{"type":"array","items":{"$ref":"#/definitions/postureQuery"}}}},"postureQuery":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["queryType","isPassing","timeout","timeoutRemaining"],"properties":{"isPassing":{"type":"boolean"},"process":{"$ref":"#/definitions/postureQueryProcess"},"processes":{"type":"array","items":{"$ref":"#/definitions/postureQueryProcess"}},"queryType":{"$ref":"#/definitions/postureCheckType"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}}]},"postureQueryProcess":{"type":"object","properties":{"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"}}},"process":{"type":"object","required":["osType","path"],"properties":{"hashes":{"type":"array","items":{"type":"string"}},"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"},"signerFingerprint":{"type":"string"}}},"processMulti":{"type":"object","required":["osType","path"],"properties":{"hashes":{"type":"array","items":{"type":"string"}},"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}},"reEnroll":{"type":"object","required":["expiresAt"],"properties":{"expiresAt":{"type":"string","format":"date-time"}}},"roleAttributesList":{"description":"An array of role attributes","type":"array","items":{"type":"string"}},"roles":{"type":"array","items":{"type":"string"},"x-omitempty":false},"routerCreate":{"type":"object","required":["name"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"tags":{"$ref":"#/definitions/tags"}}},"routerDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","isVerified","isOnline","fingerprint","cost","noTraversal","disabled"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0},"disabled":{"type":"boolean"},"enrollmentCreatedAt":{"type":"string","format":"date-time","x-nullable":true},"enrollmentExpiresAt":{"type":"string","format":"date-time","x-nullable":true},"enrollmentJwt":{"type":"string","x-nullable":true},"enrollmentToken":{"type":"string","x-nullable":true},"fingerprint":{"type":"string"},"isOnline":{"type":"boolean"},"isVerified":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean"},"unverifiedCertPem":{"type":"string","x-nullable":true,"x-omitempty":false},"unverifiedFingerprint":{"type":"string","x-nullable":true,"x-omitempty":false}}}]},"routerEntityRef":{"type":"object","allOf":[{"$ref":"#/definitions/entityRef"},{"type":"object","required":["isOnline"],"properties":{"isOnline":{"type":"boolean"}}}]},"routerList":{"type":"array","items":{"$ref":"#/definitions/routerDetail"}},"routerPatch":{"type":"object","properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"tags":{"$ref":"#/definitions/tags"}}},"routerUpdate":{"type":"object","required":["name"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"tags":{"$ref":"#/definitions/tags"}}},"sdkInfo":{"description":"SDK information an authenticating client may provide","type":"object","properties":{"appId":{"type":"string"},"appVersion":{"type":"string"},"branch":{"type":"string"},"revision":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}},"semantic":{"type":"string","enum":["AllOf","AnyOf"]},"serviceConfigAssign":{"type":"object","required":["serviceId","configId"],"properties":{"configId":{"type":"string"},"serviceId":{"type":"string"}}},"serviceConfigDetail":{"type":"object","required":["serviceId","service","configId","config"],"properties":{"config":{"$ref":"#/definitions/entityRef"},"configId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"}},"example":{"config":{"_links":{"self":{"href":"./identities/13347602-ba34-4ff7-8082-e533ba945744"}},"id":"13347602-ba34-4ff7-8082-e533ba945744","name":"test-config-02fade09-fcc3-426c-854e-18539726bdc6","urlName":"configs"},"service":{"_links":{"self":{"href":"./services/913a8c63-17a6-44d7-82b3-9f6eb997cf8e"}},"id":"913a8c63-17a6-44d7-82b3-9f6eb997cf8e","name":"netcat4545-egress-r2","urlName":"services"}}},"serviceConfigList":{"type":"array","items":{"$ref":"#/definitions/serviceConfigDetail"}},"serviceConfigsAssignList":{"type":"array","items":{"$ref":"#/definitions/serviceConfigAssign"}},"serviceCreate":{"type":"object","required":["name","encryptionRequired"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"serviceDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","terminatorStrategy","roleAttributes","permissions","configs","config","encryptionRequired","postureQueries"],"properties":{"config":{"description":"map of config data for this service keyed by the config type name. Only configs of the types requested will be returned.","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"permissions":{"$ref":"#/definitions/dialBindArray"},"postureQueries":{"type":"array","items":{"$ref":"#/definitions/postureQueries"}},"roleAttributes":{"$ref":"#/definitions/attributes"},"terminatorStrategy":{"type":"string"}}}]},"serviceEdgeRouterPolicyCreate":{"type":"object","required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"}}},"serviceEdgeRouterPolicyDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","semantic","edgeRouterRoles","edgeRouterRolesDisplay","serviceRoles","serviceRolesDisplay"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"edgeRouterRolesDisplay":{"$ref":"#/definitions/namedRoles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"serviceRolesDisplay":{"$ref":"#/definitions/namedRoles"}}}]},"serviceEdgeRouterPolicyList":{"type":"array","items":{"$ref":"#/definitions/serviceEdgeRouterPolicyDetail"}},"serviceEdgeRouterPolicyPatch":{"type":"object","properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"}}},"serviceEdgeRouterPolicyUpdate":{"type":"object","required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"}}},"serviceList":{"type":"array","items":{"$ref":"#/definitions/serviceDetail"}},"servicePatch":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"servicePolicyCreate":{"type":"object","required":["name","type","semantic"],"properties":{"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/definitions/roles"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/dialBind"}}},"servicePolicyDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","type","semantic","serviceRoles","serviceRolesDisplay","identityRoles","identityRolesDisplay","postureCheckRoles","postureCheckRolesDisplay"],"properties":{"identityRoles":{"$ref":"#/definitions/roles"},"identityRolesDisplay":{"$ref":"#/definitions/namedRoles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/definitions/roles"},"postureCheckRolesDisplay":{"$ref":"#/definitions/namedRoles"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"serviceRolesDisplay":{"$ref":"#/definitions/namedRoles"},"type":{"$ref":"#/definitions/dialBind"}}}]},"servicePolicyList":{"type":"array","items":{"$ref":"#/definitions/servicePolicyDetail"}},"servicePolicyPatch":{"type":"object","properties":{"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/definitions/roles"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/dialBind"}}},"servicePolicyUpdate":{"type":"object","required":["name","type","semantic"],"properties":{"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/definitions/roles"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/dialBind"}}},"serviceUpdate":{"type":"object","required":["name"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"sessionDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["type","apiSessionId","apiSession","serviceId","service","token","edgeRouters","identityId"],"properties":{"apiSession":{"$ref":"#/definitions/entityRef"},"apiSessionId":{"type":"string"},"edgeRouters":{"type":"array","items":{"$ref":"#/definitions/sessionEdgeRouter"}},"identityId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"},"token":{"type":"string"},"type":{"$ref":"#/definitions/dialBind"}}}]},"sessionEdgeRouter":{"allOf":[{"$ref":"#/definitions/commonEdgeRouterProperties"},{"type":"object","required":["urls"],"properties":{"urls":{"type":"object","additionalProperties":{"type":"string"}}}}]},"sessionManagementDetail":{"allOf":[{"$ref":"#/definitions/sessionDetail"},{"type":"object","properties":{"servicePolicies":{"type":"array","items":{"$ref":"#/definitions/entityRef"}}}}]},"sessionManagementList":{"type":"array","items":{"$ref":"#/definitions/sessionManagementDetail"}},"sessionRoutePathDetail":{"type":"object","properties":{"routePath":{"type":"array","items":{"type":"string"}}}},"specBodyDetail":{"type":"string"},"specDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}]},"specList":{"type":"array","items":{"$ref":"#/definitions/specDetail"}},"subTags":{"type":"object","additionalProperties":{"type":"object"}},"tags":{"description":"A map of user defined fields and values. The values are limited to the following types/values: null, string, boolean","allOf":[{"$ref":"#/definitions/subTags"}],"x-nullable":true},"terminatorCost":{"type":"integer","maximum":65535,"minimum":0},"terminatorCostMap":{"type":"object","additionalProperties":{"$ref":"#/definitions/terminatorCost"}},"terminatorCreate":{"type":"object","required":["service","router","address","binding"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/definitions/terminatorCost"},"identity":{"type":"string"},"identitySecret":{"type":"string","format":"byte"},"precedence":{"$ref":"#/definitions/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/definitions/tags"}}},"terminatorDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["serviceId","service","routerId","router","binding","address","identity","cost","precedence","dynamicCost"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/definitions/terminatorCost"},"dynamicCost":{"$ref":"#/definitions/terminatorCost"},"identity":{"type":"string"},"precedence":{"$ref":"#/definitions/terminatorPrecedence"},"router":{"$ref":"#/definitions/entityRef"},"routerId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"}}}]},"terminatorList":{"type":"array","items":{"$ref":"#/definitions/terminatorDetail"}},"terminatorPatch":{"type":"object","properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/definitions/terminatorCost"},"precedence":{"$ref":"#/definitions/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/definitions/tags"}}},"terminatorPrecedence":{"type":"string","enum":["default","required","failed"]},"terminatorPrecedenceMap":{"type":"object","additionalProperties":{"$ref":"#/definitions/terminatorPrecedence"}},"terminatorUpdate":{"type":"object","required":["service","router","address","binding"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/definitions/terminatorCost"},"precedence":{"$ref":"#/definitions/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/definitions/tags"}}},"traceDetail":{"type":"object","properties":{"enabled":{"type":"boolean"},"traceId":{"type":"string"},"until":{"type":"string","format":"date-time"}}},"traceDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/traceDetail"},"meta":{"$ref":"#/definitions/meta"}}},"traceSpec":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"string"}},"duration":{"type":"string"},"enabled":{"type":"boolean"},"traceId":{"type":"string"}}},"username":{"type":"string","maxLength":100,"minLength":4},"usernameNullable":{"type":"string","maxLength":100,"minLength":4,"x-nullable":true},"version":{"type":"object","properties":{"apiVersions":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/definitions/apiVersion"}}},"buildDate":{"type":"string","example":"2020-02-11 16:09:08"},"capabilities":{"type":"array","items":{"type":"string"}},"revision":{"type":"string","example":"ea556fc18740"},"runtimeVersion":{"type":"string","example":"go1.13.5"},"version":{"type":"string","example":"v0.9.0"}}},"versionInfo":{"type":"object","required":["os","version","arch","buildDate","revision"],"properties":{"arch":{"type":"string"},"buildDate":{"type":"string"},"os":{"type":"string"},"revision":{"type":"string"},"version":{"type":"string"}}}},"securityDefinitions":{"oauth2":{"type":"oauth2","flow":"accessCode","authorizationUrl":"/oidc/authorize","tokenUrl":"/oidc/token","scopes":{"openid":"openid"}},"ztSession":{"description":"An API Key that is provided post authentication","type":"apiKey","name":"zt-session","in":"header"}}}}},"docusaurus-theme-classic":{},"docusaurus-theme-search-algolia":{},"docusaurus-theme-redoc":{},"docusaurus-plugin-client-redirects":{},"docusaurus-theme-mermaid":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}')}}]);