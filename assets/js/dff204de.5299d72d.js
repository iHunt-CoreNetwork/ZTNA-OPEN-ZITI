"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[8059],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=c(n),u=i,h=d["".concat(s,".").concat(u)]||d[u]||p[u]||a;return n?r.createElement(h,l(l({ref:t},m),{},{components:n})):r.createElement(h,l({ref:t},m))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},11070:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));const a={},l="Enrollment",o={unversionedId:"learn/core-concepts/security/enrollment",id:"learn/core-concepts/security/enrollment",title:"Enrollment",description:"Enrollment is the process of some Edge client or Edge Router associating itself with a Ziti network. Client enrollment",source:"@site/docs/learn/core-concepts/security/enrollment.md",sourceDirName:"learn/core-concepts/security",slug:"/learn/core-concepts/security/enrollment",permalink:"/docs/learn/core-concepts/security/enrollment",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/enrollment.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Connection Security",permalink:"/docs/learn/core-concepts/security/connection-security"},next:{title:"Session Types",permalink:"/docs/learn/core-concepts/security/sessions"}},s={},c=[{value:"Routers",id:"routers",level:2},{value:"Router Enrollment Extension",id:"router-enrollment-extension",level:3},{value:"Clients",id:"clients",level:2},{value:"OTT Enrollment",id:"ott-enrollment",level:3},{value:"Create",id:"create",level:4},{value:"Ziti CLI",id:"ziti-cli",level:5},{value:"Edge Management API",id:"edge-management-api",level:4},{value:"Read",id:"read",level:3},{value:"Ziti CLI",id:"ziti-cli-1",level:4},{value:"Edge Management API",id:"edge-management-api-1",level:4},{value:"OTT CA Enrollment",id:"ott-ca-enrollment",level:3},{value:"Create",id:"create-1",level:4},{value:"Edge Management API",id:"edge-management-api-2",level:5},{value:"Auto CA Enrollment",id:"auto-ca-enrollment",level:3},{value:"Client Re-Enrollment",id:"client-re-enrollment",level:3}],m={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"enrollment"},"Enrollment"),(0,i.kt)("p",null,"Enrollment is the process of some Edge client or Edge Router associating itself with a Ziti network. Client enrollment\nresults in the creation of an identity or associating security credentials with a pre-provisioned identity.\nZiti Router enrollment is exclusively associating security credentials with a pre-provisioned Edge Router."),(0,i.kt)("p",null,"Edge clients \"learn\" the controller's address and port when they enroll, so it is necessary to re-enroll or replace the identity if the controller's advertised address or port changes."),(0,i.kt)("h2",{id:"routers"},"Routers"),(0,i.kt)("p",null,"Upon creation of an Edge Router, enrollment details in the form of a JWT that acts as a one-time-token become\navailable in the ",(0,i.kt)("inlineCode",{parentName:"p"},"enrollmentJWT")," field."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Create:"),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"POST /edge/management/v1/edge-routers")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "name": "test3"\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Get:"),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"GET /edge/management/v1/edge-routers/PYvobLGzj")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'{\n    "data": {\n        ...,\n        "name": "test3",\n        "enrollmentJwt": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImVyb3R0IiwiZXhwIjoxNjYwMDU4ODU5LCJpc3MiOiJodHRwczovLzEyNy4wLjAuMToxMjgwIiwianRpIjoiYjkzZjg2NTgtZGQ3ZC00NTc4LWJkYTYtMmZhZWNlZjkyMTc3Iiwic3ViIjoiUFl2b2JMR3pqIn0.UN6QiifUfCMUvzsKwjSUarl9iWyOr1zsaa_6VzNTRn7EQ_PjtHFMm9QEjj8ErtkNIbyh-vaVLZL-TPOAIZsaQX2Ye5k8-M7dbWGiQ35DbgQaJSWLMJ0xzazHYBvhZvZ9Wc5F96HKA_qTGiSq5Lsm3WraAffepEqCe_F_HwBwjBPrsgO9U23pKuoz1X8pQbAj95yoz6rBNWo63mlZDeDn7McEiJLY0i7EyPQ3paEjJ0sSntVjfmZ7aPgThoG2HCYbhvj_DkXD_HRSwMxoQHR1yIA4sW4ukdQ_S3nVMurLOG06d0VSUzlIecQSuJT8XV56AhqZ-ZNIEzp-bp2YaL1FlA",\n        "enrollmentToken": "b93f8658-dd7d-4578-bda6-2faecef92177",\n        ...\n        "isVerified": false,\n        ...\n    },\n    "meta": {}\n}\n')),(0,i.kt)("p",null,"To enroll a router, deliver the ",(0,i.kt)("inlineCode",{parentName:"p"},"enrollmentJWT")," to the host that will run the Edge Router and perform enrollment via:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ziti router enroll -j <jwt_path>")),(0,i.kt)("h3",{id:"router-enrollment-extension"},"Router Enrollment Extension"),(0,i.kt)("p",null,"Routers will automatically maintain their enrollment by refreshing their certificates seven days before they expire."),(0,i.kt)("h2",{id:"clients"},"Clients"),(0,i.kt)("p",null,"Client enroll in one of two major categories:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"pre-provisioned - identities are created before the client attempts to run and are provided with one-time-tokens to enroll",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"OTT, OTT CA"))),(0,i.kt)("li",{parentName:"ul"},"post-provisioned - an identity is created during enrollment",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Auto CA")))),(0,i.kt)("h3",{id:"ott-enrollment"},"OTT Enrollment"),(0,i.kt)("p",null,"OTT Enrollment involves creating an identity and then delivering the enrollment JWT to client software that can then\ncomplete enrollment."),(0,i.kt)("h4",{id:"create"},"Create"),(0,i.kt)("h5",{id:"ziti-cli"},"Ziti CLI"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ziti edge create identity [device|service|user] test-user10 -j ./my.token.jwt")),(0,i.kt)("h4",{id:"edge-management-api"},"Edge Management API"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST /edge/management/v1/identities")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "name": "test-user10",\n  "type": "User",\n  "isAdmin": false,\n  "roleAttributes": [\n    "dial"\n  ],\n  "enrollment": {\n    "ott": true\n  }\n}\n')),(0,i.kt)("h3",{id:"read"},"Read"),(0,i.kt)("h4",{id:"ziti-cli-1"},"Ziti CLI"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ziti edge list identities 'id=\"-ItUkLGKUE\"'")),(0,i.kt)("h4",{id:"edge-management-api-1"},"Edge Management API"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /edge/management/v1/identities/-ItUkLGKUE")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'{\n    "data": {\n        ...\n        "id": "-ItUkLGKUE",\n        "tags": {},\n       ...\n        "enrollment": {\n            "ott": {\n                "expiresAt": "2022-08-09T15:37:16.619Z",\n                "id": "uFtU28GKj",\n                "jwt": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6Im90dCIsImV4cCI6MTY2MDA1OTQzNiwiaXNzIjoiaHR0cHM6Ly8xMjcuMC4wLjE6MTI4MCIsImp0aSI6IjdjM2VmOWFkLTE2ZjAtNDk4OS05MDQ3LTNmYzFmYTE5NDgyYyIsInN1YiI6Ii1JdFVrTEdLVUUifQ.JnLlHP9wdMlfgteAf4Y-KMnxRv_00EOhEtRRmMABg_dD7xRK2RQt-bwt5rkosfgghZPR4jppuR9Prg1F1skf7JGa9Z-CmEIVvmHB8LAT6AvNnRmfkNBioD4g-Q0LP1o_xZyfePUslSxwNYPevzYYdCwgXK-TuIW34sCirX1edZ25eRtlnTUq9T0cgqMyVCEtX03WkAhb8C_TLIzhWxCwxxJTY3lgOqwuMXQEqLrWFiuG6Q1aIAA8hjh57043z5a1GQ8sUGIWP0U7YuXBWzl50VY4fenrstaaanweQLDPCZlZGPKh08mPCAGAc4Fun10hBzYaezJXGb8BpEPKXrtmLA",\n                "token": "7c3ef9ad-16f0-4989-9047-3fc1fa19482c"\n            }\n        },\n        ...\n    },\n    "meta": {}\n}\n')),(0,i.kt)("p",null,"Alternatively, enrollments for an identity can be reviewed at ",(0,i.kt)("inlineCode",{parentName:"p"},"/edge/management/v1/identities/<id>/enrollments")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"/edge/management/v1/enrollments")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"ziti edge list enrollments"),"."),(0,i.kt)("h3",{id:"ott-ca-enrollment"},"OTT CA Enrollment"),(0,i.kt)("p",null,"OTT CA Enrollment requires that the enrolling client also has an existing client certificate signed by a\n",(0,i.kt)("a",{parentName:"p",href:"./authentication/third-party-cas"},"3rd Party CA"),". When creating an identity the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," of the target\n",(0,i.kt)("a",{parentName:"p",href:"./authentication/third-party-cas"},"3rd Party CA")," is specified."),(0,i.kt)("h4",{id:"create-1"},"Create"),(0,i.kt)("h5",{id:"edge-management-api-2"},"Edge Management API"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST /edge/management/v1/identities")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "name": "test-user10",\n  "type": "User",\n  "isAdmin": false,\n  "roleAttributes": [\n    "dial"\n  ],\n  "enrollment": {\n    "ottca": "<ott-ca-id>"\n  }\n}\n')),(0,i.kt)("p",null,"An enrollment JWT can be retrieved in the same manner as ",(0,i.kt)("a",{parentName:"p",href:"#ott-enrollment"},"OTT Enrollment")),(0,i.kt)("h3",{id:"auto-ca-enrollment"},"Auto CA Enrollment"),(0,i.kt)("p",null,"Auto CA enrollment allows a ",(0,i.kt)("a",{parentName:"p",href:"./authentication/third-party-cas"},"3rd Party CA")," to have clients enroll with a\nZiti network without first creating an identity or distributing a JWT enrollment token. Create a\n",(0,i.kt)("a",{parentName:"p",href:"./authentication/third-party-cas"},"3rd Party CA")," and ensure that ",(0,i.kt)("inlineCode",{parentName:"p"},"isAutoCaEnrollmentEnabled")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("p",null,"The name of enrolling clients is controlled by the ",(0,i.kt)("inlineCode",{parentName:"p"},"identityNameFormat")," of the ",(0,i.kt)("a",{parentName:"p",href:"./authentication/third-party-cas"},"3rd Party CA"),".\nThe format support a number of replacement strings:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[caName]")," - the Ziti ",(0,i.kt)("inlineCode",{parentName:"li"},"name")," of the ",(0,i.kt)("a",{parentName:"li",href:"./authentication/third-party-cas"},"3rd Party CA")," that validates the enrolling certificate"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[caId]")," - the Ziti ",(0,i.kt)("inlineCode",{parentName:"li"},"id")," of the ",(0,i.kt)("a",{parentName:"li",href:"./authentication/third-party-cas"},"3rd Party CA")," that validates the enrolling certificate"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[commonName]")," - the common name of the enrolling certificate"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[requestedName]")," - clients can submit a requested name during enrollment"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[identityId]")," - the ",(0,i.kt)("inlineCode",{parentName:"li"},"id")," of the created identity")),(0,i.kt)("p",null,"The default format is ",(0,i.kt)("inlineCode",{parentName:"p"},"[caName] - [commonName]"),"."),(0,i.kt)("p",null,"Identity names are unique and if a collision occurs, incrementing numbers are appended."),(0,i.kt)("h3",{id:"client-re-enrollment"},"Client Re-Enrollment"),(0,i.kt)("p",null,"Clients may request to extend enrollments that generated x509 certificates if the client certificate was issued by\nZiti. If the client's certificate was issued by a ",(0,i.kt)("a",{parentName:"p",href:"./authentication/third-party-cas"},"3rd Party CA"),", the\nclient certificate renewal must be handled outside of Ziti."))}p.isMDXComponent=!0}}]);