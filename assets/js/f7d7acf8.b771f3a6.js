"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[8035],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=i.createContext({}),l=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=l(e.components);return i.createElement(c.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},h=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(t),h=o,m=p["".concat(c,".").concat(h)]||p[h]||u[h]||r;return t?i.createElement(m,a(a({ref:n},d),{},{components:t})):i.createElement(m,a({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=h;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<r;l++)a[l]=t[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}h.displayName="MDXCreateElement"},98945:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=t(87462),o=(t(67294),t(3905));const r={},a="Connection Security",s={unversionedId:"learn/core-concepts/security/connection-security",id:"learn/core-concepts/security/connection-security",title:"Connection Security",description:"Ziti networks use robust modern cryptography and security mechanisms. Each component within a Ziti network uses",source:"@site/docs/learn/core-concepts/security/connection-security.md",sourceDirName:"learn/core-concepts/security",slug:"/learn/core-concepts/security/connection-security",permalink:"/docs/learn/core-concepts/security/connection-security",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/connection-security.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Session Diagram",permalink:"/docs/learn/core-concepts/security/SessionsAndConnections"},next:{title:"Enrollment",permalink:"/docs/learn/core-concepts/security/enrollment"}},c={},l=[{value:"Control and Link Connection Details",id:"control-and-link-connection-details",level:2},{value:"Controller API Connection Details",id:"controller-api-connection-details",level:2},{value:"Edge Connection Details",id:"edge-connection-details",level:2},{value:"Service Connection Details",id:"service-connection-details",level:2}],d={toc:l},p="wrapper";function u(e){let{components:n,...r}=e;return(0,o.kt)(p,(0,i.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connection-security"},"Connection Security"),(0,o.kt)("p",null,"Ziti networks use robust modern cryptography and security mechanisms. Each component within a Ziti network uses\nsecurity technology that fits its role and use-cases."),(0,o.kt)("p",null,"Here are the different types of connections:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"control")," -  connections between a controller and a router that manage network state. Secured via mTLS 1.2+"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"link")," - connections between routers to form a mesh network. Secured via mTLS 1.2+"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"edge")," - multiplexed connections between an SDK and an edge router that carries ",(0,o.kt)("inlineCode",{parentName:"li"},"service")," connections. Secured via mTLS 1.2+"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"controller APIs")," - connections between a controller and an SDK (or other software) via HTTPS and/or secure websockets. Secured via TLS, mTLS 1.2+"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"service")," - connections carried by an ",(0,o.kt)("inlineCode",{parentName:"li"},"edge")," connection and establish communication between a client and host. Application data is end-to-end encrypted via libsodium public private key cryptography.")),(0,o.kt)("p",null,"Below is a diagram showing the ",(0,o.kt)("inlineCode",{parentName:"p"},"control"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"link"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"edge"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"controller API")," connections. The ",(0,o.kt)("inlineCode",{parentName:"p"},"service")," connections\nexist within an ",(0,o.kt)("inlineCode",{parentName:"p"},"edge")," connection and are pictured in more detail in the second diagram."),(0,o.kt)("p",null,(0,o.kt)("a",{target:"_blank",href:t(85514).Z},(0,o.kt)("img",{alt:"image",src:t(32889).Z,width:"2755",height:"1300"}))),(0,o.kt)("p",null,"Connections between SDKs and Edge Routers are called ",(0,o.kt)("inlineCode",{parentName:"p"},"edge")," connections. ",(0,o.kt)("inlineCode",{parentName:"p"},"edge")," connections are multiplexed and carry\nmultiple ",(0,o.kt)("inlineCode",{parentName:"p"},"service")," connections. Each connection is for a specific service and secured with end-to-end encryption in\norder to transport application/service data securely between the two intended parties only."),(0,o.kt)("p",null,(0,o.kt)("a",{target:"_blank",href:t(69737).Z},(0,o.kt)("img",{alt:"image",src:t(25532).Z,width:"2067",height:"793"}))),(0,o.kt)("h2",{id:"control-and-link-connection-details"},"Control and Link Connection Details"),(0,o.kt)("p",null,"Routers work in concert with a controller to establish a mesh network of ",(0,o.kt)("inlineCode",{parentName:"p"},"link")," connections between routers. Routers coordinate\nwith a controller over a ",(0,o.kt)("inlineCode",{parentName:"p"},"control")," connection. These connections are initialized and maintained while the network is in\noperation. ",(0,o.kt)("inlineCode",{parentName:"p"},"control")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"link")," connections are always authenticated using mTLS. The certificates that enable mTLS\nfor ",(0,o.kt)("inlineCode",{parentName:"p"},"control")," connections are exchanged during router enrollment. The ",(0,o.kt)("inlineCode",{parentName:"p"},"control")," connection between controllers and\nEdge Routers is used to continuously update routers with the proper certificate information for all other routers in\nthe mesh."),(0,o.kt)("h2",{id:"controller-api-connection-details"},"Controller API Connection Details"),(0,o.kt)("p",null,"Controller APIs provide ways for clients (SDKs or otherwise) to interact with a network. The ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/developer/api/edge-management-reference"},"edge management API"),"\nis used for configuration and maintenance. The ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/developer/api/edge-client-reference"},"edge client API"),"\nis used to allow clients to authenticate, discover services, request ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/sessions#session"},"Sessions"),",\ndiscover Edge Routers, and to perform basic self-maintenance."),(0,o.kt)("p",null,"Access to the APIs requires ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/authentication/auth"},"authentication")," which results in an ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/authentication/auth#api-sessions"},"API Session"),"\nbeing returned to the client. An ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/authentication/auth#api-sessions"},"API Session")," is required to make ",(0,o.kt)("inlineCode",{parentName:"p"},"edge")," connections."),(0,o.kt)("h2",{id:"edge-connection-details"},"Edge Connection Details"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"edge")," connections are made between SDKs and Edge Routers. They require the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"a valid ",(0,o.kt)("a",{parentName:"li",href:"/docs/learn/core-concepts/security/authentication/auth#api-sessions"},"API Session")," represented by a token"),(0,o.kt)("li",{parentName:"ul"},"a valid x509 certificate associated with the supplied ",(0,o.kt)("a",{parentName:"li",href:"/docs/learn/core-concepts/security/authentication/auth#api-sessions"},"API Session")),(0,o.kt)("li",{parentName:"ul"},"a target Edge Router")),(0,o.kt)("p",null,"An ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/authentication/auth#api-sessions"},"API Session")," is obtained during authentication with either the edge client\nor management APIs. It is represented as a token. The x509 certificate used to establish the mTLS connection may\neither be the certificate used during authentication (if used) or an ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/authentication/api-session-certificates"},"API Session Certificate"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"edge")," connections once establish allow the use of ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/sessions#session"},"Session")," tokens to establish\n",(0,o.kt)("inlineCode",{parentName:"p"},"service")," connections. When a ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/sessions#session"},"Session")," is created, a list of valid Edge Router\nis included in the response."),(0,o.kt)("h2",{id:"service-connection-details"},"Service Connection Details"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"service")," connections represent an SDK that has connected to a service (dial) or is hosting a service (bind). To\nestablish a ",(0,o.kt)("inlineCode",{parentName:"p"},"service")," connection of either type the following is required:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"an ",(0,o.kt)("inlineCode",{parentName:"li"},"edge")," connection to an edge router that has the correct policies in place to support the target service and intent (dial/bind)"),(0,o.kt)("li",{parentName:"ul"},"a ",(0,o.kt)("a",{parentName:"li",href:"/docs/learn/core-concepts/security/sessions#session"},"Session")," for the target service and intent (dial/bind)")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/sessions#session"},"Sessions")," are issued by the controller's edge client API. A valid ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/sessions#session"},"Sessions")," token\nmust be included with dial and bind requests. Edge Routers validate API Session tokens continuously. If valid, the Edge\nRouter will facilitate the connecting the client to a service or registering the client as a host."),(0,o.kt)("p",null,"Should a ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/sessions#session"},"Session")," become invalid at any point, any existing ",(0,o.kt)("inlineCode",{parentName:"p"},"service")," connection that\nwas established using the invalidated Session will be terminated. Attempts to re-establish connection with the\ninvalidated ",(0,o.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/security/sessions#session"},"Session")," will be refused."))}u.isMDXComponent=!0},69737:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/files/connections-edge-sdk-sdk-0f9f5a0ab982015fb9b67b5cfb807715.png"},85514:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/files/connections-585b0f4d2d57d592e45386d4f39e7c58.png"},25532:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/connections-edge-sdk-sdk-0f9f5a0ab982015fb9b67b5cfb807715.png"},32889:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/connections-585b0f4d2d57d592e45386d4f39e7c58.png"}}]);