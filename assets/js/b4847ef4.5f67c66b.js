"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[9769],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),c=p(n),d=o,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(g,l(l({ref:t},u),{},{components:n})):r.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[c]="string"==typeof e?e:o,l[1]=a;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},57317:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const i={title:"Logging"},l=void 0,a={unversionedId:"reference/logging",id:"reference/logging",title:"Logging",description:"This article is about log messages from the ziti CLI that is used to run the controller and router. See the Linux tunneler reference for details about messages from ziti-edge-tunnel.",source:"@site/docs/reference/40-logging.mdx",sourceDirName:"reference",slug:"/reference/logging",permalink:"/docs/reference/logging",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/40-logging.mdx",tags:[],version:"current",sidebarPosition:40,frontMatter:{title:"Logging"},sidebar:"docsSidebar",previous:{title:"Router",permalink:"/docs/reference/configuration/router"},next:{title:"Ziti Developer Resources",permalink:"/docs/reference/developer/"}},s={},p=[{value:"Levels",id:"levels",level:2},{value:"Formats",id:"formats",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This article is about log messages from the ",(0,o.kt)("inlineCode",{parentName:"p"},"ziti")," CLI that is used to run the controller and router. See ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting"},"the Linux tunneler reference")," for details about messages from ",(0,o.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel"),"."),(0,o.kt)("h2",{id:"levels"},"Levels"),(0,o.kt)("p",null,"The default log level is ",(0,o.kt)("inlineCode",{parentName:"p"},"INFO"),". This means that log messages ",(0,o.kt)("inlineCode",{parentName:"p"},"INFO"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"WARNING"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ERROR"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"FATAL")," will all be emitted. Enable verbose logging by adding ",(0,o.kt)("inlineCode",{parentName:"p"},"--verbose or -v")," to the command being executed. Verbose mode will additionally emit ",(0,o.kt)("inlineCode",{parentName:"p"},"DEBUG")," messages."),(0,o.kt)("h2",{id:"formats"},"Formats"),(0,o.kt)("p",null,"Adjust the log format with option ",(0,o.kt)("inlineCode",{parentName:"p"},"--log-formatter")," (",(0,o.kt)("inlineCode",{parentName:"p"},"json"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"text"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"pfxlog"),"). "),(0,o.kt)("p",null,"The default log format is ",(0,o.kt)("inlineCode",{parentName:"p"},"json")," when is running in the background (no tty)."),(0,o.kt)("br",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'{"file":"github.com/openziti/ziti/controller/network/network.go:927","func":"github.com/openziti/ziti/controller/network.(*Network).Run","level":"info","msg":"started","time":"2024-05-22T09:20:06.423Z"}\n')),(0,o.kt)("br",null),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"text")," format has the same level of detail and is the default when running in the foreground (with tty)."),(0,o.kt)("br",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'time="2024-05-22T09:23:27-04:00" level=info msg=started func="github.com/openziti/ziti/controller/network.(*Network).Run" file="github.com/openziti/ziti/controller/network/network.go:927"\n')),(0,o.kt)("br",null),(0,o.kt)("p",null,"The simplified, human-friendly format is ",(0,o.kt)("inlineCode",{parentName:"p"},"pfxlog"),". This format can also be enabled by setting environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"PFXLOG_NO_JSON=true"),"."),(0,o.kt)("br",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"INFO ziti/controller/network.(*Network).Run: started\n")))}m.isMDXComponent=!0}}]);