"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[8520],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65471:(e,t,n)=>{n.d(t,{Z:()=>h});var r=n(87462),a=n(67294),l=n(86010),i=n(72389),o=n(86043);const s={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};function u(e){return!!e&&("SUMMARY"===e.tagName||u(e.parentElement))}function c(e,t){return!!e&&(e===t||c(e.parentElement,t))}function d(e){let{summary:t,children:n,...d}=e;const p=(0,i.Z)(),m=(0,a.useRef)(null),{collapsed:f,setCollapsed:h}=(0,o.u)({initialState:!d.open}),[g,b]=(0,a.useState)(d.open),k=a.isValidElement(t)?t:a.createElement("summary",null,t??"Details");return a.createElement("details",(0,r.Z)({},d,{ref:m,open:g,"data-collapsed":f,className:(0,l.Z)(s.details,p&&s.isBrowser,d.className),onMouseDown:e=>{u(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const t=e.target;u(t)&&c(t,m.current)&&(e.preventDefault(),f?(h(!1),b(!0)):h(!0))}}),k,a.createElement(o.z,{lazy:!1,collapsed:f,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{h(e),b(!e)}},a.createElement("div",{className:s.collapsibleContent},n)))}const p={details:"details_b_Ee"},m="alert alert--info";function f(e){let{...t}=e;return a.createElement(d,(0,r.Z)({},t,{className:(0,l.Z)(m,p.details,t.className)}))}function h(e){const t=a.Children.toArray(e.children),n=t.find((e=>a.isValidElement(e)&&"summary"===e.props?.mdxType)),l=a.createElement(a.Fragment,null,t.filter((e=>e!==n)));return a.createElement(f,(0,r.Z)({},e,{summary:n}),l)}},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(67294),a=n(86010);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l.tabItem,i),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>x});var r=n(87462),a=n(67294),l=n(86010),i=n(12466),o=n(16550),s=n(91980),u=n(67392),c=n(50012);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,l=p(e),[i,o]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[s,u]=f({queryString:n,groupId:r}),[d,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:r}),g=(()=>{const e=s??d;return m({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),h(e)}),[u,h,l]),tabValues:l}}var g=n(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==o&&(d(t),s(r))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,l.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:r}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function v(e){const t=h(e);return a.createElement("div",{className:(0,l.Z)("tabs-container",b.tabList)},a.createElement(k,(0,r.Z)({},e,t)),a.createElement(y,(0,r.Z)({},e,t)))}function x(e){const t=(0,g.Z)();return a.createElement(v,(0,r.Z)({key:String(t)},e))}},3104:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905)),l=(n(74866),n(85162),n(65471));const i={title:"Linux Tunneller"},o=void 0,s={unversionedId:"reference/tunnelers/linux/index",id:"reference/tunnelers/linux/index",title:"Linux Tunneller",description:"The purpose of the tunneller is to configure host access. This means all users and all processes on the host will share",source:"@site/docs/reference/tunnelers/60-linux/index.mdx",sourceDirName:"reference/tunnelers/60-linux",slug:"/reference/tunnelers/linux/",permalink:"/docs/reference/tunnelers/linux/",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/60-linux/index.mdx",tags:[],version:"current",frontMatter:{title:"Linux Tunneller"},sidebar:"docsSidebar",previous:{title:"iOS",permalink:"/docs/reference/tunnelers/iOS"},next:{title:"Debian",permalink:"/docs/reference/tunnelers/linux/debian-package"}},u={},c=[{value:"Install Linux Package",id:"install-linux-package",level:2},{value:"Adding Identities",id:"adding-identities",level:2},{value:"Add a Single Identity",id:"add-a-single-identity",level:3},{value:"Load Identities Directory",id:"load-identities-directory",level:3},{value:"Run with Docker",id:"run-with-docker",level:2},{value:"Install a Pre-Release",id:"install-a-pre-release",level:2},{value:"DEB Pre-Release",id:"deb-pre-release",level:3},{value:"RPM Pre-Release",id:"rpm-pre-release",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}],d={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The purpose of the tunneller is to configure host access. This means all users and all processes on the host will share\nthe same level of access. This is accomplished by configuring the OS to have an OpenZiti DNS nameserver and IP routes\nfor authorized services."),(0,a.kt)("h2",{id:"install-linux-package"},"Install Linux Package"),(0,a.kt)("p",null,"Reasons to use the package:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the tunneller as a systemd service."),(0,a.kt)("li",{parentName:"ol"},"Create permissions and policies for the tunneller to run as a non-root user."),(0,a.kt)("li",{parentName:"ol"},"Automatically enroll the identity and clean up the enrollment token in identity directory."),(0,a.kt)("li",{parentName:"ol"},"Automatically upgrade the tunneller when a new package is available.")),(0,a.kt)("p",null,"Linux DEB packages are currently available for the x86_64 and arm64 platforms and RPM packages are available for x86_64.\nARM/v7 (32bit) binaries are available from GitHub. See ",(0,a.kt)("a",{parentName:"p",href:"#manual-installation"},"manual installation"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/reference/tunnelers/linux/debian-package"},"Debian")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/reference/tunnelers/linux/redhat-package"},"RedHat")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/reference/tunnelers/linux/manual-installation"},"Manual"))),(0,a.kt)("h2",{id:"adding-identities"},"Adding Identities"),(0,a.kt)("p",null,"The tunneller can run with zero or more identities loaded, and needs at least one to make OpenZiti services available on\nthe host. Adding an identity means providing a JWT enrollment token which is used by the tunneller to obtain a client\ncertificate from the OpenZiti controller. ",(0,a.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/identities/overview"},"Learn more about OpenZiti Identities"),"."),(0,a.kt)("h3",{id:"add-a-single-identity"},"Add a Single Identity"),(0,a.kt)("p",null,"Root and members of group ",(0,a.kt)("inlineCode",{parentName:"p"},"ziti")," may add an identity without restarting. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'sudo ziti-edge-tunnel add --jwt "$(< ./in-file.jwt)" --identity myIdentityName\n')),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/learn/core-concepts/identities/enrolling"},"Learn more about enrolling"),"."),(0,a.kt)("h3",{id:"load-identities-directory"},"Load Identities Directory"),(0,a.kt)("p",null,"The tunneller will load all enrolled identities in the ",(0,a.kt)("inlineCode",{parentName:"p"},"--identity-dir")," directory at startup. The default location for\nidentities is is ",(0,a.kt)("inlineCode",{parentName:"p"},"/opt/openziti/etc/identities"),". Add enrolled identity files to this directory by copying the JSON file\ninto the directory and setting permissions for group ",(0,a.kt)("inlineCode",{parentName:"p"},"ziti"),"."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Linux package users may place enrollment tokens named ",(0,a.kt)("inlineCode",{parentName:"p"},"*.jwt")," in this directory for automatic enrollment at next\nstartup.")),(0,a.kt)("p",null,"Ensure the identities directory is writable by group ",(0,a.kt)("inlineCode",{parentName:"p"},"ziti")," and not readable by others to protect the confidentiality of\nthe identities."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo chown -cR :ziti        /opt/openziti/etc/identities\nsudo chmod -cR ug=rwX,o-rwx /opt/openziti/etc/identities\n")),(0,a.kt)("p",null,"The tunneller process needs to be restarted if the contents of ",(0,a.kt)("inlineCode",{parentName:"p"},"/opt/openziti/etc/identities")," change."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"# package users can restart with systemd\nsudo systemctl restart ziti-edge-tunnel.service\n")),(0,a.kt)("h2",{id:"run-with-docker"},"Run with Docker"),(0,a.kt)("p",null,"Reference ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/tunnelers/docker/"},"the article about running the Linux tunneller in a container")," for guidance and\nexamples."),(0,a.kt)("h2",{id:"install-a-pre-release"},"Install a Pre-Release"),(0,a.kt)("h3",{id:"deb-pre-release"},"DEB Pre-Release"),(0,a.kt)(l.Z,{mdxType:"Details"},(0,a.kt)("summary",null,"Pre-release repo for Debian-based distros"),(0,a.kt)("p",null,"You may use the following script to install the pre-release version of the tunneller for any supported Ubuntu LTS."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"UBUNTU_LTS=focal;\n\ncurl -sSLf https://get.openziti.io/tun/package-repos.gpg \\\n| sudo gpg --dearmor --output /usr/share/keyrings/openziti.gpg;\nsudo chmod +r /usr/share/keyrings/openziti.gpg;\n\nsudo tee /etc/apt/sources.list.d/ziti-edge-tunnel-testing.list >/dev/null <<EOF;\ndeb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-test ${UBUNTU_LTS} main\nEOF\n\nsudo apt update;\nsudo apt install ziti-edge-tunnel;\nziti-edge-tunnel version;\n"))),(0,a.kt)("h3",{id:"rpm-pre-release"},"RPM Pre-Release"),(0,a.kt)(l.Z,{mdxType:"Details"},(0,a.kt)("summary",null,"Pre-release repo for RedHat-based distros"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"sudo tee /etc/yum.repos.d/ziti-edge-tunnel-testing.repo >/dev/null <<\\EOF;\n[OpenZitiTunnelTesting]\nname=OpenZiti Tunnel Testing\nbaseurl=https://packages.openziti.org/zitipax-openziti-rpm-test/redhat$releasever/$basearch\nenabled=1\ngpgcheck=0\ngpgkey=https://packages.openziti.org/zitipax-openziti-rpm-test/redhat$releasever/$basearch/repodata/repomd.xml.key\nrepo_gpgcheck=1\nEOF\n\nsudo dnf update;\nsudo dnf install ziti-edge-tunnel;\nziti-edge-tunnel version;\n"))),(0,a.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("p",null,"Refer to ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting"},"the troubleshooting guide")))}m.isMDXComponent=!0}}]);